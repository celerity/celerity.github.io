"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[19029],{77839:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>d});var i=a(74848),c=a(28453);const o='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page1806345304F2D346"><span>struct alloc_instruction_record</span></a></li></ul></nav>\n<main><h1>struct alloc_instruction_record</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct alloc_instruction_record : public implement_acceptor { /* full declaration omitted */ };</code></pre><section><h2>Description</h2><p><p>IDAG record type for <code>alloc_instruction</code>.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/recorders.h#L183">include/recorders.h:183</a></p></aside><section><p>Inherits from: implement_acceptor</p></section><section><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_allocation_id" data-member-name="allocation_id">  <a href="/docs/api/records/1824FC8BEBAA39C7/">detail::allocation_id</a> <b>allocation_id</b></dt><dt class="is-family-code" id="var_size_bytes" data-member-name="size_bytes">  size_t <b>size_bytes</b></dt><dt class="is-family-code" id="var_alignment_bytes" data-member-name="alignment_bytes">  size_t <b>alignment_bytes</b></dt><dt class="is-family-code" id="var_origin" data-member-name="origin">  <a href="/docs/api/enums/5D9BEFD50FB5F689/">alloc_origin</a> <b>origin</b></dt><dt class="is-family-code" id="var_buffer_allocation" data-member-name="buffer_allocation">  <a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;buffer_allocation_record&gt; <b>buffer_allocation</b></dt><dt class="is-family-code" id="var_num_chunks" data-member-name="num_chunks">  <a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;size_t&gt; <b>num_chunks</b></dt></dl></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#6581F99317FF0C10"><b>alloc_instruction_record</b></a>(const alloc_instruction &amp; ainstr, alloc_origin origin, std::optional&lt;buffer_allocation_record&gt; buffer_allocation, std::optional&lt;size_t&gt; num_chunks)</li></ul></section><section><h2>Member Functions</h2><section><h3 id="6581F99317FF0C10" data-function-name="alloc_instruction_record"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6581F99317FF0C10">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/257C21129DAD63BF/">alloc_instruction</a>_record(\n    const alloc_instruction&amp; ainstr,\n    <a href="/docs/api/enums/5D9BEFD50FB5F689/">alloc_origin</a> origin,\n    <a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;buffer_allocation_record&gt;\n        buffer_allocation,\n    <a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;size_t&gt; num_chunks)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/recorders.h#L196">include/recorders.h:196</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/257C21129DAD63BF/">alloc_instruction</a>&amp;<b> ainstr</b></dt><dt class="is-family-code"><a href="/docs/api/enums/5D9BEFD50FB5F689/">alloc_origin</a><b> origin</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;buffer_allocation_record&gt;<b> buffer_allocation</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;size_t&gt;<b> num_chunks</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',n={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct alloc_instruction_record"},r=void 0,s={id:"api/records/1806345304F2D346",title:"struct alloc_instruction_record",description:"",source:"@site/celerity-runtime/docs/api/records/1806345304F2D346.mdx",sourceDirName:"api/records",slug:"/api/records/1806345304F2D346",permalink:"/docs/api/records/1806345304F2D346",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct alloc_instruction_record"},sidebar:"api"},l={},d=[];function p(e){const{Head:t}={...(0,c.R)(),...e.components};return t||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t,{children:[(0,i.jsx)("script",{src:"/js/highlight.min.js"}),(0,i.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,i.jsx)("div",{dangerouslySetInnerHTML:{__html:o}})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>n,x:()=>r});var i=a(96540);const c={},o=i.createContext(c);function n(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);