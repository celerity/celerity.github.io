"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[59685],{34656:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=a(74848),c=a(28453);const i='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>function make_sycl_backend: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page3BF7465D09848DAC"><span>function make_sycl_backend</span></a></li></ul></nav><main class="content"><h3 id="3BF7465D09848DAC" data-function-name="make_sycl_backend"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3BF7465D09848DAC">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;backend&gt; make_sycl_backend(\n    <a href="/docs/api/enums/433361054E0BC8BC/">sycl_backend_type</a> type,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;sycl::device&gt;&amp; devices,\n    bool enable_profiling)</code></pre></h3><h4>Description</h4><p><p>Creates a SYCL backend instance of the specified type with the devices listed. Requires that Celerity has been compiled with the given backend and all devices are compatible with it. If <code>enable_profiling</code> is true, events for asynchronous operations will report native execution times.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/backend/sycl_backend.cc#L282">src/backend/sycl_backend.cc:282</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/enums/433361054E0BC8BC/">sycl_backend_type</a><b> type</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;sycl::device&gt;&amp;<b> devices</b></dt><dt class="is-family-code">bool<b> enable_profiling</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="ADBA7E957505CA0B" data-function-name="make_sycl_backend"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#ADBA7E957505CA0B">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;backend&gt; make_sycl_backend(\n    <a href="/docs/api/enums/433361054E0BC8BC/">sycl_backend_type</a> type,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;sycl::device&gt;&amp; devices,\n    bool enable_profiling)</code></pre></h3><h4>Description</h4><p><p>Creates a SYCL backend instance of the specified type with the devices listed. Requires that Celerity has been compiled with the given backend and all devices are compatible with it. If <code>enable_profiling</code> is true, events for asynchronous operations will report native execution times.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/sycl_backend.h#L132">include/backend/sycl_backend.h:132</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/enums/433361054E0BC8BC/">sycl_backend_type</a><b> type</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;sycl::device&gt;&amp;<b> devices</b></dt><dt class="is-family-code">bool<b> enable_profiling</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',s={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function make_sycl_backend"},r=void 0,l={id:"api/functions/celerity_detail-make_sycl_backend",title:"function make_sycl_backend",description:"",source:"@site/celerity-runtime/docs/api/functions/celerity_detail-make_sycl_backend.mdx",sourceDirName:"api/functions",slug:"/api/functions/celerity_detail-make_sycl_backend",permalink:"/docs/api/functions/celerity_detail-make_sycl_backend",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function make_sycl_backend"},sidebar:"api"},o={},d=[];function p(e){const{Head:t}={...(0,c.R)(),...e.components};return t||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t,{children:[(0,n.jsx)("script",{src:"/js/highlight.min.js"}),(0,n.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,n.jsx)("div",{dangerouslySetInnerHTML:{__html:i}})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>r});var n=a(96540);const c={},i=n.createContext(c);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);