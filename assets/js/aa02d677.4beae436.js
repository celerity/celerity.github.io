"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[14087],{49082:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>n,toc:()=>l});var r=s(74848),t=s(28453);const c='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li><a href="/docs/api/records/5445ADDDC225FF35/"><span>class communicator</span></a></li><li class="is-active"><a aria-current="page0E8486033E50D99A"><span>struct communicator::stride</span></a></li></ul></nav>\n<main><h1>struct communicator::stride</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct communicator::stride { /* full declaration omitted */ };</code></pre><section><h2>Description</h2><p><p>Addresses a 1/2/3-dimensional subrange of a type-erased (buffer) allocation to be sent from or received into.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/communicator.h#L20">include/communicator.h:20</a></p></aside><section><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_allocation_range" data-member-name="allocation_range">  <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt; <b>allocation_range</b></dt><dt class="is-family-code" id="var_transfer" data-member-name="transfer">  <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt; <b>transfer</b></dt><dt class="is-family-code" id="var_element_size" data-member-name="element_size">  size_t <b>element_size</b> = 1</dt></dl></section><section></section><section><h2>Friend Function Overview</h2><ul><li class="is-family-code"><a href="#CB8B9D43CCF7E4AD"><b>operator!=</b></a>(const stride &amp; lhs, const stride &amp; rhs) &rarr; friend bool</li><li class="is-family-code"><a href="#70AFD644B1C80237"><b>operator==</b></a>(const stride &amp; lhs, const stride &amp; rhs) &rarr; friend bool</li></ul></section><section><h2>Friend Functions</h2><section><h3 id="CB8B9D43CCF7E4AD" data-function-name="operator!="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CB8B9D43CCF7E4AD">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator!=(const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp; lhs,\n                       const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp; rhs)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/communicator.h#L28">include/communicator.h:28</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp;<b> rhs</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="70AFD644B1C80237" data-function-name="operator=="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#70AFD644B1C80237">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator==(const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp; lhs,\n                       const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp; rhs)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/communicator.h#L25">include/communicator.h:25</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp;<b> rhs</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',i={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct communicator::stride"},o=void 0,n={id:"api/records/0E8486033E50D99A",title:"struct communicator::stride",description:"",source:"@site/celerity-runtime/docs/api/records/0E8486033E50D99A.mdx",sourceDirName:"api/records",slug:"/api/records/0E8486033E50D99A",permalink:"/docs/api/records/0E8486033E50D99A",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct communicator::stride"},sidebar:"api"},d={},l=[];function p(e){const{Head:a}={...(0,t.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a,{children:[(0,r.jsx)("script",{src:"/js/highlight.min.js"}),(0,r.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,r.jsx)("div",{dangerouslySetInnerHTML:{__html:c}})]})}function m(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>i,x:()=>o});var r=s(96540);const t={},c=r.createContext(t);function i(e){const a=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(c.Provider,{value:a},e.children)}}}]);