"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[79987],{35228:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var t=n(74848),s=n(28453);const r='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li><a href="/docs/api/namespaces/#1BF0FAA9C863A6A8"><span>namespace receive_arbiter_detail</span></a></li><li class="is-active"><a aria-current="page3CE07C5DE44BF304"><span>alias transfer</span></a></li></ul></nav>\n<main><h3 id="3CE07C5DE44BF304"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3CE07C5DE44BF304">\xb6</a><code class="hdoc-function-code language-cpp">using transfer =\n    std::variant&lt;unassigned_transfer,\n                 multi_region_transfer,\n                 gather_transfer&gt;;</code></pre></h3><h4>Description</h4><p><p>Depending on the order of inputs, transfers may start out as unassigned and will be replaced by either <code>multi_region_transfer</code>s or <code>gather_transfer</code>s once explicit calls to the respective receive arbiter functions are made.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/receive_arbiter.h#L77">include/receive_arbiter.h:77</a></p></main>',i={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"alias transfer"},c=void 0,o={id:"api/aliases/3CE07C5DE44BF304",title:"alias transfer",description:"",source:"@site/celerity-runtime/docs/api/aliases/3CE07C5DE44BF304.mdx",sourceDirName:"api/aliases",slug:"/api/aliases/3CE07C5DE44BF304",permalink:"/docs/api/aliases/3CE07C5DE44BF304",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"alias transfer"},sidebar:"api"},l={},p=[];function d(e){const{Head:a}={...(0,s.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a,{children:[(0,t.jsx)("script",{src:"/js/highlight.min.js"}),(0,t.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,t.jsx)("div",{dangerouslySetInnerHTML:{__html:r}})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>c});var t=n(96540);const s={},r=t.createContext(s);function i(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);