"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[41303],{68216:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var r=t(74848),s=t(28453);const a='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>struct receive_instruction_record_impl: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page7A6592C4CD0A7732"><span>struct receive_instruction_record_impl</span></a></li></ul></nav><main class="content"><h1>struct receive_instruction_record_impl</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct receive_instruction_record_impl { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>Base implementation for IDAG record types of <code>receive_instruction</code> and <code>split_receive_instruction</code>.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/recorders.h#L303">include/recorders.h:303</a></p><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_transfer_id" data-member-name="transfer_id">  <a href="/docs/api/records/3330F4171361EBD0/">detail::transfer_id</a> <b>transfer_id</b></dt><dt class="is-family-code" id="var_buffer_name" data-member-name="buffer_name">  <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a> <b>buffer_name</b></dt><dt class="is-family-code" id="var_requested_region" data-member-name="requested_region">  <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt; <b>requested_region</b></dt><dt class="is-family-code" id="var_dest_allocation_id" data-member-name="dest_allocation_id">  <a href="/docs/api/records/1824FC8BEBAA39C7/">allocation_id</a> <b>dest_allocation_id</b></dt><dt class="is-family-code" id="var_allocated_box" data-member-name="allocated_box">  <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt; <b>allocated_box</b></dt><dt class="is-family-code" id="var_element_size" data-member-name="element_size">  size_t <b>element_size</b></dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#B0B0B1A1C0D86EDF"><b>receive_instruction_record_impl</b></a>(const receive_instruction_impl &amp; rinstr, std::string buffer_name)</li></ul><h2>Member Functions</h2><h3 id="B0B0B1A1C0D86EDF" data-function-name="receive_instruction_record_impl"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B0B0B1A1C0D86EDF">\xb6</a><code class="hdoc-function-code language-cpp">receive_instruction_record_impl(\n    const <a href="/docs/api/records/FFBBC15F613CBC0C/">receive_instruction_impl</a>&amp; rinstr,\n    <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a> buffer_name)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/recorders.h#L311">include/recorders.h:311</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/FFBBC15F613CBC0C/">receive_instruction_impl</a>&amp;<b> rinstr</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a><b> buffer_name</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',n={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct receive_instruction_record_impl"},c=void 0,o={id:"api/records/7A6592C4CD0A7732",title:"struct receive_instruction_record_impl",description:"",source:"@site/celerity-runtime/docs/api/records/7A6592C4CD0A7732.mdx",sourceDirName:"api/records",slug:"/api/records/7A6592C4CD0A7732",permalink:"/docs/api/records/7A6592C4CD0A7732",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct receive_instruction_record_impl"},sidebar:"api"},l={},d=[];function p(e){const{Head:i}={...(0,s.R)(),...e.components};return i||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i,{children:[(0,r.jsx)("script",{src:"/js/highlight.min.js"}),(0,r.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,r.jsx)("div",{dangerouslySetInnerHTML:{__html:a}})]})}function m(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>n,x:()=>c});var r=t(96540);const s={},a=r.createContext(s);function n(e){const i=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),r.createElement(a.Provider,{value:i},e.children)}}}]);