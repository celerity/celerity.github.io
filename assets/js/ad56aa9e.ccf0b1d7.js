"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[80121],{30916:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>n,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=s(74848),t=s(28453);const c='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>class box: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="pageA87962C2586A4E24"><span>class box</span></a></li></ul></nav><main class="content"><h1>class box</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">template &lt;int Dims&gt;\nclass box { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>An arbitrary-dimensional box described by its minimum and maximum points.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L52">include/grid.h:52</a></p><h2>Template Parameters</h2><dl><dt class="is-family-code">int<b> Dims</b></dt></dl><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_dimensions" data-member-name="dimensions"> static  const int <b>dimensions</b> = Dims</dt><dt class="is-family-code hdoc-private" id="var_m_min" data-member-name="m_min">  id&lt;Dims&gt; <b>m_min</b></dt><dt class="is-family-code hdoc-private" id="var_m_max" data-member-name="m_max">  id&lt;Dims&gt; <b>m_max</b></dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#64D97340663CAB78"><b>box</b></a>()</li><li class="is-family-code"><a href="#B997C73318C13EA4"><b>box</b></a>(const id&lt;Dims&gt; &amp; min, const id&lt;Dims&gt; &amp; max)</li><li class="is-family-code"><a href="#A797FEE1DD839CF4"><b>box</b></a>(const subrange&lt;Dims&gt; &amp; other)</li><li class="is-family-code"><a href="#59FCDFE8647F09D6"><b>covers</b></a>(const box&lt;Dims&gt; &amp; other) const &rarr; bool</li><li class="is-family-code"><a href="#F375E49A15D6C230"><b>empty</b></a>() const &rarr; bool</li><li class="is-family-code"><a href="#6AA6FF3DBB638D4E"><b>full_range</b></a>(const range&lt;Dims&gt; &amp; range) &rarr; static box&lt;Dims&gt;</li><li class="is-family-code"><a href="#2371B22EE737D56E"><b>get_area</b></a>() const &rarr; size_t</li><li class="is-family-code"><a href="#53F5C74CAB3FF7EB"><b>get_effective_dims</b></a>() const &rarr; int</li><li class="is-family-code"><a href="#A6BB7D14DCF77488"><b>get_max</b></a>() const &rarr; const id&lt;Dims&gt; &amp;</li><li class="is-family-code"><a href="#4DAEABDC9A4354D5"><b>get_min</b></a>() const &rarr; const id&lt;Dims&gt; &amp;</li><li class="is-family-code"><a href="#13731D8B41359E04"><b>get_offset</b></a>() const &rarr; const id&lt;Dims&gt; &amp;</li><li class="is-family-code"><a href="#B07E4115A4266668"><b>get_range</b></a>() const &rarr; range&lt;Dims&gt;</li><li class="is-family-code"><a href="#0680B3902DBAE2A4"><b>get_subrange</b></a>() const &rarr; subrange&lt;Dims&gt;</li><li class="is-family-code"><a href="#AE3549051D9D0CB6"><b>operator subrange&lt;Dims&gt;</b></a>() const</li><li class="is-family-code hdoc-private"><a href="#7BABDC4A87956996"><b>box</b></a>(grid_detail::non_empty_t, const id&lt;Dims&gt; &amp; min, const id&lt;Dims&gt; &amp; max)</li></ul><h2>Friend Function Overview</h2><ul><li class="is-family-code"><a href="#3020538473083AFE"><b>operator!=</b></a>(const box&lt;Dims&gt; &amp; lhs, const box&lt;Dims&gt; &amp; rhs) &rarr; friend bool</li><li class="is-family-code"><a href="#02E86B9DFDC157E6"><b>operator==</b></a>(const box&lt;Dims&gt; &amp; lhs, const box&lt;Dims&gt; &amp; rhs) &rarr; friend bool</li></ul><h2>Member Functions</h2><h3 id="64D97340663CAB78" data-function-name="box"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#64D97340663CAB78">\xb6</a><code class="hdoc-function-code language-cpp">box()</code></pre></h3><h4>Description</h4><p><p>Construct an empty box for Dims &gt; 0, and a unit-sized box for Dims == 0</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L58">include/grid.h:58</a></p><hr class="member-fun-separator"></hr><h3 id="B997C73318C13EA4" data-function-name="box"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B997C73318C13EA4">\xb6</a><code class="hdoc-function-code language-cpp">box(const id&lt;Dims&gt;&amp; min, const id&lt;Dims&gt;&amp; max)</code></pre></h3><h4>Description</h4><p><p>Construct a box from two points where <code>min</code> must be less or equal to <code>max</code> in every dimension. Empty boxes are normalized to [0,0,0] - [0,0,0], meaning that every box-shaped set of points has a unique representation.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L62">include/grid.h:62</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> min</b></dt><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> max</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="A797FEE1DD839CF4" data-function-name="box"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A797FEE1DD839CF4">\xb6</a><code class="hdoc-function-code language-cpp">box(const subrange&lt;Dims&gt;&amp; other)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L76">include/grid.h:76</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const subrange&lt;Dims&gt;&amp;<b> other</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="59FCDFE8647F09D6" data-function-name="covers"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#59FCDFE8647F09D6">\xb6</a><code class="hdoc-function-code language-cpp">bool covers(const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp; other) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L114">include/grid.h:114</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp;<b> other</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="F375E49A15D6C230" data-function-name="empty"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F375E49A15D6C230">\xb6</a><code class="hdoc-function-code language-cpp">bool empty() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L86">include/grid.h:86</a></p><hr class="member-fun-separator"></hr><h3 id="6AA6FF3DBB638D4E" data-function-name="full_range"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6AA6FF3DBB638D4E">\xb6</a><code class="hdoc-function-code language-cpp">static <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt; full_range(\n    const range&lt;Dims&gt;&amp; range)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L84">include/grid.h:84</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> range</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="2371B22EE737D56E" data-function-name="get_area"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2371B22EE737D56E">\xb6</a><code class="hdoc-function-code language-cpp">size_t get_area() const</code></pre></h3><h4>Description</h4><p><p>Counts the number of points covered by the region.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L103">include/grid.h:103</a></p><hr class="member-fun-separator"></hr><h3 id="53F5C74CAB3FF7EB" data-function-name="get_effective_dims"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#53F5C74CAB3FF7EB">\xb6</a><code class="hdoc-function-code language-cpp">int get_effective_dims() const</code></pre></h3><h4>Description</h4><p><p>Returns the smallest dimensionality that <code>*this</code> can be <code>box_cast</code> to.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L106">include/grid.h:106</a></p><hr class="member-fun-separator"></hr><h3 id="A6BB7D14DCF77488" data-function-name="get_max"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A6BB7D14DCF77488">\xb6</a><code class="hdoc-function-code language-cpp">const id&lt;Dims&gt;&amp; get_max() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L95">include/grid.h:95</a></p><hr class="member-fun-separator"></hr><h3 id="4DAEABDC9A4354D5" data-function-name="get_min"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4DAEABDC9A4354D5">\xb6</a><code class="hdoc-function-code language-cpp">const id&lt;Dims&gt;&amp; get_min() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L94">include/grid.h:94</a></p><hr class="member-fun-separator"></hr><h3 id="13731D8B41359E04" data-function-name="get_offset"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#13731D8B41359E04">\xb6</a><code class="hdoc-function-code language-cpp">const id&lt;Dims&gt;&amp; get_offset() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L97">include/grid.h:97</a></p><hr class="member-fun-separator"></hr><h3 id="B07E4115A4266668" data-function-name="get_range"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B07E4115A4266668">\xb6</a><code class="hdoc-function-code language-cpp">range&lt;Dims&gt; get_range() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L98">include/grid.h:98</a></p><hr class="member-fun-separator"></hr><h3 id="0680B3902DBAE2A4" data-function-name="get_subrange"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0680B3902DBAE2A4">\xb6</a><code class="hdoc-function-code language-cpp">subrange&lt;Dims&gt; get_subrange() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L99">include/grid.h:99</a></p><hr class="member-fun-separator"></hr><h3 id="AE3549051D9D0CB6" data-function-name="operator subrange&lt;Dims&gt;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AE3549051D9D0CB6">\xb6</a><code class="hdoc-function-code language-cpp">operator subrange&lt;Dims&gt;() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L100">include/grid.h:100</a></p><hr class="member-fun-separator"></hr><h3 id="7BABDC4A87956996" data-function-name="box"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7BABDC4A87956996">\xb6</a><code class="hdoc-function-code language-cpp">box(<a href="/docs/api/records/EAC00F9A603117D9/">grid_detail::non_empty_t</a>,\n    const id&lt;Dims&gt;&amp; min,\n    const id&lt;Dims&gt;&amp; max)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L136">include/grid.h:136</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/EAC00F9A603117D9/">grid_detail::non_empty_t</a><b> </b></dt><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> min</b></dt><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> max</b></dt></dl><hr class="member-fun-separator"></hr><h2>Friend Functions</h2><h3 id="3020538473083AFE" data-function-name="operator!="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3020538473083AFE">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator!=(const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp; lhs,\n                       const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp; rhs)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L126">include/grid.h:126</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp;<b> rhs</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="02E86B9DFDC157E6" data-function-name="operator=="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#02E86B9DFDC157E6">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator==(const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp; lhs,\n                       const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp; rhs)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L125">include/grid.h:125</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;Dims&gt;&amp;<b> rhs</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',r={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class box"},o=void 0,l={id:"api/records/A87962C2586A4E24",title:"class box",description:"",source:"@site/celerity-runtime/docs/api/records/A87962C2586A4E24.mdx",sourceDirName:"api/records",slug:"/api/records/A87962C2586A4E24",permalink:"/docs/api/records/A87962C2586A4E24",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class box"},sidebar:"api"},n={},d=[];function m(e){const{Head:a}={...(0,t.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(a,{children:[(0,i.jsx)("script",{src:"/js/highlight.min.js"}),(0,i.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,i.jsx)("div",{dangerouslySetInnerHTML:{__html:c}})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>r,x:()=>o});var i=s(96540);const t={},c=i.createContext(t);function r(e){const a=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(c.Provider,{value:a},e.children)}}}]);