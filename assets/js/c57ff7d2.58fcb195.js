"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[67851],{73463:(e,a,c)=>{c.r(a),c.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>n,toc:()=>l});var s=c(74848),o=c(28453);const r='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page52288636C43413DD"><span>class backend</span></a></li></ul></nav>\n<main><h1>class backend</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class backend { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>The backend is responsible for asynchronously allocating device- and device-accessible host memory, copying data between host and device allocations, and launching host tasks and device kernels. Asynchronous work must be explicitly assigned to in-order queue ids as assigned by <code>out_of_order_engine</code>.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L19">include/backend/backend.h:19</a></p><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#CBD274783B8A683A"><b>backend</b></a>(const backend &amp;)</li><li class="is-family-code"><a href="#84474FD18D8C2F8A"><b>backend</b></a>(backend &amp;&amp;)</li><li class="is-family-code"><a href="#F6D16CF9D96285FB"><b>backend</b></a>()</li><li class="is-family-code"><a href="#7B5D61A4C233B23C"><b>check_async_errors</b></a>() &rarr; virtual void</li><li class="is-family-code"><a href="#9F10776D1F091BD7"><b>debug_alloc</b></a>(size_t size) &rarr; virtual void *</li><li class="is-family-code"><a href="#3B8B979563F43E0B"><b>debug_free</b></a>(void * ptr) &rarr; virtual void</li><li class="is-family-code"><a href="#7BD72B983005E9FC"><b>enqueue_device_alloc</b></a>(device_id memory_device, size_t size, size_t alignment) &rarr; virtual async_event</li><li class="is-family-code"><a href="#F1776E7E1F5EDD9C"><b>enqueue_device_copy</b></a>(device_id device, size_t device_lane, const void * source_base, void * dest_base, const box&lt;3&gt; &amp; source_box, const box&lt;3&gt; &amp; dest_box, const region&lt;3&gt; &amp; copy_region, size_t elem_size) &rarr; virtual async_event</li><li class="is-family-code"><a href="#6CEA6D96E1227F1E"><b>enqueue_device_free</b></a>(device_id memory_device, void * ptr) &rarr; virtual async_event</li><li class="is-family-code"><a href="#C932330DC6FE754B"><b>enqueue_device_kernel</b></a>(device_id device, size_t device_lane, const device_kernel_launcher &amp; launcher, std::vector&lt;closure_hydrator::accessor_info&gt; accessor_infos, const box&lt;3&gt; &amp; execution_range, const std::vector&lt;void *&gt; &amp; reduction_ptrs) &rarr; virtual async_event</li><li class="is-family-code"><a href="#3A452D8B0C7274F4"><b>enqueue_host_alloc</b></a>(size_t size, size_t alignment) &rarr; virtual async_event</li><li class="is-family-code"><a href="#BD55A8545B3EA959"><b>enqueue_host_copy</b></a>(size_t host_lane, const void * source_base, void * dest_base, const box&lt;3&gt; &amp; source_box, const box&lt;3&gt; &amp; dest_box, const region&lt;3&gt; &amp; copy_region, size_t elem_size) &rarr; virtual async_event</li><li class="is-family-code"><a href="#19067DC859C8FFC4"><b>enqueue_host_free</b></a>(void * ptr) &rarr; virtual async_event</li><li class="is-family-code"><a href="#72E6FBD0117C142B"><b>enqueue_host_task</b></a>(size_t host_lane, const host_task_launcher &amp; launcher, std::vector&lt;closure_hydrator::accessor_info&gt; accessor_infos, const box&lt;3&gt; &amp; execution_range, const communicator * collective_comm) &rarr; virtual async_event</li><li class="is-family-code"><a href="#6675BBE0A2F39379"><b>get_system_info</b></a>() const &rarr; virtual const system_info &amp;</li><li class="is-family-code"><a href="#436DCB904D8F8947"><b>init</b></a>() &rarr; virtual void</li><li class="is-family-code"><a href="#1B19948B8D471D20"><b>operator=</b></a>(backend &amp;&amp;) &rarr; backend &amp;</li><li class="is-family-code"><a href="#F57E6BC1D167DE27"><b>operator=</b></a>(const backend &amp;) &rarr; backend &amp;</li><li class="is-family-code"><a href="#61C2B852DD32F242"><b>~backend</b></a>() &rarr; virtual</li></ul><h2>Member Functions</h2><h3 id="CBD274783B8A683A" data-function-name="backend"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CBD274783B8A683A">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/52288636C43413DD/">backend</a>(const backend&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L22">include/backend/backend.h:22</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/52288636C43413DD/">backend</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="84474FD18D8C2F8A" data-function-name="backend"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#84474FD18D8C2F8A">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/52288636C43413DD/">backend</a>(backend&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L23">include/backend/backend.h:23</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/52288636C43413DD/">backend</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="F6D16CF9D96285FB" data-function-name="backend"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F6D16CF9D96285FB">\xb6</a><code class="hdoc-function-code language-cpp">backend()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L21">include/backend/backend.h:21</a></p><hr class="member-fun-separator"></hr><h3 id="7B5D61A4C233B23C" data-function-name="check_async_errors"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7B5D61A4C233B23C">\xb6</a><code class="hdoc-function-code language-cpp">virtual void check_async_errors()</code></pre></h3><h4>Description</h4><p><p>Check internal queues and panic if any asynchronous errors occurred.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L77">include/backend/backend.h:77</a></p><hr class="member-fun-separator"></hr><h3 id="9F10776D1F091BD7" data-function-name="debug_alloc"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9F10776D1F091BD7">\xb6</a><code class="hdoc-function-code language-cpp">virtual void* debug_alloc(size_t size)</code></pre></h3><h4>Description</h4><p><p>Synchronously allocates device-accessible host memory. This is slow and meant for debugging purposes only.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L35">include/backend/backend.h:35</a></p><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> size</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="3B8B979563F43E0B" data-function-name="debug_free"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3B8B979563F43E0B">\xb6</a><code class="hdoc-function-code language-cpp">virtual void debug_free(void* ptr)</code></pre></h3><h4>Description</h4><p><p>Synchronously frees device-accessible host memory. This is slow and meant for debugging purposes only.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L38">include/backend/backend.h:38</a></p><h4>Parameters</h4><dl><dt class="is-family-code">void*<b> ptr</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="7BD72B983005E9FC" data-function-name="enqueue_device_alloc"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7BD72B983005E9FC">\xb6</a><code class="hdoc-function-code language-cpp">virtual <a href="/docs/api/records/75C01CF859B866AB/">async_event</a> enqueue_device_alloc(\n    <a href="/docs/api/records/7D949A34B7A05510/">device_id</a> memory_device,\n    size_t size,\n    size_t alignment)</code></pre></h3><h4>Description</h4><p><p>Schedules the allocation of device memory with the specified size and alignment. The operation will complete in-order with respect to any other asynchronous <code>alloc</code> and <code>free</code> operation on the same backend.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L46">include/backend/backend.h:46</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/7D949A34B7A05510/">device_id</a><b> memory_device</b></dt><dt class="is-family-code">size_t<b> size</b></dt><dt class="is-family-code">size_t<b> alignment</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="F1776E7E1F5EDD9C" data-function-name="enqueue_device_copy"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F1776E7E1F5EDD9C">\xb6</a><code class="hdoc-function-code language-cpp">virtual <a href="/docs/api/records/75C01CF859B866AB/">async_event</a> enqueue_device_copy(\n    <a href="/docs/api/records/7D949A34B7A05510/">device_id</a> device,\n    size_t device_lane,\n    const void* source_base,\n    void* dest_base,\n    const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; source_<a href="/docs/api/records/A87962C2586A4E24/">box</a>,\n    const box&lt;3&gt;&amp; dest_box,\n    const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp; copy_region,\n    size_t elem_size)</code></pre></h3><h4>Description</h4><p><p>Enqueues an n-dimensional copy between two device-accessible allocations (at least one device-native). The operation will complete in-order with respect to any other asynchronous device operation on <code>device</code> and <code>device_lane</code>.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L73">include/backend/backend.h:73</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/7D949A34B7A05510/">device_id</a><b> device</b></dt><dt class="is-family-code">size_t<b> device_lane</b></dt><dt class="is-family-code">const void*<b> source_base</b></dt><dt class="is-family-code">void*<b> dest_base</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> source_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> dest_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp;<b> copy_region</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="6CEA6D96E1227F1E" data-function-name="enqueue_device_free"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6CEA6D96E1227F1E">\xb6</a><code class="hdoc-function-code language-cpp">virtual <a href="/docs/api/records/75C01CF859B866AB/">async_event</a> enqueue_device_free(\n    <a href="/docs/api/records/7D949A34B7A05510/">device_id</a> memory_device,\n    void* ptr)</code></pre></h3><h4>Description</h4><p><p>Schedules the release of memory allocated via <code>enqueue_device_alloc</code>. The operation will complete in-order with respect to any other asynchronous <code>alloc</code> and <code>free</code> operation on the same backend.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L54">include/backend/backend.h:54</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/7D949A34B7A05510/">device_id</a><b> memory_device</b></dt><dt class="is-family-code">void*<b> ptr</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="C932330DC6FE754B" data-function-name="enqueue_device_kernel"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C932330DC6FE754B">\xb6</a><code class="hdoc-function-code language-cpp">virtual <a href="/docs/api/records/75C01CF859B866AB/">async_event</a> enqueue_device_kernel(\n    <a href="/docs/api/records/7D949A34B7A05510/">device_id</a> device,\n    size_t device_lane,\n    const device_kernel_launcher&amp; launcher,\n    <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;closure_hydrator::accessor_info&gt;\n        accessor_infos,\n    const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; execution_range,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;void*&gt;&amp; reduction_ptrs)</code></pre></h3><h4>Description</h4><p><p>Enqueues the asynchronous execution of a kernel in an in-order device queue identified by <code>device</code> and <code>device_lane</code>. The operation will complete in-order with respect to any other asynchronous device operation on <code>device</code> and <code>device_lane</code>.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L63">include/backend/backend.h:63</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/7D949A34B7A05510/">device_id</a><b> device</b></dt><dt class="is-family-code">size_t<b> device_lane</b></dt><dt class="is-family-code">const device_kernel_launcher&amp;<b> launcher</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;closure_hydrator::accessor_info&gt;<b> accessor_infos</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> execution_range</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;void*&gt;&amp;<b> reduction_ptrs</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="3A452D8B0C7274F4" data-function-name="enqueue_host_alloc"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3A452D8B0C7274F4">\xb6</a><code class="hdoc-function-code language-cpp">virtual <a href="/docs/api/records/75C01CF859B866AB/">async_event</a> enqueue_host_alloc(\n    size_t size,\n    size_t alignment)</code></pre></h3><h4>Description</h4><p><p>Schedules the allocation of device-accessible host memory with the specified size and alignment. The operation will complete in-order with respect to any other asynchronous <code>alloc</code> and <code>free</code> operation on the same backend.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L42">include/backend/backend.h:42</a></p><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> size</b></dt><dt class="is-family-code">size_t<b> alignment</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="BD55A8545B3EA959" data-function-name="enqueue_host_copy"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BD55A8545B3EA959">\xb6</a><code class="hdoc-function-code language-cpp">virtual <a href="/docs/api/records/75C01CF859B866AB/">async_event</a> enqueue_host_copy(\n    size_t host_lane,\n    const void* source_base,\n    void* dest_base,\n    const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; source_<a href="/docs/api/records/A87962C2586A4E24/">box</a>,\n    const box&lt;3&gt;&amp; dest_box,\n    const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp; copy_region,\n    size_t elem_size)</code></pre></h3><h4>Description</h4><p><p>Enqueues an n-dimensional copy between two host allocations (both either device-accessible or user-allocated). The operation will complete in-order with respect to any other asynchronous host operation on <code>host_lane</code>.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L68">include/backend/backend.h:68</a></p><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> host_lane</b></dt><dt class="is-family-code">const void*<b> source_base</b></dt><dt class="is-family-code">void*<b> dest_base</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> source_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> dest_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp;<b> copy_region</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="19067DC859C8FFC4" data-function-name="enqueue_host_free"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#19067DC859C8FFC4">\xb6</a><code class="hdoc-function-code language-cpp">virtual <a href="/docs/api/records/75C01CF859B866AB/">async_event</a> enqueue_host_free(void* ptr)</code></pre></h3><h4>Description</h4><p><p>Schedules the release of memory allocated via <code>enqueue_host_alloc</code>. The operation will complete in-order with respect to any other asynchronous <code>alloc</code> and <code>free</code> operation on the same backend.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L50">include/backend/backend.h:50</a></p><h4>Parameters</h4><dl><dt class="is-family-code">void*<b> ptr</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="72E6FBD0117C142B" data-function-name="enqueue_host_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#72E6FBD0117C142B">\xb6</a><code class="hdoc-function-code language-cpp">virtual <a href="/docs/api/records/75C01CF859B866AB/">async_event</a> enqueue_host_task(\n    size_t host_lane,\n    const host_task_launcher&amp; launcher,\n    <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;closure_hydrator::accessor_info&gt;\n        accessor_infos,\n    const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; execution_range,\n    const <a href="/docs/api/records/5445ADDDC225FF35/">communicator</a>* collective_comm)</code></pre></h3><h4>Description</h4><p><p>Enqueues the asynchronous execution of a host task in a background thread identified by <code>host_lane</code>. The operation will complete in-order with respect to any other asynchronous host operation on <code>host_lane</code>.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L58">include/backend/backend.h:58</a></p><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> host_lane</b></dt><dt class="is-family-code">const host_task_launcher&amp;<b> launcher</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;closure_hydrator::accessor_info&gt;<b> accessor_infos</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> execution_range</b></dt><dt class="is-family-code">const <a href="/docs/api/records/5445ADDDC225FF35/">communicator</a>*<b> collective_comm</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="6675BBE0A2F39379" data-function-name="get_system_info"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6675BBE0A2F39379">\xb6</a><code class="hdoc-function-code language-cpp">virtual const <a href="/docs/api/records/8B87A955194B6925/">system_info</a>&amp; get_system_info() const</code></pre></h3><h4>Description</h4><p><p>Returns metadata about the system as it appears to the backend implementation.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L29">include/backend/backend.h:29</a></p><hr class="member-fun-separator"></hr><h3 id="436DCB904D8F8947" data-function-name="init"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#436DCB904D8F8947">\xb6</a><code class="hdoc-function-code language-cpp">virtual void init()</code></pre></h3><h4>Description</h4><p><p>Performs (possibly latency-intensive) backend initialization. Separate from the constructor to allow this function to be called from a different thread.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L32">include/backend/backend.h:32</a></p><hr class="member-fun-separator"></hr><h3 id="1B19948B8D471D20" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1B19948B8D471D20">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/52288636C43413DD/">backend</a>&amp; operator=(<a href="/docs/api/records/52288636C43413DD/">backend</a>&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L25">include/backend/backend.h:25</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/52288636C43413DD/">backend</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="F57E6BC1D167DE27" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F57E6BC1D167DE27">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/52288636C43413DD/">backend</a>&amp; operator=(const <a href="/docs/api/records/52288636C43413DD/">backend</a>&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L24">include/backend/backend.h:24</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/52288636C43413DD/">backend</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="61C2B852DD32F242" data-function-name="~backend"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#61C2B852DD32F242">\xb6</a><code class="hdoc-function-code language-cpp">virtual ~backend()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/backend.h#L26">include/backend/backend.h:26</a></p><hr class="member-fun-separator"></hr></main>',t={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class backend"},i=void 0,n={id:"api/records/52288636C43413DD",title:"class backend",description:"",source:"@site/celerity-runtime/docs/api/records/52288636C43413DD.mdx",sourceDirName:"api/records",slug:"/api/records/52288636C43413DD",permalink:"/docs/api/records/52288636C43413DD",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class backend"},sidebar:"api"},d={},l=[];function p(e){const{Head:a}={...(0,o.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a,{children:[(0,s.jsx)("script",{src:"/js/highlight.min.js"}),(0,s.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,s.jsx)("div",{dangerouslySetInnerHTML:{__html:r}})]})}function h(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,a,c)=>{c.d(a,{R:()=>t,x:()=>i});var s=c(96540);const o={},r=s.createContext(o);function t(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);