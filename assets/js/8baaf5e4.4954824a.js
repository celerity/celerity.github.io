"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[49219],{15128:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>n,metadata:()=>r,toc:()=>o});var s=t(74848),i=t(28453);const l='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li class="is-active"><a aria-current="page73E846FEAC018FF5"><span>class handler</span></a></li></ul></nav>\n<main><h1>class handler</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class handler { /* full declaration omitted */ };</code></pre><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L277">include/handler.h:277</a></p></aside><section><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_tid" data-member-name="m_tid">  <a href="/docs/api/records/322167BB21F2212B/">detail::task_id</a> <b>m_tid</b></dt><dt class="is-family-code hdoc-private" id="var_m_access_map" data-member-name="m_access_map">  <a href="/docs/api/records/EEAE4CFC41B6C788/">detail::buffer_access_map</a> <b>m_access_map</b></dt><dt class="is-family-code hdoc-private" id="var_m_side_effects" data-member-name="m_side_effects">  <a href="/docs/api/records/CDD53C35CF67CCAE/">detail::side_effect_map</a> <b>m_side_effects</b></dt><dt class="is-family-code hdoc-private" id="var_m_non_void_side_effects_count" data-member-name="m_non_void_side_effects_count">  size_t <b>m_non_void_side_effects_count</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_reductions" data-member-name="m_reductions">  detail::reduction_set <b>m_reductions</b></dt><dt class="is-family-code hdoc-private" id="var_m_task" data-member-name="m_task">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;detail::task&gt; <b>m_task</b> = nullptr</dt><dt class="is-family-code hdoc-private" id="var_m_num_collective_nodes" data-member-name="m_num_collective_nodes">  size_t <b>m_num_collective_nodes</b></dt><dt class="is-family-code hdoc-private" id="var_m_next_accessor_hydration_id" data-member-name="m_next_accessor_hydration_id">  <a href="/docs/api/records/6F3FB2BA78185BC8/">detail::hydration_id</a> <b>m_next_accessor_hydration_id</b> = 1</dt><dt class="is-family-code hdoc-private" id="var_m_usr_def_task_name" data-member-name="m_usr_def_task_name">  <a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;std::string&gt; <b>m_usr_def_task_name</b></dt><dt class="is-family-code hdoc-private" id="var_m_split_constraint" data-member-name="m_split_constraint">  <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt; <b>m_split_constraint</b> = detail::ones</dt><dt class="is-family-code hdoc-private" id="var_m_hints" data-member-name="m_hints">  <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;std::unique_ptr&lt;detail::hint_base&gt;&gt; <b>m_hints</b></dt></dl></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int Dims, typename Functor&gt;</span><br><a href="#DC48D018690A2160"><b>host_task</b></a>(range&lt;Dims&gt; global_range, Functor &amp;&amp; kernel) &rarr; void</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int Dims, typename Functor&gt;</span><br><a href="#AC2259C783EDC3F9"><b>host_task</b></a>(range&lt;Dims&gt; global_range, id&lt;Dims&gt; global_offset, Functor &amp;&amp; kernel) &rarr; void</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor&gt;</span><br><a href="#F24396E950271F86"><b>host_task</b></a>(experimental::collective_tag tag, Functor &amp;&amp; kernel) &rarr; void</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor&gt;</span><br><a href="#E19AEB478219F0C2"><b>host_task</b></a>(on_master_node_tag, Functor &amp;&amp; kernel) &rarr; void</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename KernelName = detail::unnamed_kernel, int Dims, typename... ReductionsAndKernel&gt;</span><br><a href="#54C8BFFA973DE334"><b>parallel_for</b></a>(celerity::nd_range&lt;Dims&gt; execution_range, ReductionsAndKernel &amp;&amp;... reductions_and_kernel) &rarr; void</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename KernelName = detail::unnamed_kernel, int Dims, typename... ReductionsAndKernel&gt;</span><br><a href="#A1494F7ED8D0A19A"><b>parallel_for</b></a>(range&lt;Dims&gt; global_range, id&lt;Dims&gt; global_offset, ReductionsAndKernel &amp;&amp;... reductions_and_kernel) &rarr; void</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename KernelName = detail::unnamed_kernel, int Dims, typename... ReductionsAndKernel&gt;</span><br><a href="#9C1F9B2C21E70FA3"><b>parallel_for</b></a>(range&lt;Dims&gt; global_range, ReductionsAndKernel &amp;&amp;... reductions_and_kernel) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#3FA633379B0BDA53"><b>add_reduction</b></a>(const detail::reduction_info &amp; rinfo) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#0C8DCE7FB33D86A1"><b>add_requirement</b></a>(detail::buffer_id bid, std::unique_ptr&lt;detail::range_mapper_base&gt; rm) &rarr; [[nodiscard]] detail::hydration_id</li><li class="is-family-code hdoc-private"><a href="#6894EFBA1A9D42C8"><b>add_requirement</b></a>(detail::host_object_id hoid, experimental::side_effect_order order, bool is_void) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#7763CB0B88B41218"><b>create_collective_task</b></a>(detail::collective_group_id cgid, detail::host_task_launcher launcher) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#34A402DD19C8D581"><b>create_device_compute_task</b></a>(const detail::task_geometry &amp; geometry, const std::string &amp; debug_name, detail::device_kernel_launcher launcher) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#DACC340DB4857DD5"><b>create_host_compute_task</b></a>(const detail::task_geometry &amp; geometry, detail::host_task_launcher launcher) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#63706C4687290D1D"><b>create_master_node_task</b></a>(detail::host_task_launcher launcher) &rarr; void</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;int Dims&gt;</span><br><a href="#39F1EB48939D2C23"><b>experimental_constrain_split</b></a>(const range&lt;Dims&gt; &amp; constraint) &rarr; void</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;typename Hint&gt;</span><br><a href="#CBC1739CC0D6B748"><b>experimental_hint</b></a>(Hint &amp;&amp; hint) &rarr; void</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;int Dims&gt;</span><br><a href="#06F23A6E817D5A55"><b>get_constrained_granularity</b></a>(const range&lt;Dims&gt; &amp; global_size, const range&lt;Dims&gt; &amp; granularity) const &rarr; range&lt;3&gt;</li><li class="is-family-code hdoc-private"><a href="#3643A5A3E321EF78"><b>handler</b></a>(detail::task_id tid, size_t num_collective_nodes)</li><li class="is-family-code hdoc-private"><a href="#30B25BE9B88650CF"><b>into_task</b></a>() &amp;&amp; &rarr; std::unique_ptr&lt;detail::task&gt;</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;typename KernelFlavor, typename KernelName, int Dims, typename Kernel, size_t... ReductionIndices, typename... Reductions&gt;</span><br><a href="#B6CAA3B3753D5A02"><b>make_device_kernel_launcher</b></a>(const range&lt;Dims&gt; &amp; global_range, const id&lt;Dims&gt; &amp; global_offset, typename detail::kernel_flavor_traits&lt;KernelFlavor, Dims&gt;::local_size_type local_range, Kernel &amp;&amp; kernel, std::index_sequence&lt;ReductionIndices...&gt;, Reductions... reductions) &rarr; detail::device_kernel_launcher</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;int Dims, bool Collective, typename Kernel&gt;</span><br><a href="#E84CA58CAF1E94B2"><b>make_host_task_launcher</b></a>(const range&lt;3&gt; &amp; global_range, detail::collective_group_id cgid, Kernel &amp;&amp; kernel) &rarr; detail::host_task_launcher</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;typename KernelFlavor, typename KernelName, int Dims, typename Kernel, typename... Reductions&gt;</span><br><a href="#B53B5948A7F89523"><b>parallel_for_kernel_and_reductions</b></a>(range&lt;Dims&gt; global_range, id&lt;Dims&gt; global_offset, typename detail::kernel_flavor_traits&lt;KernelFlavor, Dims&gt;::local_size_type local_range, Kernel &amp;&amp; kernel, Reductions &amp;... reductions) &rarr; void</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;typename KernelFlavor, typename KernelName, int Dims, typename... ReductionsAndKernel, size_t... ReductionIndices&gt;</span><br><a href="#6A8ACE4CD3FB8D36"><b>parallel_for_reductions_and_kernel</b></a>(range&lt;Dims&gt; global_range, id&lt;Dims&gt; global_offset, typename detail::kernel_flavor_traits&lt;KernelFlavor, Dims&gt;::local_size_type local_size, std::index_sequence&lt;ReductionIndices...&gt; indices, ReductionsAndKernel &amp;&amp;... kernel_and_reductions) &rarr; void</li></ul></section><section><h2>Member Functions</h2><section><h3 id="DC48D018690A2160" data-function-name="host_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DC48D018690A2160">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int Dims, typename Functor&gt;\nvoid host_task(range&lt;Dims&gt; global_range,\n               Functor&amp;&amp; kernel)</code></pre></h3><section><h4>Description</h4><p><p>Like <code>host_task(range &lt;Dims &gt; global_range, id &lt;Dims &gt; global_offset, Functor kernel)</code>, but with a <code>global_offset</code> of zero.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L363">include/handler.h:363</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> Functor</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">range&lt;Dims&gt;<b> global_range</b></dt><dt class="is-family-code">Functor&amp;&amp;<b> kernel</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="AC2259C783EDC3F9" data-function-name="host_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AC2259C783EDC3F9">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int Dims, typename Functor&gt;\nvoid host_task(range&lt;Dims&gt; global_range,\n               id&lt;Dims&gt; global_offset,\n               Functor&amp;&amp; kernel)</code></pre></h3><section><h4>Description</h4><p><p>Schedules a distributed execution of <code>kernel</code> by splitting the iteration space in a runtime-defined manner. The kernel is assumed to be invocable with the signature <code>void(const celerity::partition &lt;Dims &gt; &amp; )</code>. The kernel is executed in a background thread pool with multiple host tasks being run concurrently if they are independent in the task graph, so proper synchronization must be ensured. The partition passed into the kernel describes the split each host receives. It may be used with accessors to obtain the per-node portion of a buffer en-bloc, see <code>celerity::accessor::get_allocation_window</code> for details. There are no guarantees with respect to the split size and the order in which host tasks are re-orered between nodes other than the restrictions imposed by dependencies in the task graph. Also, the kernel may be invoked multiple times on one node and not be scheduled on another node. If you need guarantees about execution order</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L352">include/handler.h:352</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> Functor</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">range&lt;Dims&gt;<b> global_range</b></dt><dt class="is-family-code">id&lt;Dims&gt;<b> global_offset</b></dt><dt class="is-family-code">Functor&amp;&amp;<b> kernel</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="F24396E950271F86" data-function-name="host_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F24396E950271F86">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor&gt;\nvoid host_task(<a href="/docs/api/records/052C3B408D363F1D/">experimental::collective_tag</a> tag,\n               Functor&amp;&amp; kernel)</code></pre></h3><section><h4>Description</h4><p><p>Schedules <code>kernel</code> to be executed collectively on all nodes participating in the specified collective group. Call via <code>cgh.host_task(celerity::experimental::collective, []...)</code> or  <code>cgh.host_task(celerity::experimental::collective(group), []...)</code>. The kernel is assumed to be invocable with the signature <code>void(const celerity::experimental::collective_partition &amp; )</code> or <code>void(const celerity::partition &lt; 1&gt; &amp; )</code>. This provides framework to use arbitrary collective MPI operations in a host task, such as performing collective I/O with parallel HDF5. The local node id,t the number of participating nodes as well as the group MPI communicator can be obtained from the <code>collective_partition</code> passed into the kernel. All collective tasks within a collective group are guaranteed to be executed in the same order on all nodes, additionally, all internal MPI operations and all host kernel invocations are executed in a single thread on each host.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L333">include/handler.h:333</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/052C3B408D363F1D/">experimental::collective_tag</a><b> tag</b></dt><dt class="is-family-code">Functor&amp;&amp;<b> kernel</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="E19AEB478219F0C2" data-function-name="host_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E19AEB478219F0C2">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor&gt;\nvoid host_task(<a href="/docs/api/records/68F42E71023A1A16/">on_master_node_tag</a>,\n               Functor&amp;&amp; kernel)</code></pre></h3><section><h4>Description</h4><p><p>Schedules <code>kernel</code> to execute on the master node only. Call via <code>cgh.host_task(celerity::on_master_node, []...)</code>. The kernel is assumed to be invocable with the signature <code>void(const celerity::partition &lt; 0&gt;  &amp; )</code> or <code>void()</code>. The kernel is executed in a background thread pool and multiple master node tasks may be executed concurrently if they are independent in the task graph, so proper synchronization must be ensured. <strong>Compatibility note:</strong> This replaces master-access tasks from Celerity 0.1 which were executed on the master node\'s main thread, so this implementation may require different lifetimes for captures. See <code>celerity::allow_by_ref</code> for more information on this topic.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L314">include/handler.h:314</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/68F42E71023A1A16/">on_master_node_tag</a><b> </b></dt><dt class="is-family-code">Functor&amp;&amp;<b> kernel</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="54C8BFFA973DE334" data-function-name="parallel_for"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#54C8BFFA973DE334">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;\n    typename KernelName = detail::unnamed_kernel,\n    int Dims,\n    typename... ReductionsAndKernel&gt;\nvoid parallel_for(\n    celerity::nd_range&lt;Dims&gt; execution_range,\n    ReductionsAndKernel&amp;&amp;... reductions_and_kernel)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L296">include/handler.h:296</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> KernelName</b> = detail::unnamed_kernel</dt><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> ReductionsAndKernel</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">celerity::nd_range&lt;Dims&gt;<b> execution_range</b></dt><dt class="is-family-code">ReductionsAndKernel&amp;&amp;...<b> reductions_and_kernel</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="A1494F7ED8D0A19A" data-function-name="parallel_for"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A1494F7ED8D0A19A">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;\n    typename KernelName = detail::unnamed_kernel,\n    int Dims,\n    typename... ReductionsAndKernel&gt;\nvoid parallel_for(\n    range&lt;Dims&gt; global_range,\n    id&lt;Dims&gt; global_offset,\n    ReductionsAndKernel&amp;&amp;... reductions_and_kernel)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L288">include/handler.h:288</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> KernelName</b> = detail::unnamed_kernel</dt><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> ReductionsAndKernel</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">range&lt;Dims&gt;<b> global_range</b></dt><dt class="is-family-code">id&lt;Dims&gt;<b> global_offset</b></dt><dt class="is-family-code">ReductionsAndKernel&amp;&amp;...<b> reductions_and_kernel</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="9C1F9B2C21E70FA3" data-function-name="parallel_for"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9C1F9B2C21E70FA3">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;\n    typename KernelName = detail::unnamed_kernel,\n    int Dims,\n    typename... ReductionsAndKernel&gt;\nvoid parallel_for(\n    range&lt;Dims&gt; global_range,\n    ReductionsAndKernel&amp;&amp;... reductions_and_kernel)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L280">include/handler.h:280</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> KernelName</b> = detail::unnamed_kernel</dt><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> ReductionsAndKernel</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">range&lt;Dims&gt;<b> global_range</b></dt><dt class="is-family-code">ReductionsAndKernel&amp;&amp;...<b> reductions_and_kernel</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="3FA633379B0BDA53" data-function-name="add_reduction"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3FA633379B0BDA53">\xb6</a><code class="hdoc-function-code language-cpp">void add_reduction(\n    const <a href="/docs/api/records/6CABC3E763480EA0/">detail::reduction_info</a>&amp; rinfo)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L431">include/handler.h:431</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/6CABC3E763480EA0/">detail::reduction_info</a>&amp;<b> rinfo</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="0C8DCE7FB33D86A1" data-function-name="add_requirement"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0C8DCE7FB33D86A1">\xb6</a><code class="hdoc-function-code language-cpp">[[nodiscard]] <a href="/docs/api/records/6F3FB2BA78185BC8/">detail::hydration_id</a>\nadd_requirement(\n    <a href="/docs/api/records/72F1B234CCBF2E73/">detail::buffer_id</a> bid,\n    <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;detail::range_mapper_base&gt; rm)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L419">include/handler.h:419</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">detail::buffer_id</a><b> bid</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;detail::range_mapper_base&gt;<b> rm</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="6894EFBA1A9D42C8" data-function-name="add_requirement"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6894EFBA1A9D42C8">\xb6</a><code class="hdoc-function-code language-cpp">void add_requirement(\n    <a href="/docs/api/records/A0E5B68259E332A7/">detail::host_object_id</a> hoid,\n    <a href="/docs/api/enums/B878B875E0290D9D/">experimental::side_effect_order</a> order,\n    bool is_void)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L425">include/handler.h:425</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/A0E5B68259E332A7/">detail::host_object_id</a><b> hoid</b></dt><dt class="is-family-code"><a href="/docs/api/enums/B878B875E0290D9D/">experimental::side_effect_order</a><b> order</b></dt><dt class="is-family-code">bool<b> is_void</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="7763CB0B88B41218" data-function-name="create_collective_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7763CB0B88B41218">\xb6</a><code class="hdoc-function-code language-cpp">void create_collective_task(\n    <a href="/docs/api/records/82BFAD3A3BD6412E/">detail::collective_group_id</a> cgid,\n    detail::host_task_launcher launcher)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L498">include/handler.h:498</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/82BFAD3A3BD6412E/">detail::collective_group_id</a><b> cgid</b></dt><dt class="is-family-code">detail::host_task_launcher<b> launcher</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="34A402DD19C8D581" data-function-name="create_device_compute_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#34A402DD19C8D581">\xb6</a><code class="hdoc-function-code language-cpp">void create_device_compute_task(\n    const <a href="/docs/api/records/DE1148C2DAFC5206/">detail::task_geometry</a>&amp; geometry,\n    const <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&amp; debug_name,\n    detail::device_kernel_launcher launcher)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L482">include/handler.h:482</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/DE1148C2DAFC5206/">detail::task_geometry</a>&amp;<b> geometry</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&amp;<b> debug_name</b></dt><dt class="is-family-code">detail::device_kernel_launcher<b> launcher</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="DACC340DB4857DD5" data-function-name="create_host_compute_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DACC340DB4857DD5">\xb6</a><code class="hdoc-function-code language-cpp">void create_host_compute_task(\n    const <a href="/docs/api/records/DE1148C2DAFC5206/">detail::task_geometry</a>&amp; geometry,\n    detail::host_task_launcher launcher)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L470">include/handler.h:470</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/DE1148C2DAFC5206/">detail::task_geometry</a>&amp;<b> geometry</b></dt><dt class="is-family-code">detail::host_task_launcher<b> launcher</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="63706C4687290D1D" data-function-name="create_master_node_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#63706C4687290D1D">\xb6</a><code class="hdoc-function-code language-cpp">void create_master_node_task(\n    detail::host_task_launcher launcher)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L505">include/handler.h:505</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">detail::host_task_launcher<b> launcher</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="39F1EB48939D2C23" data-function-name="experimental_constrain_split"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#39F1EB48939D2C23">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int Dims&gt;\nvoid experimental_constrain_split(\n    const range&lt;Dims&gt;&amp; constraint)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L437">include/handler.h:437</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> Dims</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> constraint</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CBC1739CC0D6B748" data-function-name="experimental_hint"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CBC1739CC0D6B748">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Hint&gt;\nvoid experimental_hint(Hint&amp;&amp; hint)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L443">include/handler.h:443</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Hint</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">Hint&amp;&amp;<b> hint</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="06F23A6E817D5A55" data-function-name="get_constrained_granularity"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#06F23A6E817D5A55">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int Dims&gt;\n<a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt; get_constrained_granularity(\n    const range&lt;Dims&gt;&amp; global_size,\n    const range&lt;Dims&gt;&amp; granularity) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L456">include/handler.h:456</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> Dims</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> global_size</b></dt><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> granularity</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="3643A5A3E321EF78" data-function-name="handler"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3643A5A3E321EF78">\xb6</a><code class="hdoc-function-code language-cpp">handler(<a href="/docs/api/records/322167BB21F2212B/">detail::task_id</a> tid,\n        size_t num_collective_nodes)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L391">include/handler.h:391</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/322167BB21F2212B/">detail::task_id</a><b> tid</b></dt><dt class="is-family-code">size_t<b> num_collective_nodes</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="30B25BE9B88650CF" data-function-name="into_task"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#30B25BE9B88650CF">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;detail::task&gt; into_task() &amp;&amp;</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L582">include/handler.h:582</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="B6CAA3B3753D5A02" data-function-name="make_device_kernel_launcher"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B6CAA3B3753D5A02">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename KernelFlavor,\n          typename KernelName,\n          int Dims,\n          typename Kernel,\n          size_t... ReductionIndices,\n          typename... Reductions&gt;\ndetail::device_kernel_launcher\nmake_device_kernel_launcher(\n    const range&lt;Dims&gt;&amp; global_range,\n    const id&lt;Dims&gt;&amp; global_offset,\n    typename detail::kernel_flavor_traits&lt;\n        KernelFlavor,\n        Dims&gt;::local_size_type local_range,\n    Kernel&amp;&amp; kernel,\n    std::index_sequence&lt;ReductionIndices...&gt;,\n    Reductions... reductions)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L513">include/handler.h:513</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> KernelFlavor</b></dt><dt class="is-family-code"><b> KernelName</b></dt><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> Kernel</b></dt><dt class="is-family-code">size_t<b> ReductionIndices</b></dt><dt class="is-family-code"><b> Reductions</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> global_range</b></dt><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> global_offset</b></dt><dt class="is-family-code">typename detail::kernel_flavor_traits&lt;\n    KernelFlavor,\n    Dims&gt;::local_size_type<b> local_range</b></dt><dt class="is-family-code">Kernel&amp;&amp;<b> kernel</b></dt><dt class="is-family-code">std::index_sequence&lt;ReductionIndices...&gt;<b> </b></dt><dt class="is-family-code">Reductions...<b> reductions</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="E84CA58CAF1E94B2" data-function-name="make_host_task_launcher"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E84CA58CAF1E94B2">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int Dims,\n          bool Collective,\n          typename Kernel&gt;\ndetail::host_task_launcher\nmake_host_task_launcher(\n    const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; global_range,\n    <a href="/docs/api/records/82BFAD3A3BD6412E/">detail::collective_group_id</a> cgid,\n    Kernel&amp;&amp; kernel)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L543">include/handler.h:543</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code">bool<b> Collective</b></dt><dt class="is-family-code"><b> Kernel</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> global_range</b></dt><dt class="is-family-code"><a href="/docs/api/records/82BFAD3A3BD6412E/">detail::collective_group_id</a><b> cgid</b></dt><dt class="is-family-code">Kernel&amp;&amp;<b> kernel</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B53B5948A7F89523" data-function-name="parallel_for_kernel_and_reductions"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B53B5948A7F89523">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename KernelFlavor,\n          typename KernelName,\n          int Dims,\n          typename Kernel,\n          typename... Reductions&gt;\nvoid parallel_for_kernel_and_reductions(\n    range&lt;Dims&gt; global_range,\n    id&lt;Dims&gt; global_offset,\n    typename detail::kernel_flavor_traits&lt;\n        KernelFlavor,\n        Dims&gt;::local_size_type local_range,\n    Kernel&amp;&amp; kernel,\n    Reductions&amp;... reductions)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L404">include/handler.h:404</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> KernelFlavor</b></dt><dt class="is-family-code"><b> KernelName</b></dt><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> Kernel</b></dt><dt class="is-family-code"><b> Reductions</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">range&lt;Dims&gt;<b> global_range</b></dt><dt class="is-family-code">id&lt;Dims&gt;<b> global_offset</b></dt><dt class="is-family-code">typename detail::kernel_flavor_traits&lt;\n    KernelFlavor,\n    Dims&gt;::local_size_type<b> local_range</b></dt><dt class="is-family-code">Kernel&amp;&amp;<b> kernel</b></dt><dt class="is-family-code">Reductions&amp;...<b> reductions</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="6A8ACE4CD3FB8D36" data-function-name="parallel_for_reductions_and_kernel"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6A8ACE4CD3FB8D36">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename KernelFlavor,\n          typename KernelName,\n          int Dims,\n          typename... ReductionsAndKernel,\n          size_t... ReductionIndices&gt;\nvoid parallel_for_reductions_and_kernel(\n    range&lt;Dims&gt; global_range,\n    id&lt;Dims&gt; global_offset,\n    typename detail::kernel_flavor_traits&lt;\n        KernelFlavor,\n        Dims&gt;::local_size_type local_size,\n    std::index_sequence&lt;ReductionIndices...&gt;\n        indices,\n    ReductionsAndKernel&amp;&amp;... kernel_and_reductions)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/handler.h#L394">include/handler.h:394</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> KernelFlavor</b></dt><dt class="is-family-code"><b> KernelName</b></dt><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> ReductionsAndKernel</b></dt><dt class="is-family-code">size_t<b> ReductionIndices</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">range&lt;Dims&gt;<b> global_range</b></dt><dt class="is-family-code">id&lt;Dims&gt;<b> global_offset</b></dt><dt class="is-family-code">typename detail::kernel_flavor_traits&lt;\n    KernelFlavor,\n    Dims&gt;::local_size_type<b> local_size</b></dt><dt class="is-family-code">std::index_sequence&lt;ReductionIndices...&gt;<b> indices</b></dt><dt class="is-family-code">ReductionsAndKernel&amp;&amp;...<b> kernel_and_reductions</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',n={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class handler"},c=void 0,r={id:"api/records/73E846FEAC018FF5",title:"class handler",description:"",source:"@site/celerity-runtime/docs/api/records/73E846FEAC018FF5.mdx",sourceDirName:"api/records",slug:"/api/records/73E846FEAC018FF5",permalink:"/docs/api/records/73E846FEAC018FF5",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class handler"},sidebar:"api"},d={},o=[];function m(e){const{Head:a}={...(0,i.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a,{children:[(0,s.jsx)("script",{src:"/js/highlight.min.js"}),(0,s.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,s.jsx)("div",{dangerouslySetInnerHTML:{__html:l}})]})}function p(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>n,x:()=>c});var s=t(96540);const i={},l=s.createContext(i);function n(e){const a=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),s.createElement(l.Provider,{value:a},e.children)}}}]);