"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[66100],{76307:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>r,contentTitle:()=>n,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var t=o(74848),a=o(28453);const c='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>function nd_copy_host: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page98A8E273A707B877"><span>function nd_copy_host</span></a></li></ul></nav><main class="content"><h3 id="98A8E273A707B877" data-function-name="nd_copy_host"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#98A8E273A707B877">\xb6</a><code class="hdoc-function-code language-cpp">inline void nd_copy_host(\n    const void* source_base,\n    void* dest_base,\n    const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; source_<a href="/docs/api/records/B13622E7024342AF/">range</a>,\n    const range&lt;3&gt;&amp; dest_range,\n    const <a href="/docs/api/records/9A5CC4DFBBD48E5E/">id</a>&lt;3&gt;&amp; offset_in_source,\n    const <a href="/docs/api/records/9A5CC4DFBBD48E5E/">id</a>&lt;3&gt;&amp; offset_in_dest,\n    const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; copy_range,\n    size_t elem_size)</code></pre></h3><h4>Description</h4><p><p>From allocation <code>source_base</code> sized <code>source_range</code> starting at <code>offset_in_source</code>, to allocation <code>dest_base</code> sized <code>dest_range</code> starting at to <code>offset_in_dest</code>, copy <code>copy_range</code> elements of <code>elem_size</code> bytes.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/nd_memory.h#L94">include/nd_memory.h:94</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const void*<b> source_base</b></dt><dt class="is-family-code">void*<b> dest_base</b></dt><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> source_range</b></dt><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> dest_range</b></dt><dt class="is-family-code">const <a href="/docs/api/records/9A5CC4DFBBD48E5E/">id</a>&lt;3&gt;&amp;<b> offset_in_source</b></dt><dt class="is-family-code">const <a href="/docs/api/records/9A5CC4DFBBD48E5E/">id</a>&lt;3&gt;&amp;<b> offset_in_dest</b></dt><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> copy_range</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="972F755EC08F69E3" data-function-name="nd_copy_host"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#972F755EC08F69E3">\xb6</a><code class="hdoc-function-code language-cpp">inline void nd_copy_host(const void* source_base,\n                         void* dest_base,\n                         const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; source_<a href="/docs/api/records/A87962C2586A4E24/">box</a>,\n                         const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; dest_box,\n                         const box&lt;3&gt;&amp; copy_box,\n                         size_t elem_size)</code></pre></h3><h4>Description</h4><p><p>From allocation <code>source_base</code> spanning <code>source_box</code> to allocation <code>dest_base</code> spanning <code>dest_box</code>, copy <code>copy_box</code> elements of <code>elem_size</code> bytes.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/nd_memory.h#L104">include/nd_memory.h:104</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const void*<b> source_base</b></dt><dt class="is-family-code">void*<b> dest_base</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> source_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> dest_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> copy_box</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="19D9E890D20A6529" data-function-name="nd_copy_host"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#19D9E890D20A6529">\xb6</a><code class="hdoc-function-code language-cpp">inline void nd_copy_host(\n    const void* source_base,\n    void* dest_base,\n    const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; source_<a href="/docs/api/records/A87962C2586A4E24/">box</a>,\n    const box&lt;3&gt;&amp; dest_box,\n    const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp; copy_region,\n    size_t elem_size)</code></pre></h3><h4>Description</h4><p><p>From allocation <code>source_base</code> spanning <code>source_box</code> to allocation <code>dest_base</code> spanning <code>dest_box</code>, copy <code>copy_region</code> elements of <code>elem_size</code> bytes.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/nd_memory.h#L114">include/nd_memory.h:114</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const void*<b> source_base</b></dt><dt class="is-family-code">void*<b> dest_base</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> source_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> dest_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp;<b> copy_region</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',i={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function nd_copy_host"},n=void 0,d={id:"api/functions/celerity_detail-nd_copy_host",title:"function nd_copy_host",description:"",source:"@site/celerity-runtime/docs/api/functions/celerity_detail-nd_copy_host.mdx",sourceDirName:"api/functions",slug:"/api/functions/celerity_detail-nd_copy_host",permalink:"/docs/api/functions/celerity_detail-nd_copy_host",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function nd_copy_host"},sidebar:"api"},r={},l=[];function p(e){const{Head:s}={...(0,a.R)(),...e.components};return s||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s,{children:[(0,t.jsx)("script",{src:"/js/highlight.min.js"}),(0,t.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,t.jsx)("div",{dangerouslySetInnerHTML:{__html:c}})]})}function m(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,s,o)=>{o.d(s,{R:()=>i,x:()=>n});var t=o(96540);const a={},c=t.createContext(a);function i(e){const s=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function n(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(c.Provider,{value:s},e.children)}}}]);