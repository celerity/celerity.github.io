"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4735],{70871:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>n,contentTitle:()=>o,default:()=>f,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var c=s(74848),t=s(28453);const i='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page808FB7C12E4E50FB"><span>class cgf_diagnostics</span></a></li></ul></nav>\n<main><h1>class cgf_diagnostics</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class cgf_diagnostics { /* full declaration omitted */ };</code></pre><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L9">include/cgf_diagnostics.h:9</a></p></aside><section><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_is_checking" data-member-name="m_is_checking">  bool <b>m_is_checking</b> = false</dt><dt class="is-family-code hdoc-private" id="var_m_expected_target" data-member-name="m_expected_target">  <a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;target&gt; <b>m_expected_target</b> = std::nullopt</dt><dt class="is-family-code hdoc-private" id="var_m_expected_buffer_accesses" data-member-name="m_expected_buffer_accesses">  const <a href="/docs/api/records/EEAE4CFC41B6C788/">buffer_access_map</a>* <b>m_expected_buffer_accesses</b> = nullptr</dt><dt class="is-family-code hdoc-private" id="var_m_registered_buffer_accesses" data-member-name="m_registered_buffer_accesses">  <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;bool&gt; <b>m_registered_buffer_accesses</b></dt><dt class="is-family-code hdoc-private" id="var_m_expected_side_effects_count" data-member-name="m_expected_side_effects_count">  size_t <b>m_expected_side_effects_count</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_registered_side_effect_count" data-member-name="m_registered_side_effect_count">  size_t <b>m_registered_side_effect_count</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_instance" data-member-name="m_instance"> static  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;cgf_diagnostics&gt; <b>m_instance</b></dt></dl></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#268F16D0790106C0"><b>cgf_diagnostics</b></a>(const cgf_diagnostics &amp;)</li><li class="is-family-code"><a href="#37F5F0B1015E89DC"><b>cgf_diagnostics</b></a>(cgf_diagnostics &amp;&amp;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;target Tgt, typename Closure, std::enable_if_t&lt;Tgt == target::device, int&gt;  = 0&gt;</span><br><a href="#250A1D376D3A9BD5"><b>check</b></a>(const Closure &amp; kernel, const buffer_access_map &amp; buffer_accesses) &rarr; void</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;target Tgt, typename Closure, std::enable_if_t&lt;Tgt == target::host_task, int&gt;  = 0&gt;</span><br><a href="#A8D3C75EF98CDE33"><b>check</b></a>(const Closure &amp; kernel, const buffer_access_map &amp; buffer_accesses, size_t non_void_side_effects_count) &rarr; void</li><li class="is-family-code"><a href="#C75EB562F2BC4763"><b>get_instance</b></a>() &rarr; static cgf_diagnostics &amp;</li><li class="is-family-code"><a href="#41D677A9D2D76FCA"><b>is_available</b></a>() &rarr; static bool</li><li class="is-family-code"><a href="#C2562D6DC5657A3A"><b>is_checking</b></a>() const &rarr; bool</li><li class="is-family-code"><a href="#E1621DA6D96B5704"><b>make_available</b></a>() &rarr; static void</li><li class="is-family-code"><a href="#632DF5161B718CF9"><b>operator=</b></a>(const cgf_diagnostics &amp;) &rarr; cgf_diagnostics</li><li class="is-family-code"><a href="#73E9E7844B92BD53"><b>operator=</b></a>(cgf_diagnostics &amp;&amp;) &rarr; cgf_diagnostics</li><li class="is-family-code"><a href="#E53D470530E9D9E8"><b>register_accessor</b></a>(hydration_id hid, target tgt) &rarr; void</li><li class="is-family-code"><a href="#CA41A61A3E92F45D"><b>register_side_effect</b></a>() &rarr; void</li><li class="is-family-code"><a href="#6F12EAC7C3B68C55"><b>teardown</b></a>() &rarr; static void</li><li class="is-family-code"><a href="#833083753F9D8631"><b>~cgf_diagnostics</b></a>()</li><li class="is-family-code hdoc-private"><a href="#BDC57659789DC047"><b>cgf_diagnostics</b></a>()</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;typename Closure&gt;</span><br><a href="#C65312921359621F"><b>check</b></a>(target tgt, const Closure &amp; kernel, const buffer_access_map * buffer_accesses, size_t expected_side_effects_count) &rarr; void</li></ul></section><section><h2>Member Functions</h2><section><h3 id="268F16D0790106C0" data-function-name="cgf_diagnostics"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#268F16D0790106C0">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a>(const cgf_diagnostics&amp;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L25">include/cgf_diagnostics.h:25</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a>&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="37F5F0B1015E89DC" data-function-name="cgf_diagnostics"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#37F5F0B1015E89DC">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a>(cgf_diagnostics&amp;&amp;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L26">include/cgf_diagnostics.h:26</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a>&amp;&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="250A1D376D3A9BD5" data-function-name="check"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#250A1D376D3A9BD5">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;target Tgt,\n          typename Closure,\n          std::enable_if_t&lt;Tgt == target::device,\n                           int&gt; = 0&gt;\nvoid check(\n    const Closure&amp; kernel,\n    const <a href="/docs/api/records/EEAE4CFC41B6C788/">buffer_access_map</a>&amp; buffer_accesses)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L32">include/cgf_diagnostics.h:32</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">target<b> Tgt</b></dt><dt class="is-family-code"><b> Closure</b></dt><dt class="is-family-code">std::enable_if_t&lt;Tgt == target::device, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const Closure&amp;<b> kernel</b></dt><dt class="is-family-code">const <a href="/docs/api/records/EEAE4CFC41B6C788/">buffer_access_map</a>&amp;<b> buffer_accesses</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="A8D3C75EF98CDE33" data-function-name="check"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A8D3C75EF98CDE33">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;\n    target Tgt,\n    typename Closure,\n    std::enable_if_t&lt;Tgt == target::host_task,\n                     int&gt; = 0&gt;\nvoid check(\n    const Closure&amp; kernel,\n    const <a href="/docs/api/records/EEAE4CFC41B6C788/">buffer_access_map</a>&amp; buffer_accesses,\n    size_t non_void_side_effects_count)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L38">include/cgf_diagnostics.h:38</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">target<b> Tgt</b></dt><dt class="is-family-code"><b> Closure</b></dt><dt class="is-family-code">std::enable_if_t&lt;Tgt == target::host_task, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const Closure&amp;<b> kernel</b></dt><dt class="is-family-code">const <a href="/docs/api/records/EEAE4CFC41B6C788/">buffer_access_map</a>&amp;<b> buffer_accesses</b></dt><dt class="is-family-code">size_t<b> non_void_side_effects_count</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="C75EB562F2BC4763" data-function-name="get_instance"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C75EB562F2BC4763">\xb6</a><code class="hdoc-function-code language-cpp">static <a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a>&amp; get_instance()</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L20">include/cgf_diagnostics.h:20</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="41D677A9D2D76FCA" data-function-name="is_available"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#41D677A9D2D76FCA">\xb6</a><code class="hdoc-function-code language-cpp">static bool is_available()</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L16">include/cgf_diagnostics.h:16</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="C2562D6DC5657A3A" data-function-name="is_checking"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C2562D6DC5657A3A">\xb6</a><code class="hdoc-function-code language-cpp">bool is_checking() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L43">include/cgf_diagnostics.h:43</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="E1621DA6D96B5704" data-function-name="make_available"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E1621DA6D96B5704">\xb6</a><code class="hdoc-function-code language-cpp">static void make_available()</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L11">include/cgf_diagnostics.h:11</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="632DF5161B718CF9" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#632DF5161B718CF9">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a> operator=(const <a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a>&amp;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L27">include/cgf_diagnostics.h:27</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a>&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="73E9E7844B92BD53" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#73E9E7844B92BD53">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a> operator=(<a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a>&amp;&amp;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L28">include/cgf_diagnostics.h:28</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/808FB7C12E4E50FB/">cgf_diagnostics</a>&amp;&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="E53D470530E9D9E8" data-function-name="register_accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E53D470530E9D9E8">\xb6</a><code class="hdoc-function-code language-cpp">void register_accessor(<a href="/docs/api/records/6F3FB2BA78185BC8/">hydration_id</a> hid,\n                       <a href="/docs/api/enums/A570C39AEE51261C/">target</a> tgt)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L45">include/cgf_diagnostics.h:45</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/6F3FB2BA78185BC8/">hydration_id</a><b> hid</b></dt><dt class="is-family-code"><a href="/docs/api/enums/A570C39AEE51261C/">target</a><b> tgt</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CA41A61A3E92F45D" data-function-name="register_side_effect"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CA41A61A3E92F45D">\xb6</a><code class="hdoc-function-code language-cpp">void register_side_effect()</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L56">include/cgf_diagnostics.h:56</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="6F12EAC7C3B68C55" data-function-name="teardown"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6F12EAC7C3B68C55">\xb6</a><code class="hdoc-function-code language-cpp">static void teardown()</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L18">include/cgf_diagnostics.h:18</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="833083753F9D8631" data-function-name="~cgf_diagnostics"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#833083753F9D8631">\xb6</a><code class="hdoc-function-code language-cpp">~cgf_diagnostics()</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L29">include/cgf_diagnostics.h:29</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="BDC57659789DC047" data-function-name="cgf_diagnostics"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BDC57659789DC047">\xb6</a><code class="hdoc-function-code language-cpp">cgf_diagnostics()</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L72">include/cgf_diagnostics.h:72</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="C65312921359621F" data-function-name="check"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C65312921359621F">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Closure&gt;\nvoid check(\n    <a href="/docs/api/enums/A570C39AEE51261C/">target</a> tgt,\n    const Closure&amp; kernel,\n    const <a href="/docs/api/records/EEAE4CFC41B6C788/">buffer_access_map</a>* buffer_accesses,\n    size_t expected_side_effects_count)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/cgf_diagnostics.h#L75">include/cgf_diagnostics.h:75</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Closure</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/enums/A570C39AEE51261C/">target</a><b> tgt</b></dt><dt class="is-family-code">const Closure&amp;<b> kernel</b></dt><dt class="is-family-code">const <a href="/docs/api/records/EEAE4CFC41B6C788/">buffer_access_map</a>*<b> buffer_accesses</b></dt><dt class="is-family-code">size_t<b> expected_side_effects_count</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',r={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class cgf_diagnostics"},o=void 0,d={id:"api/records/808FB7C12E4E50FB",title:"class cgf_diagnostics",description:"",source:"@site/celerity-runtime/docs/api/records/808FB7C12E4E50FB.mdx",sourceDirName:"api/records",slug:"/api/records/808FB7C12E4E50FB",permalink:"/docs/api/records/808FB7C12E4E50FB",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class cgf_diagnostics"},sidebar:"api"},n={},l=[];function p(e){const{Head:a}={...(0,t.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(a,{children:[(0,c.jsx)("script",{src:"/js/highlight.min.js"}),(0,c.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,c.jsx)("div",{dangerouslySetInnerHTML:{__html:i}})]})}function f(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,c.jsx)(a,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>r,x:()=>o});var c=s(96540);const t={},i=c.createContext(t);function r(e){const a=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),c.createElement(i.Provider,{value:a},e.children)}}}]);