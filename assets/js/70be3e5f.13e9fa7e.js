"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[66100],{76307:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>r,contentTitle:()=>d,default:()=>_,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var c=s(74848),t=s(28453);const a='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page98A8E273A707B877"><span>function nd_copy_host</span></a></li></ul></nav>\n<main><section><h3 id="98A8E273A707B877" data-function-name="nd_copy_host"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#98A8E273A707B877">\xb6</a><code class="hdoc-function-code language-cpp">inline void nd_copy_host(\n    const void* source_base,\n    void* dest_base,\n    const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; source_<a href="/docs/api/records/B13622E7024342AF/">range</a>,\n    const range&lt;3&gt;&amp; dest_range,\n    const <a href="/docs/api/records/9A5CC4DFBBD48E5E/">id</a>&lt;3&gt;&amp; offset_in_source,\n    const <a href="/docs/api/records/9A5CC4DFBBD48E5E/">id</a>&lt;3&gt;&amp; offset_in_dest,\n    const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; copy_range,\n    size_t elem_size)</code></pre></h3><section><h4>Description</h4><p><p>From allocation <code>source_base</code> sized <code>source_range</code> starting at <code>offset_in_source</code>, to allocation <code>dest_base</code> sized <code>dest_range</code> starting at to <code>offset_in_dest</code>, copy <code>copy_range</code> elements of <code>elem_size</code> bytes.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/nd_memory.h#L94">include/nd_memory.h:94</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const void*<b> source_base</b></dt><dt class="is-family-code">void*<b> dest_base</b></dt><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> source_range</b></dt><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> dest_range</b></dt><dt class="is-family-code">const <a href="/docs/api/records/9A5CC4DFBBD48E5E/">id</a>&lt;3&gt;&amp;<b> offset_in_source</b></dt><dt class="is-family-code">const <a href="/docs/api/records/9A5CC4DFBBD48E5E/">id</a>&lt;3&gt;&amp;<b> offset_in_dest</b></dt><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> copy_range</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="972F755EC08F69E3" data-function-name="nd_copy_host"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#972F755EC08F69E3">\xb6</a><code class="hdoc-function-code language-cpp">inline void nd_copy_host(const void* source_base,\n                         void* dest_base,\n                         const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; source_<a href="/docs/api/records/A87962C2586A4E24/">box</a>,\n                         const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; dest_box,\n                         const box&lt;3&gt;&amp; copy_box,\n                         size_t elem_size)</code></pre></h3><section><h4>Description</h4><p><p>From allocation <code>source_base</code> spanning <code>source_box</code> to allocation <code>dest_base</code> spanning <code>dest_box</code>, copy <code>copy_box</code> elements of <code>elem_size</code> bytes.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/nd_memory.h#L104">include/nd_memory.h:104</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const void*<b> source_base</b></dt><dt class="is-family-code">void*<b> dest_base</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> source_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> dest_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> copy_box</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="19D9E890D20A6529" data-function-name="nd_copy_host"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#19D9E890D20A6529">\xb6</a><code class="hdoc-function-code language-cpp">inline void nd_copy_host(\n    const void* source_base,\n    void* dest_base,\n    const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; source_<a href="/docs/api/records/A87962C2586A4E24/">box</a>,\n    const box&lt;3&gt;&amp; dest_box,\n    const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp; copy_region,\n    size_t elem_size)</code></pre></h3><section><h4>Description</h4><p><p>From allocation <code>source_base</code> spanning <code>source_box</code> to allocation <code>dest_base</code> spanning <code>dest_box</code>, copy <code>copy_region</code> elements of <code>elem_size</code> bytes.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/nd_memory.h#L114">include/nd_memory.h:114</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const void*<b> source_base</b></dt><dt class="is-family-code">void*<b> dest_base</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> source_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> dest_box</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp;<b> copy_region</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt></dl></section></section><hr class="member-fun-separator"></hr></main>',n={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function nd_copy_host"},d=void 0,i={id:"api/functions/celerity_detail-nd_copy_host",title:"function nd_copy_host",description:"",source:"@site/celerity-runtime/docs/api/functions/celerity_detail-nd_copy_host.mdx",sourceDirName:"api/functions",slug:"/api/functions/celerity_detail-nd_copy_host",permalink:"/docs/api/functions/celerity_detail-nd_copy_host",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function nd_copy_host"},sidebar:"api"},r={},l=[];function p(e){const{Head:o}={...(0,t.R)(),...e.components};return o||function(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(o,{children:[(0,c.jsx)("script",{src:"/js/highlight.min.js"}),(0,c.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,c.jsx)("div",{dangerouslySetInnerHTML:{__html:a}})]})}function _(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,c.jsx)(o,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}},28453:(e,o,s)=>{s.d(o,{R:()=>n,x:()=>d});var c=s(96540);const t={},a=c.createContext(t);function n(e){const o=c.useContext(a);return c.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),c.createElement(a.Provider,{value:o},e.children)}}}]);