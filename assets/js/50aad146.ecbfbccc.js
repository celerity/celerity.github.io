"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[60941],{91224:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>n,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=s(74848),t=s(28453);const c='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>class buffer_access_map: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="pageEEAE4CFC41B6C788"><span>class buffer_access_map</span></a></li></ul></nav><main class="content"><h1>class buffer_access_map</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class buffer_access_map { /* full declaration omitted */ };</code></pre><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L24">include/task.h:24</a></p><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_accesses" data-member-name="m_accesses">  <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;\n    std::pair&lt;buffer_id,\n              std::unique_ptr&lt;range_mapper_base&gt;&gt;&gt; <b>m_accesses</b></dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#804249F5147309F9"><b>add_access</b></a>(buffer_id bid, std::unique_ptr&lt;range_mapper_base&gt; &amp;&amp; rm) &rarr; void</li><li class="is-family-code"><a href="#9CC17AD359DAE215"><b>get_access_modes</b></a>(buffer_id bid) const &rarr; std::unordered_set&lt;sycl::access::mode&gt;</li><li class="is-family-code"><a href="#2303B64E6DA67D23"><b>get_accessed_buffers</b></a>() const &rarr; std::unordered_set&lt;buffer_id&gt;</li><li class="is-family-code"><a href="#28418451550BA626"><b>get_mode_requirements</b></a>(buffer_id bid, access_mode mode, int kernel_dims, const subrange&lt;3&gt; &amp; sr, const range&lt;3&gt; &amp; global_size) const &rarr; region&lt;3&gt;</li><li class="is-family-code"><a href="#A7EEBD784C1C4A48"><b>get_nth_access</b></a>(size_t n) const &rarr; std::pair&lt;buffer_id, access_mode&gt;</li><li class="is-family-code"><a href="#D3F4EDE15AC2D7A8"><b>get_num_accesses</b></a>() const &rarr; size_t</li><li class="is-family-code"><a href="#3FC8C166D2EB4133"><b>get_range_mappers</b></a>(buffer_id bid) const &rarr; std::vector&lt;const range_mapper_base *&gt;</li><li class="is-family-code"><a href="#8EDC15C1095FC89D"><b>get_required_contiguous_boxes</b></a>(buffer_id bid, int kernel_dims, const subrange&lt;3&gt; &amp; sr, const range&lt;3&gt; &amp; global_size) const &rarr; box_vector&lt;3&gt;</li><li class="is-family-code"><a href="#D54512657DFFFAD1"><b>get_requirements_for_nth_access</b></a>(size_t n, int kernel_dims, const subrange&lt;3&gt; &amp; sr, const range&lt;3&gt; &amp; global_size) const &rarr; box&lt;3&gt;</li></ul><h2>Member Functions</h2><h3 id="804249F5147309F9" data-function-name="add_access"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#804249F5147309F9">\xb6</a><code class="hdoc-function-code language-cpp">void add_access(\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;range_mapper_base&gt;&amp;&amp; rm)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L26">include/task.h:26</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;range_mapper_base&gt;&amp;&amp;<b> rm</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="9CC17AD359DAE215" data-function-name="get_access_modes"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9CC17AD359DAE215">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/container/unordered_set">std::unordered_set</a>&lt;sycl::access::mode&gt;\nget_access_modes(<a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L29">include/task.h:29</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="2303B64E6DA67D23" data-function-name="get_accessed_buffers"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2303B64E6DA67D23">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/container/unordered_set">std::unordered_set</a>&lt;buffer_id&gt;\nget_accessed_buffers() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L28">include/task.h:28</a></p><hr class="member-fun-separator"></hr><h3 id="28418451550BA626" data-function-name="get_mode_requirements"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#28418451550BA626">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt; get_mode_requirements(\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    access_mode mode,\n    int kernel_dims,\n    const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt;&amp; sr,\n    const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; global_size) const</code></pre></h3><h4>Description</h4><p><p>Computes the combined access-region for a given buffer, mode and subrange.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L45">include/task.h:45</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code">access_mode<b> mode</b></dt><dt class="is-family-code">int<b> kernel_dims</b></dt><dt class="is-family-code">const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt;&amp;<b> sr</b></dt><dd>The subrange to be passed to the range mappers (extended to a chunk using the global size of the task)</dd><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> global_size</b></dt></dl><h4>Returns</h4><p>The region obtained by merging the results of all range-mappers for this buffer and mode</p><hr class="member-fun-separator"></hr><h3 id="A7EEBD784C1C4A48" data-function-name="get_nth_access"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A7EEBD784C1C4A48">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/utility/pair">std::pair</a>&lt;buffer_id, access_mode&gt; get_nth_access(\n    size_t n) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L31">include/task.h:31</a></p><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> n</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="D3F4EDE15AC2D7A8" data-function-name="get_num_accesses"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D3F4EDE15AC2D7A8">\xb6</a><code class="hdoc-function-code language-cpp">size_t get_num_accesses() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L30">include/task.h:30</a></p><hr class="member-fun-separator"></hr><h3 id="3FC8C166D2EB4133" data-function-name="get_range_mappers"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3FC8C166D2EB4133">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;const range_mapper_base*&gt;\nget_range_mappers(<a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L50">include/task.h:50</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="8EDC15C1095FC89D" data-function-name="get_required_contiguous_boxes"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8EDC15C1095FC89D">\xb6</a><code class="hdoc-function-code language-cpp">box_vector&lt;3&gt; get_required_contiguous_boxes(\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    int kernel_dims,\n    const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt;&amp; sr,\n    const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; global_size) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L58">include/task.h:58</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code">int<b> kernel_dims</b></dt><dt class="is-family-code">const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt;&amp;<b> sr</b></dt><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> global_size</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="D54512657DFFFAD1" data-function-name="get_requirements_for_nth_access"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D54512657DFFFAD1">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt; get_requirements_for_nth_access(\n    size_t n,\n    int kernel_dims,\n    const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt;&amp; sr,\n    const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; global_size) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/task.h#L48">include/task.h:48</a></p><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> n</b></dt><dt class="is-family-code">int<b> kernel_dims</b></dt><dt class="is-family-code">const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt;&amp;<b> sr</b></dt><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> global_size</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',i={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class buffer_access_map"},n=void 0,o={id:"api/records/EEAE4CFC41B6C788",title:"class buffer_access_map",description:"",source:"@site/celerity-runtime/docs/api/records/EEAE4CFC41B6C788.mdx",sourceDirName:"api/records",slug:"/api/records/EEAE4CFC41B6C788",permalink:"/docs/api/records/EEAE4CFC41B6C788",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class buffer_access_map"},sidebar:"api"},l={},d=[];function p(e){const{Head:a}={...(0,t.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a,{children:[(0,r.jsx)("script",{src:"/js/highlight.min.js"}),(0,r.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,r.jsx)("div",{dangerouslySetInnerHTML:{__html:c}})]})}function m(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>i,x:()=>n});var r=s(96540);const t={},c=r.createContext(t);function i(e){const a=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function n(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(c.Provider,{value:a},e.children)}}}]);