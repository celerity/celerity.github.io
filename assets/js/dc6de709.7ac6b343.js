"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[19379],{86707:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=n(74848),o=n(28453);const r={id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started"},a=void 0,s={id:"getting-started",title:"Getting Started",description:"Celerity is a high-level C++17 API and runtime environment that aims to bring",source:"@site/celerity-runtime/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Philip Salzmann",lastUpdatedAt:1637101258e3,frontMatter:{id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started"},sidebar:"docs",next:{title:"Installation",permalink:"/docs/installation"}},l={},d=[{value:"Transparently Scale Your Applications",id:"transparently-scale-your-applications",level:2},{value:"A Word of Caution",id:"a-word-of-caution",level:3},{value:"Built on a Strong Foundation",id:"built-on-a-strong-foundation",level:2},{value:"Points of Divergence",id:"points-of-divergence",level:3},{value:"Further Reading",id:"further-reading",level:2}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Celerity is a high-level C++17 API and runtime environment that aims to bring\nthe power and ease of use of ",(0,i.jsx)(t.a,{href:"https://www.khronos.org/sycl/",children:"SYCL"})," to\ndistributed-memory accelerator clusters."]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["If you want to get your hands dirty right away, move on to the\n",(0,i.jsx)(t.a,{href:"/docs/installation",children:"Installation"})," guide."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"transparently-scale-your-applications",children:"Transparently Scale Your Applications"}),"\n",(0,i.jsxs)(t.p,{children:["Celerity allows you to write highly parallel applications that can be run on a\ncluster of accelerator nodes. It focuses on providing a way of scaling\napplications to many nodes ",(0,i.jsx)(t.strong,{children:"without having to be an expert in cluster\nprogramming"}),". In fact, the Celerity API does not make it apparent that a\nprogram is (potentially) running on many nodes at all: There is no notion of\n",(0,i.jsx)(t.em,{children:"ranks"}),"; ",(0,i.jsx)(t.strong,{children:"partitioning of work and data is taken care of transparently behind the\nscenes"}),". This lets you focus on your actual work, without having to concern\nyourself with the complexities of modern distributed memory cluster programming."]}),"\n",(0,i.jsx)(t.h3,{id:"a-word-of-caution",children:"A Word of Caution"}),"\n",(0,i.jsxs)(t.p,{children:["While ease of use is one of Celerity's main goals, simplicity can only go so far\nwithout sacrificing considerable performance. ",(0,i.jsx)(t.strong,{children:"Proficiency in modern C++ as\nwell as at least a rough understanding of how accelerator (GPU) programming\ndiffers from parallel CPU programming is required"})," to make efficient use of\nCelerity. Additionally, you will require a good understanding of the algorithms\nand techniques you intend to implement using Celerity in order for the runtime\nsystem to be able to run it on a cluster both correctly and in an efficient\nmanner."]}),"\n",(0,i.jsx)(t.h2,{id:"built-on-a-strong-foundation",children:"Built on a Strong Foundation"}),"\n",(0,i.jsxs)(t.p,{children:["Celerity is built on top of ",(0,i.jsx)(t.a,{href:"https://www.khronos.org/sycl/",children:"SYCL"}),", an\nopen-standard high-level C++ embedded domain specific language for programming\naccelerators. SYCL provides a great API that hits a sweet spot between\nexpressiveness and power as well as ease of use, making it the perfect starting\npoint for Celerity: We set out to find the ",(0,i.jsx)(t.strong,{children:"minimal set of API extensions"}),"\nrequired to bring the SYCL API to distributed memory clusters - thus making it\nrelatively ",(0,i.jsx)(t.strong,{children:"easy to migrate an existing SYCL application to Celerity"}),". If you\ndon't have any experience with SYCL, don't worry, as we will introduce the most\nimportant concepts along the way."]}),"\n",(0,i.jsx)(t.h3,{id:"points-of-divergence",children:"Points of Divergence"}),"\n",(0,i.jsxs)(t.p,{children:["While it is one of Celerity's ",(0,i.jsx)(t.a,{href:"/docs/core-principles",children:"Core Principles"})," to stick as\nclosely to SYCL as possible, ",(0,i.jsx)(t.strong,{children:"the Celerity API is neither a super- nor subset\nof the SYCL API"}),": On one hand certain SYCL features, such as SYCL 2020's\nunified shared memory (USM), are inherently unsuitable for distributed memory\nexecution and can therefore not be supported by Celerity. On the other hand,\ncertain high-performance computing (HPC) features such as ",(0,i.jsx)(t.a,{href:"/docs/host-tasks#experimental-collective-host-tasks",children:"Collective Host\nTasks"})," are required to make\nCelerity work at scale."]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["Starting with Celerity 0.3.0, most supported SYCL features are made available\nthrough the ",(0,i.jsx)(t.code,{children:"celerity::"})," namespace, in addition to the ",(0,i.jsx)(t.code,{children:"sycl::"})," namespace.\nWhen in doubt, we recommend sticking to the former."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,i.jsxs)(t.p,{children:["If this piqued your interest and you would like to try it for yourself, check\nout the ",(0,i.jsx)(t.a,{href:"/docs/installation",children:"Installation"})," section on how to build and install\nCelerity. For a complete example of how to set up a Celerity application from\nstart to finish, see the ",(0,i.jsx)(t.a,{href:"/docs/tutorial",children:"Tutorial"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["For more information on the overall Celerity API as well as the driving\nprinciples behind its design, please see our Celerity in-depth\n",(0,i.jsx)(t.a,{href:"/docs/overview",children:"Overview"})," section."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(96540);const o={},r=i.createContext(o);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);