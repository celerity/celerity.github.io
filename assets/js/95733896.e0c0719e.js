"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2083],{61527:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=t(74848),i=t(28453);const n='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li><a href="/docs/api/records/D8077D06AAAEBEFD/"><span>class instruction_graph_generator</span></a></li><li class="is-active"><a aria-current="page2CF0540537D19097"><span>struct instruction_graph_generator::policy_set</span></a></li></ul></nav>\n<main><h1>struct instruction_graph_generator::policy_set</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct instruction_graph_generator::policy_set { /* full declaration omitted */ };</code></pre><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph_generator.h#L60">include/instruction_graph_generator.h:60</a></p></aside><section><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_unsafe_oversubscription_error" data-member-name="unsafe_oversubscription_error">  <a href="/docs/api/enums/74E8F59E81C0B2E4/">error_policy</a> <b>unsafe_oversubscription_error</b> = error_policy::panic</dt><dd>Reported when the user requests a `hint::oversubscribe`, but oversubscription is unsafe because the task has side effects, participates in a collective-group operation, performs a reduction (current limitation of our implementation) or its iteration space simply cannot be split.</dd><dt class="is-family-code" id="var_uninitialized_read_error" data-member-name="uninitialized_read_error">  <a href="/docs/api/enums/74E8F59E81C0B2E4/">error_policy</a> <b>uninitialized_read_error</b> = error_policy::panic</dt><dd>Reported when a task attempts to read data that has neither been await-pushed nor generated on the local node. This error is usually caught on a higher level by the task and command graph generator.</dd><dt class="is-family-code" id="var_overlapping_write_error" data-member-name="overlapping_write_error">  <a href="/docs/api/enums/74E8F59E81C0B2E4/">error_policy</a> <b>overlapping_write_error</b> = error_policy::panic</dt><dd>Reported when two or more chunks of a device kernel or host task attempt to write the same buffer elements. instruction_graph_generator will produce an executable graph even when this error is being ignored, but will cause race conditions between instructions on the executor level.</dd></dl></section><section></section></main>',s={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct instruction_graph_generator::policy_set"},o=void 0,c={id:"api/records/2CF0540537D19097",title:"struct instruction_graph_generator::policy_set",description:"",source:"@site/celerity-runtime/docs/api/records/2CF0540537D19097.mdx",sourceDirName:"api/records",slug:"/api/records/2CF0540537D19097",permalink:"/docs/api/records/2CF0540537D19097",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct instruction_graph_generator::policy_set"},sidebar:"api"},l={},d=[];function p(e){const{Head:r}={...(0,i.R)(),...e.components};return r||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r,{children:[(0,a.jsx)("script",{src:"/js/highlight.min.js"}),(0,a.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:n}})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>o});var a=t(96540);const i={},n=a.createContext(i);function s(e){const r=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(n.Provider,{value:r},e.children)}}}]);