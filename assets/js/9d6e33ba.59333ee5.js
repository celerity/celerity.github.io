"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[21826],{97942:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>n,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var s=i(74848),r=i(28453);const c='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>class region: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="pageA3975FE869EB8647"><span>class region</span></a></li></ul></nav><main class="content"><h1>class region</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">template &lt;int Dims&gt;\nclass region { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>An arbitrary-dimensional set of points described by a normalized tiling of boxes.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L221">include/grid.h:221</a></p><h2>Template Parameters</h2><dl><dt class="is-family-code">int<b> Dims</b></dt></dl><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_dimensions" data-member-name="dimensions"> static  const int <b>dimensions</b> = Dims</dt><dt class="is-family-code hdoc-private" id="var_m_boxes" data-member-name="m_boxes">  box_vector <b>m_boxes</b></dt></dl><h2>Member Aliases</h2><ul><li class="is-family-code">using box = detail::box&lt;Dims&gt;;</li><li class="is-family-code">using box_vector = detail::box_vector&lt;Dims&gt;;</li></ul><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#36099A39950F27BE"><b>empty</b></a>() const &rarr; bool</li><li class="is-family-code"><a href="#2167D420D3F83C37"><b>get_area</b></a>() const &rarr; size_t</li><li class="is-family-code"><a href="#9E213F5EDC7F25D6"><b>get_boxes</b></a>() const &amp; &rarr; const box_vector &amp;</li><li class="is-family-code"><a href="#46F633B1E23B356E"><b>get_effective_dims</b></a>() const &rarr; int</li><li class="is-family-code"><a href="#0CC8352DF25B5726"><b>into_boxes</b></a>() &amp;&amp; &rarr; box_vector</li><li class="is-family-code"><a href="#146751D94D97FF98"><b>region</b></a>()</li><li class="is-family-code"><a href="#4CF47C9D68E8B1B4"><b>region</b></a>(const box &amp; single_box)</li><li class="is-family-code"><a href="#37B57A7489E59BCF"><b>region</b></a>(const subrange&lt;Dims&gt; &amp; single_sr)</li><li class="is-family-code"><a href="#1A70F821576637B7"><b>region</b></a>(box_vector &amp;&amp; boxes) &rarr; explicit</li><li class="is-family-code hdoc-private"><a href="#5BBACA198E46DA08"><b>region</b></a>(grid_detail::normalized_t, box_vector &amp;&amp; boxes)</li></ul><h2>Friend Function Overview</h2><ul><li class="is-family-code"><a href="#EB03F5974E8C17E6"><b>operator!=</b></a>(const region&lt;Dims&gt; &amp; lhs, const region&lt;Dims&gt; &amp; rhs) &rarr; friend bool</li><li class="is-family-code"><a href="#BD86889D865BE960"><b>operator==</b></a>(const region&lt;Dims&gt; &amp; lhs, const region&lt;Dims&gt; &amp; rhs) &rarr; friend bool</li></ul><h2>Member Functions</h2><h3 id="36099A39950F27BE" data-function-name="empty"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#36099A39950F27BE">\xb6</a><code class="hdoc-function-code language-cpp">bool empty() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L238">include/grid.h:238</a></p><hr class="member-fun-separator"></hr><h3 id="2167D420D3F83C37" data-function-name="get_area"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2167D420D3F83C37">\xb6</a><code class="hdoc-function-code language-cpp">size_t get_area() const</code></pre></h3><h4>Description</h4><p><p>Counts the number of points covered by the region.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L241">include/grid.h:241</a></p><hr class="member-fun-separator"></hr><h3 id="9E213F5EDC7F25D6" data-function-name="get_boxes"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9E213F5EDC7F25D6">\xb6</a><code class="hdoc-function-code language-cpp">const box_vector&amp; get_boxes() const&amp;</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L234">include/grid.h:234</a></p><hr class="member-fun-separator"></hr><h3 id="46F633B1E23B356E" data-function-name="get_effective_dims"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#46F633B1E23B356E">\xb6</a><code class="hdoc-function-code language-cpp">int get_effective_dims() const</code></pre></h3><h4>Description</h4><p><p>Returns the smallest dimensionality that <code>*this</code> can be <code>region_cast</code> to.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L246">include/grid.h:246</a></p><hr class="member-fun-separator"></hr><h3 id="0CC8352DF25B5726" data-function-name="into_boxes"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0CC8352DF25B5726">\xb6</a><code class="hdoc-function-code language-cpp">box_vector into_boxes() &amp;&amp;</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L236">include/grid.h:236</a></p><hr class="member-fun-separator"></hr><h3 id="146751D94D97FF98" data-function-name="region"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#146751D94D97FF98">\xb6</a><code class="hdoc-function-code language-cpp">region()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L227">include/grid.h:227</a></p><hr class="member-fun-separator"></hr><h3 id="4CF47C9D68E8B1B4" data-function-name="region"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4CF47C9D68E8B1B4">\xb6</a><code class="hdoc-function-code language-cpp">region(const box&amp; single_box)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L228">include/grid.h:228</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const box&amp;<b> single_box</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="37B57A7489E59BCF" data-function-name="region"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#37B57A7489E59BCF">\xb6</a><code class="hdoc-function-code language-cpp">region(const subrange&lt;Dims&gt;&amp; single_sr)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L229">include/grid.h:229</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const subrange&lt;Dims&gt;&amp;<b> single_sr</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="1A70F821576637B7" data-function-name="region"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1A70F821576637B7">\xb6</a><code class="hdoc-function-code language-cpp">explicit region(box_vector&amp;&amp; boxes)</code></pre></h3><h4>Description</h4><p><p>Constructs a region by normalizing an arbitrary, potentially-overlapping tiling of boxes.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L232">include/grid.h:232</a></p><h4>Parameters</h4><dl><dt class="is-family-code">box_vector&amp;&amp;<b> boxes</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="5BBACA198E46DA08" data-function-name="region"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5BBACA198E46DA08">\xb6</a><code class="hdoc-function-code language-cpp">region(<a href="/docs/api/records/7A34EE997DA7EDDB/">grid_detail::normalized_t</a>,\n       box_vector&amp;&amp; boxes)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L257">include/grid.h:257</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/7A34EE997DA7EDDB/">grid_detail::normalized_t</a><b> </b></dt><dt class="is-family-code">box_vector&amp;&amp;<b> boxes</b></dt></dl><hr class="member-fun-separator"></hr><h2>Friend Functions</h2><h3 id="EB03F5974E8C17E6" data-function-name="operator!="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EB03F5974E8C17E6">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator!=(const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;Dims&gt;&amp; lhs,\n                       const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;Dims&gt;&amp; rhs)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L249">include/grid.h:249</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;Dims&gt;&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;Dims&gt;&amp;<b> rhs</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="BD86889D865BE960" data-function-name="operator=="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BD86889D865BE960">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator==(const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;Dims&gt;&amp; lhs,\n                       const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;Dims&gt;&amp; rhs)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/grid.h#L248">include/grid.h:248</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;Dims&gt;&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;Dims&gt;&amp;<b> rhs</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',t={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class region"},o=void 0,l={id:"api/records/A3975FE869EB8647",title:"class region",description:"",source:"@site/celerity-runtime/docs/api/records/A3975FE869EB8647.mdx",sourceDirName:"api/records",slug:"/api/records/A3975FE869EB8647",permalink:"/docs/api/records/A3975FE869EB8647",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class region"},sidebar:"api"},n={},d=[];function p(e){const{Head:a}={...(0,r.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a,{children:[(0,s.jsx)("script",{src:"/js/highlight.min.js"}),(0,s.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,s.jsx)("div",{dangerouslySetInnerHTML:{__html:c}})]})}function h(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,a,i)=>{i.d(a,{R:()=>t,x:()=>o});var s=i(96540);const r={},c=s.createContext(r);function t(e){const a=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(c.Provider,{value:a},e.children)}}}]);