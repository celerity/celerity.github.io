"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[35275],{14401:(e,a,c)=>{c.r(a),c.d(a,{assets:()=>l,contentTitle:()=>n,default:()=>m,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var s=c(74848),t=c(28453);const i='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="pageBD608CD8E3195AFC"><span>struct sycl_backend::impl</span></a></li></ul></nav>\n<main><h1>struct sycl_backend::impl</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct sycl_backend::impl { /* full declaration omitted */ };</code></pre><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/backend/sycl_backend.cc#L62">src/backend/sycl_backend.cc:62</a></p></aside><section><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_system" data-member-name="system">  <a href="/docs/api/records/8B87A955194B6925/">system_info</a> <b>system</b></dt><dt class="is-family-code" id="var_devices" data-member-name="devices">  <a href="/docs/api/records/7F709CB15C3D9013/">dense_map</a>&lt;device_id, device_state&gt; <b>devices</b></dt><dt class="is-family-code" id="var_host" data-member-name="host">  <a href="/docs/api/records/B99C21DEDBE6C7C9/">host_state</a> <b>host</b></dt><dt class="is-family-code" id="var_enable_profiling" data-member-name="enable_profiling">  bool <b>enable_profiling</b></dt></dl></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#FF4C9FD4B8BFF25A"><b>get_device_queue</b></a>(device_id did, size_t lane) &rarr; sycl::queue &amp;</li><li class="is-family-code"><a href="#56310EE75130F848"><b>get_host_queue</b></a>(size_t lane) &rarr; thread_queue &amp;</li><li class="is-family-code"><a href="#1ED59A3EBAAFB99B"><b>impl</b></a>(const std::vector&lt;sycl::device&gt; &amp; devices, bool enable_profiling)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename F&gt;</span><br><a href="#4154E2AFEAF72C7E"><b>submit_alloc</b></a>(F &amp;&amp; f) &rarr; async_event</li></ul></section><section><h2>Member Functions</h2><section><h3 id="FF4C9FD4B8BFF25A" data-function-name="get_device_queue"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#FF4C9FD4B8BFF25A">\xb6</a><code class="hdoc-function-code language-cpp">sycl::queue&amp; get_device_queue(<a href="/docs/api/records/7D949A34B7A05510/">device_id</a> did,\n                              size_t lane)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/backend/sycl_backend.cc#L131">src/backend/sycl_backend.cc:131</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/7D949A34B7A05510/">device_id</a><b> did</b></dt><dt class="is-family-code">size_t<b> lane</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="56310EE75130F848" data-function-name="get_host_queue"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#56310EE75130F848">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/62C07277EB594DA2/">thread_queue</a>&amp; get_host_queue(size_t lane)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/backend/sycl_backend.cc#L125">src/backend/sycl_backend.cc:125</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> lane</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="1ED59A3EBAAFB99B" data-function-name="impl"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1ED59A3EBAAFB99B">\xb6</a><code class="hdoc-function-code language-cpp">impl(const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;sycl::device&gt;&amp; devices,\n     bool enable_profiling)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/backend/sycl_backend.cc#L91">src/backend/sycl_backend.cc:91</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;sycl::device&gt;&amp;<b> devices</b></dt><dt class="is-family-code">bool<b> enable_profiling</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="4154E2AFEAF72C7E" data-function-name="submit_alloc"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4154E2AFEAF72C7E">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename F&gt;\n<a href="/docs/api/records/75C01CF859B866AB/">async_event</a> submit_alloc(F&amp;&amp; f)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/backend/sycl_backend.cc#L112">src/backend/sycl_backend.cc:112</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> F</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">F&amp;&amp;<b> f</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',r={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct sycl_backend::impl"},n=void 0,d={id:"api/records/BD608CD8E3195AFC",title:"struct sycl_backend::impl",description:"",source:"@site/celerity-runtime/docs/api/records/BD608CD8E3195AFC.mdx",sourceDirName:"api/records",slug:"/api/records/BD608CD8E3195AFC",permalink:"/docs/api/records/BD608CD8E3195AFC",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct sycl_backend::impl"},sidebar:"api"},l={},o=[];function p(e){const{Head:a}={...(0,t.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a,{children:[(0,s.jsx)("script",{src:"/js/highlight.min.js"}),(0,s.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,s.jsx)("div",{dangerouslySetInnerHTML:{__html:i}})]})}function m(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,a,c)=>{c.d(a,{R:()=>r,x:()=>n});var s=c(96540);const t={},i=s.createContext(t);function r(e){const a=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function n(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);