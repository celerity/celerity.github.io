"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[92761],{73628:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>n,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var c=s(74848),t=s(28453);const i='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li class="is-active"><a aria-current="page5C1F047BC2B808A9"><span>class local_accessor</span></a></li></ul></nav>\n<main><h1>class local_accessor</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">template &lt;typename DataT, int Dims = 1&gt;\nclass local_accessor { /* full declaration omitted */ };</code></pre><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L628">include/accessor.h:628</a></p></aside><section><h2>Template Parameters</h2><dl><dt class="is-family-code"><b> DataT</b></dt><dt class="is-family-code">int<b> Dims</b> = 1</dt></dl></section><section><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_sycl_acc" data-member-name="m_sycl_acc">  sycl_accessor <b>m_sycl_acc</b></dt><dt class="is-family-code hdoc-private" id="var_m_allocation_size" data-member-name="m_allocation_size">  range&lt;Dims&gt; <b>m_allocation_size</b></dt><dt class="is-family-code hdoc-private" id="var_sycl_dims" data-member-name="sycl_dims"> static  const int <b>sycl_dims</b> = std::max(1, Dims)</dt></dl></section><section><h2>Member Aliases</h2><ul><li class="is-family-code">using const_reference = const DataT&amp;;</li><li class="is-family-code">using reference = DataT&amp;;</li><li class="is-family-code">using size_type = size_t;</li><li class="is-family-code">using value_type = DataT;</li><li class="is-family-code hdoc-private">using sycl_accessor =\n    sycl::local_accessor&lt;DataT, sycl_dims&gt;;</li></ul></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#DCBFD69D068D861B"><b>byte_size</b></a>() const noexcept &rarr; size_type</li><li class="is-family-code"><a href="#64EF6B158A47E0F6"><b>empty</b></a>() const noexcept &rarr; bool</li><li class="is-family-code"><a href="#A424FBA9BD69236F"><b>get_pointer</b></a>() const noexcept &rarr; std::add_pointer_t&lt;value_type&gt;</li><li class="is-family-code"><a href="#661D3467CAE2EB86"><b>get_range</b></a>() const &rarr; range&lt;Dims&gt;</li><li class="is-family-code"><a href="#30D0EB984ACDFA92"><b>local_accessor</b></a>(const range&lt;Dims&gt; &amp; allocation_size, handler &amp; cgh)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, typename  = std::enable_if_t&lt;D == 0&gt;&gt;</span><br><a href="#9358F5AD97CF4313"><b>local_accessor</b></a>(handler &amp; cgh)</li><li class="is-family-code"><a href="#E0152E046CB18C4F"><b>local_accessor</b></a>(const local_accessor&lt;DataT, Dims&gt; &amp; other)</li><li class="is-family-code"><a href="#797CE9A102434A3B"><b>local_accessor</b></a>()</li><li class="is-family-code"><a href="#DB3F4C0B6A60F8E3"><b>max_size</b></a>() const noexcept &rarr; size_type</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#3A27D0FDBDAE75F2"><b>operator DataT &amp;</b></a>() const</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims&gt;</span><br><a href="#4E310600E4D0DBA1"><b>operator*</b></a>() const &rarr; std::enable_if_t&lt;D == 0, DataT &amp;&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims&gt;</span><br><a href="#B8F20416D93C3E95"><b>operator-&gt;</b></a>() const &rarr; std::enable_if_t&lt;D == 0, DataT *&gt;</li><li class="is-family-code"><a href="#EEB43029DB680462"><b>operator=</b></a>(local_accessor&lt;DataT, Dims&gt; &amp;&amp;) &rarr; local_accessor&lt;DataT, Dims&gt; &amp;</li><li class="is-family-code"><a href="#E70E0227539F6960"><b>operator=</b></a>(const local_accessor&lt;DataT, Dims&gt; &amp;) &rarr; local_accessor&lt;DataT, Dims&gt; &amp;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#30B9F0433436A6EF"><b>operator=</b></a>(const DataT &amp; other) const &rarr; const local_accessor&lt;DataT, Dims&gt; &amp;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#D71B5B33FCC1FAFB"><b>operator=</b></a>(DataT &amp;&amp; other) const &rarr; const local_accessor&lt;DataT, Dims&gt; &amp;</li><li class="is-family-code"><a href="#0CF197028A1403C1"><b>operator[]</b></a>(const id&lt;Dims&gt; &amp; index) const &rarr; DataT &amp;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;(D &gt; 0), int&gt;  = 0&gt;</span><br><a href="#0607E520B12D4A15"><b>operator[]</b></a>(size_t dim0) const &rarr; decltype(auto)</li><li class="is-family-code"><a href="#6A9954450EF5C51E"><b>size</b></a>() const noexcept &rarr; size_type</li><li class="is-family-code hdoc-private"><a href="#A47E71B335D775D1"><b>local_accessor</b></a>(const range&lt;Dims&gt; &amp; allocation_size) &rarr; explicit</li><li class="is-family-code hdoc-private"><a href="#B35E24D6D7363345"><b>sycl_allocation_size</b></a>() const &rarr; sycl::range&lt;sycl_dims&gt;</li></ul></section><section><h2>Member Functions</h2><section><h3 id="DCBFD69D068D861B" data-function-name="byte_size"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DCBFD69D068D861B">\xb6</a><code class="hdoc-function-code language-cpp">size_type byte_size() const noexcept</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L681">include/accessor.h:681</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="64EF6B158A47E0F6" data-function-name="empty"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#64EF6B158A47E0F6">\xb6</a><code class="hdoc-function-code language-cpp">bool empty() const noexcept</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L687">include/accessor.h:687</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="A424FBA9BD69236F" data-function-name="get_pointer"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A424FBA9BD69236F">\xb6</a><code class="hdoc-function-code language-cpp">std::add_pointer_t&lt;value_type&gt; get_pointer()\n    const noexcept</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L691">include/accessor.h:691</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="661D3467CAE2EB86" data-function-name="get_range"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#661D3467CAE2EB86">\xb6</a><code class="hdoc-function-code language-cpp">range&lt;Dims&gt; get_range() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L689">include/accessor.h:689</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="30D0EB984ACDFA92" data-function-name="local_accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#30D0EB984ACDFA92">\xb6</a><code class="hdoc-function-code language-cpp">local_accessor(const range&lt;Dims&gt;&amp; allocation_size,\n               <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L651">include/accessor.h:651</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> allocation_size</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="9358F5AD97CF4313" data-function-name="local_accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9358F5AD97CF4313">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          typename = std::enable_if_t&lt;D == 0&gt;&gt;\nlocal_accessor(<a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L648">include/accessor.h:648</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code"><b> </b> = std::enable_if_t&lt;D == 0&gt;</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="E0152E046CB18C4F" data-function-name="local_accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E0152E046CB18C4F">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>(\n    const local_accessor&lt;DataT, Dims&gt;&amp; other)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L653">include/accessor.h:653</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>&lt;DataT, Dims&gt;&amp;<b> other</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="797CE9A102434A3B" data-function-name="local_accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#797CE9A102434A3B">\xb6</a><code class="hdoc-function-code language-cpp">local_accessor()</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L645">include/accessor.h:645</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="DB3F4C0B6A60F8E3" data-function-name="max_size"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DB3F4C0B6A60F8E3">\xb6</a><code class="hdoc-function-code language-cpp">size_type max_size() const noexcept</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L685">include/accessor.h:685</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="3A27D0FDBDAE75F2" data-function-name="operator DataT &amp;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3A27D0FDBDAE75F2">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\noperator DataT&amp;() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L707">include/accessor.h:707</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="4E310600E4D0DBA1" data-function-name="operator*"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4E310600E4D0DBA1">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims&gt;\nstd::enable_if_t&lt;D == 0, DataT&amp;&gt; operator*() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L714">include/accessor.h:714</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B8F20416D93C3E95" data-function-name="operator-&gt;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B8F20416D93C3E95">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims&gt;\nstd::enable_if_t&lt;D == 0, DataT*&gt; operator-&gt;()\n    const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L719">include/accessor.h:719</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="EEB43029DB680462" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EEB43029DB680462">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>&lt;DataT, Dims&gt;&amp; operator=(\n    <a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>&lt;DataT, Dims&gt;&amp;&amp;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L665">include/accessor.h:665</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>&lt;DataT, Dims&gt;&amp;&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="E70E0227539F6960" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E70E0227539F6960">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>&lt;DataT, Dims&gt;&amp; operator=(\n    const <a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>&lt;DataT, Dims&gt;&amp;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L664">include/accessor.h:664</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>&lt;DataT, Dims&gt;&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="30B9F0433436A6EF" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#30B9F0433436A6EF">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\nconst <a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>&lt;DataT, Dims&gt;&amp; operator=(\n    const DataT&amp; other) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L670">include/accessor.h:670</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const DataT&amp;<b> other</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="D71B5B33FCC1FAFB" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D71B5B33FCC1FAFB">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\nconst <a href="/docs/api/records/5C1F047BC2B808A9/">local_accessor</a>&lt;DataT, Dims&gt;&amp; operator=(\n    DataT&amp;&amp; other) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L676">include/accessor.h:676</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">DataT&amp;&amp;<b> other</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="0CF197028A1403C1" data-function-name="operator[]"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0CF197028A1403C1">\xb6</a><code class="hdoc-function-code language-cpp">inline DataT&amp; operator[](\n    const id&lt;Dims&gt;&amp; index) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L693">include/accessor.h:693</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> index</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="0607E520B12D4A15" data-function-name="operator[]"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0607E520B12D4A15">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;(D &gt; 0), int&gt; = 0&gt;\ninline decltype(auto) operator[](\n    size_t dim0) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L702">include/accessor.h:702</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;(D &gt; 0), int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> dim0</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="6A9954450EF5C51E" data-function-name="size"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6A9954450EF5C51E">\xb6</a><code class="hdoc-function-code language-cpp">size_type size() const noexcept</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L683">include/accessor.h:683</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="A47E71B335D775D1" data-function-name="local_accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A47E71B335D775D1">\xb6</a><code class="hdoc-function-code language-cpp">explicit local_accessor(\n    const range&lt;Dims&gt;&amp; allocation_size)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L730">include/accessor.h:730</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> allocation_size</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B35E24D6D7363345" data-function-name="sycl_allocation_size"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B35E24D6D7363345">\xb6</a><code class="hdoc-function-code language-cpp">sycl::range&lt;sycl_dims&gt; sycl_allocation_size()\n    const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L727">include/accessor.h:727</a></p></aside></section><hr class="member-fun-separator"></hr></section></main>',l={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class local_accessor"},o=void 0,r={id:"api/records/5C1F047BC2B808A9",title:"class local_accessor",description:"",source:"@site/celerity-runtime/docs/api/records/5C1F047BC2B808A9.mdx",sourceDirName:"api/records",slug:"/api/records/5C1F047BC2B808A9",permalink:"/docs/api/records/5C1F047BC2B808A9",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class local_accessor"},sidebar:"api"},n={},d=[];function p(e){const{Head:a}={...(0,t.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(a,{children:[(0,c.jsx)("script",{src:"/js/highlight.min.js"}),(0,c.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,c.jsx)("div",{dangerouslySetInnerHTML:{__html:i}})]})}function m(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,c.jsx)(a,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>l,x:()=>o});var c=s(96540);const t={},i=c.createContext(t);function l(e){const a=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),c.createElement(i.Provider,{value:a},e.children)}}}]);