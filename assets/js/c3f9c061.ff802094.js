"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[19196],{52947:(e,a,c)=>{c.r(a),c.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var t=c(74848),s=c(28453);const i='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>struct sycl_backend_enumerator: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="pageB5CDDF6B612872F0"><span>struct sycl_backend_enumerator</span></a></li></ul></nav><main class="content"><h1>struct sycl_backend_enumerator</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct sycl_backend_enumerator { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>Enumerates the SYCL backends devices are compatible with and that Celerity has been compiled with. This type implements the (nameless) concept accepted by <code>pick_devices</code>.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/sycl_backend.h#L113">include/backend/sycl_backend.h:113</a></p><h2>Member Aliases</h2><ul><li class="is-family-code">using backend_type = sycl_backend_type;</li><li class="is-family-code">using device_type = sycl::device;</li></ul><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#2FDF4680ECCE5957"><b>available_backends</b></a>() const &rarr; std::vector&lt;backend_type&gt;</li><li class="is-family-code"><a href="#3BC6DF7E7049025B"><b>compatible_backends</b></a>(const sycl::device &amp; device) const &rarr; std::vector&lt;backend_type&gt;</li><li class="is-family-code"><a href="#B1D0EC1F74435574"><b>get_priority</b></a>(backend_type type) const &rarr; int</li><li class="is-family-code"><a href="#E09601FA2568EE12"><b>is_specialized</b></a>(backend_type type) const &rarr; bool</li></ul><h2>Member Functions</h2><h3 id="2FDF4680ECCE5957" data-function-name="available_backends"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2FDF4680ECCE5957">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;backend_type&gt; available_backends()\n    const</code></pre></h3><h4>Description</h4><p><p>Lists the backend types Celerity has been compiled with.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/sycl_backend.h#L121">include/backend/sycl_backend.h:121</a></p><hr class="member-fun-separator"></hr><h3 id="3BC6DF7E7049025B" data-function-name="compatible_backends"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3BC6DF7E7049025B">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;backend_type&gt; compatible_backends(\n    const sycl::device&amp; device) const</code></pre></h3><h4>Description</h4><p><p>Lists the backend types a device is compatible with, even if Celerity has not been compiled with that backend.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/sycl_backend.h#L118">include/backend/sycl_backend.h:118</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const sycl::device&amp;<b> device</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="B1D0EC1F74435574" data-function-name="get_priority"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B1D0EC1F74435574">\xb6</a><code class="hdoc-function-code language-cpp">int get_priority(<a href="/docs/api/enums/433361054E0BC8BC/">backend_type</a> type) const</code></pre></h3><h4>Description</h4><p><p>Returns a priority value for each backend type, where the highest-priority compatible backend type should offer the best performance.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/sycl_backend.h#L127">include/backend/sycl_backend.h:127</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/enums/433361054E0BC8BC/">backend_type</a><b> type</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="E09601FA2568EE12" data-function-name="is_specialized"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E09601FA2568EE12">\xb6</a><code class="hdoc-function-code language-cpp">bool is_specialized(<a href="/docs/api/enums/433361054E0BC8BC/">backend_type</a> type) const</code></pre></h3><h4>Description</h4><p><p>Queries whether a given backend type is specialized (for diagnostics only).</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/backend/sycl_backend.h#L124">include/backend/sycl_backend.h:124</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/enums/433361054E0BC8BC/">backend_type</a><b> type</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',n={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct sycl_backend_enumerator"},r=void 0,l={id:"api/records/B5CDDF6B612872F0",title:"struct sycl_backend_enumerator",description:"",source:"@site/celerity-runtime/docs/api/records/B5CDDF6B612872F0.mdx",sourceDirName:"api/records",slug:"/api/records/B5CDDF6B612872F0",permalink:"/docs/api/records/B5CDDF6B612872F0",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct sycl_backend_enumerator"},sidebar:"api"},o={},d=[];function p(e){const{Head:a}={...(0,s.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a,{children:[(0,t.jsx)("script",{src:"/js/highlight.min.js"}),(0,t.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,t.jsx)("div",{dangerouslySetInnerHTML:{__html:i}})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,a,c)=>{c.d(a,{R:()=>n,x:()=>r});var t=c(96540);const s={},i=t.createContext(s);function n(e){const a=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);