"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[56594],{81849:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>n,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var t=r(74848),c=r(28453);const i='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page4F6DF824034BDBFB"><span>class runtime</span></a></li></ul></nav>\n<main><h1>class runtime</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class runtime : private delegate, private delegate { /* full declaration omitted */ };</code></pre><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L22">include/runtime.h:22</a></p><p>Inherits from: <a href="/docs/api/records/E0703723ACB4E8C8/">instruction_graph_generator::delegate</a>, <a href="/docs/api/records/AFF9009734443E53/">executor::delegate</a></p><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_application_thread" data-member-name="m_application_thread">  std::thread::id <b>m_application_thread</b></dt><dt class="is-family-code hdoc-private" id="var_m_cfg" data-member-name="m_cfg">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;config&gt; <b>m_cfg</b></dt><dt class="is-family-code hdoc-private" id="var_m_num_nodes" data-member-name="m_num_nodes">  size_t <b>m_num_nodes</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_local_nid" data-member-name="m_local_nid">  <a href="/docs/api/records/DBE63D9D086598BC/">node_id</a> <b>m_local_nid</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_num_local_devices" data-member-name="m_num_local_devices">  size_t <b>m_num_local_devices</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_has_live_queue" data-member-name="m_has_live_queue">  bool <b>m_has_live_queue</b> = false</dt><dt class="is-family-code hdoc-private" id="var_m_live_buffers" data-member-name="m_live_buffers">  <a href="https://en.cppreference.com/w/cpp/container/unordered_set">std::unordered_set</a>&lt;buffer_id&gt; <b>m_live_buffers</b></dt><dt class="is-family-code hdoc-private" id="var_m_live_host_objects" data-member-name="m_live_host_objects">  <a href="https://en.cppreference.com/w/cpp/container/unordered_set">std::unordered_set</a>&lt;host_object_id&gt; <b>m_live_host_objects</b></dt><dt class="is-family-code hdoc-private" id="var_m_next_buffer_id" data-member-name="m_next_buffer_id">  <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> <b>m_next_buffer_id</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_next_user_allocation_id" data-member-name="m_next_user_allocation_id">  <a href="/docs/api/records/36072153F47DBF20/">raw_allocation_id</a> <b>m_next_user_allocation_id</b> = 1</dt><dt class="is-family-code hdoc-private" id="var_m_next_host_object_id" data-member-name="m_next_host_object_id">  <a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a> <b>m_next_host_object_id</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_next_reduction_id" data-member-name="m_next_reduction_id">  <a href="/docs/api/records/6DD6FF2C7DDED129/">reduction_id</a> <b>m_next_reduction_id</b> = no_reduction_id + 1</dt><dt class="is-family-code hdoc-private" id="var_m_schdlr" data-member-name="m_schdlr">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;scheduler&gt; <b>m_schdlr</b></dt><dt class="is-family-code hdoc-private" id="var_m_task_mngr" data-member-name="m_task_mngr">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;task_manager&gt; <b>m_task_mngr</b></dt><dt class="is-family-code hdoc-private" id="var_m_exec" data-member-name="m_exec">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;executor&gt; <b>m_exec</b></dt><dt class="is-family-code hdoc-private" id="var_m_latest_horizon_reached" data-member-name="m_latest_horizon_reached">  <a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;task_id&gt; <b>m_latest_horizon_reached</b></dt><dt class="is-family-code hdoc-private" id="var_m_task_recorder" data-member-name="m_task_recorder">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;detail::task_recorder&gt; <b>m_task_recorder</b></dt><dt class="is-family-code hdoc-private" id="var_m_command_recorder" data-member-name="m_command_recorder">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;detail::command_recorder&gt; <b>m_command_recorder</b></dt><dt class="is-family-code hdoc-private" id="var_m_instruction_recorder" data-member-name="m_instruction_recorder">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;detail::instruction_recorder&gt; <b>m_instruction_recorder</b></dt><dt class="is-family-code hdoc-private" id="var_s_mpi_initialized" data-member-name="s_mpi_initialized"> static  bool <b>s_mpi_initialized</b> = false</dt><dt class="is-family-code hdoc-private" id="var_s_mpi_finalized" data-member-name="s_mpi_finalized"> static  bool <b>s_mpi_finalized</b> = false</dt><dt class="is-family-code hdoc-private" id="var_s_instance" data-member-name="s_instance"> static  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;runtime&gt; <b>s_instance</b></dt><dt class="is-family-code hdoc-private" id="var_s_test_mode" data-member-name="s_test_mode"> static  bool <b>s_test_mode</b> = false</dt><dt class="is-family-code hdoc-private" id="var_s_test_active" data-member-name="s_test_active"> static  bool <b>s_test_active</b> = false</dt><dt class="is-family-code hdoc-private" id="var_s_test_runtime_was_instantiated" data-member-name="s_test_runtime_was_instantiated"> static  bool <b>s_test_runtime_was_instantiated</b> = false</dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#138097FB7B6E90E2"><b>create_buffer</b></a>(const range&lt;3&gt; &amp; range, size_t elem_size, size_t elem_align, allocation_id user_aid) &rarr; buffer_id</li><li class="is-family-code"><a href="#0E5AF0796C539DCC"><b>create_host_object</b></a>(std::unique_ptr&lt;host_object_instance&gt; instance) &rarr; host_object_id</li><li class="is-family-code"><a href="#5369DCCE4C3DA598"><b>create_queue</b></a>() &rarr; void</li><li class="is-family-code"><a href="#D733E8AFE7A14BC7"><b>create_reduction</b></a>(std::unique_ptr&lt;reducer&gt; reducer) &rarr; reduction_id</li><li class="is-family-code"><a href="#DA1EE00B5A6BACEF"><b>create_user_allocation</b></a>(void * ptr) &rarr; allocation_id</li><li class="is-family-code"><a href="#23AE00B17647A658"><b>destroy_buffer</b></a>(buffer_id bid) &rarr; void</li><li class="is-family-code"><a href="#32BCA3710862238D"><b>destroy_host_object</b></a>(host_object_id hoid) &rarr; void</li><li class="is-family-code"><a href="#F9BD246D715F4FFD"><b>destroy_queue</b></a>() &rarr; void</li><li class="is-family-code"><a href="#55D521FED18AD23D"><b>get_instance</b></a>() &rarr; static runtime &amp;</li><li class="is-family-code"><a href="#79F1C0FD735D2AD5"><b>get_task_manager</b></a>() const &rarr; task_manager &amp;</li><li class="is-family-code"><a href="#F7608AFE5E7E25F1"><b>has_instance</b></a>() &rarr; static bool</li><li class="is-family-code"><a href="#9A54C37EA7AAEB79"><b>init</b></a>(int * argc, char *** argv, const devices_or_selector &amp; user_devices_or_selector = celerity::detail::auto_select_devices{}) &rarr; static void</li><li class="is-family-code"><a href="#0BE8D6DADE95DEE8"><b>is_dry_run</b></a>() const &rarr; bool</li><li class="is-family-code"><a href="#37CAC8334A1FCE07"><b>operator=</b></a>(runtime &amp;&amp;) &rarr; runtime &amp;</li><li class="is-family-code"><a href="#04281343410F6297"><b>operator=</b></a>(const runtime &amp;) &rarr; runtime &amp;</li><li class="is-family-code"><a href="#778FCC605F18CAB4"><b>runtime</b></a>(runtime &amp;&amp;)</li><li class="is-family-code"><a href="#4D6B4C47C4A57698"><b>runtime</b></a>(const runtime &amp;)</li><li class="is-family-code"><a href="#177DF725ECD71793"><b>set_buffer_debug_name</b></a>(buffer_id bid, const std::string &amp; debug_name) &rarr; void</li><li class="is-family-code"><a href="#6A14BAFFC66E2904"><b>sync</b></a>(detail::epoch_action action) &rarr; task_id</li><li class="is-family-code"><a href="#D21632009E44D1B7"><b>test_case_enter</b></a>() &rarr; static void</li><li class="is-family-code"><a href="#3061367FF1FFE84E"><b>test_case_exit</b></a>() &rarr; static void</li><li class="is-family-code"><a href="#6354F353B5DA23F3"><b>test_mode_enter</b></a>() &rarr; static void</li><li class="is-family-code"><a href="#466959198E865657"><b>test_mode_exit</b></a>() &rarr; static void</li><li class="is-family-code"><a href="#0A211736956125DB"><b>test_require_mpi</b></a>() &rarr; static void</li><li class="is-family-code"><a href="#ED51C2FE5F9B68A1"><b>test_runtime_was_instantiated</b></a>() &rarr; static bool</li><li class="is-family-code"><a href="#8DD4695D0748C81F"><b>~runtime</b></a>()</li><li class="is-family-code hdoc-private"><a href="#A149F70A9F47E405"><b>destroy_instance_if_unreferenced</b></a>() &rarr; static void</li><li class="is-family-code hdoc-private"><a href="#F5DF811F314FEEC3"><b>epoch_reached</b></a>(task_id epoch_tid) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#ABF3B4664527231E"><b>flush</b></a>(std::vector&lt;const instruction *&gt; instructions, std::vector&lt;outbound_pilot&gt; pilot) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#C866D0A505AB581E"><b>horizon_reached</b></a>(task_id horizon_tid) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#D894D5A7692DA61D"><b>is_unreferenced</b></a>() const &rarr; bool</li><li class="is-family-code hdoc-private"><a href="#ED0A3F942AC4D969"><b>mpi_finalize_once</b></a>() &rarr; static void</li><li class="is-family-code hdoc-private"><a href="#73ADA795C74B962B"><b>mpi_initialize_once</b></a>(int * argc, char *** argv) &rarr; static void</li><li class="is-family-code hdoc-private"><a href="#2B4DD05D1486201A"><b>require_call_from_application_thread</b></a>() const &rarr; void</li><li class="is-family-code hdoc-private"><a href="#BAC782498EE708C1"><b>runtime</b></a>(int * argc, char *** argv, const devices_or_selector &amp; user_devices_or_selector)</li></ul><h2>Member Functions</h2><h3 id="138097FB7B6E90E2" data-function-name="create_buffer"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#138097FB7B6E90E2">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> create_buffer(const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; range,\n                        size_t elem_size,\n                        size_t elem_align,\n                        <a href="/docs/api/records/1824FC8BEBAA39C7/">allocation_id</a> user_aid)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L52">include/runtime.h:52</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> range</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt><dt class="is-family-code">size_t<b> elem_align</b></dt><dt class="is-family-code"><a href="/docs/api/records/1824FC8BEBAA39C7/">allocation_id</a><b> user_aid</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="0E5AF0796C539DCC" data-function-name="create_host_object"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0E5AF0796C539DCC">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a> create_host_object(\n    <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;host_object_instance&gt;\n        instance)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L58">include/runtime.h:58</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;host_object_instance&gt;<b> instance</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="5369DCCE4C3DA598" data-function-name="create_queue"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5369DCCE4C3DA598">\xb6</a><code class="hdoc-function-code language-cpp">void create_queue()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L46">include/runtime.h:46</a></p><hr class="member-fun-separator"></hr><h3 id="D733E8AFE7A14BC7" data-function-name="create_reduction"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D733E8AFE7A14BC7">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/6DD6FF2C7DDED129/">reduction_id</a> create_reduction(\n    <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;reducer&gt; reducer)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L62">include/runtime.h:62</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;reducer&gt;<b> reducer</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="DA1EE00B5A6BACEF" data-function-name="create_user_allocation"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DA1EE00B5A6BACEF">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/1824FC8BEBAA39C7/">allocation_id</a> create_user_allocation(void* ptr)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L50">include/runtime.h:50</a></p><h4>Parameters</h4><dl><dt class="is-family-code">void*<b> ptr</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="23AE00B17647A658" data-function-name="destroy_buffer"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#23AE00B17647A658">\xb6</a><code class="hdoc-function-code language-cpp">void destroy_buffer(<a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L56">include/runtime.h:56</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="32BCA3710862238D" data-function-name="destroy_host_object"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#32BCA3710862238D">\xb6</a><code class="hdoc-function-code language-cpp">void destroy_host_object(<a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a> hoid)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L60">include/runtime.h:60</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a><b> hoid</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="F9BD246D715F4FFD" data-function-name="destroy_queue"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F9BD246D715F4FFD">\xb6</a><code class="hdoc-function-code language-cpp">void destroy_queue()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L48">include/runtime.h:48</a></p><hr class="member-fun-separator"></hr><h3 id="55D521FED18AD23D" data-function-name="get_instance"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#55D521FED18AD23D">\xb6</a><code class="hdoc-function-code language-cpp">static <a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>&amp; get_instance()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L33">include/runtime.h:33</a></p><hr class="member-fun-separator"></hr><h3 id="79F1C0FD735D2AD5" data-function-name="get_task_manager"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#79F1C0FD735D2AD5">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/AF217E212CB99D08/">task_manager</a>&amp; get_task_manager() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L44">include/runtime.h:44</a></p><hr class="member-fun-separator"></hr><h3 id="F7608AFE5E7E25F1" data-function-name="has_instance"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F7608AFE5E7E25F1">\xb6</a><code class="hdoc-function-code language-cpp">static bool has_instance()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L31">include/runtime.h:31</a></p><hr class="member-fun-separator"></hr><h3 id="9A54C37EA7AAEB79" data-function-name="init"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9A54C37EA7AAEB79">\xb6</a><code class="hdoc-function-code language-cpp">static void init(\n    int* argc,\n    char*** argv,\n    const devices_or_selector&amp;\n        user_devices_or_selector = celerity::\n            detail::auto_select_devices{})</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L29">include/runtime.h:29</a></p><h4>Parameters</h4><dl><dt class="is-family-code">int*<b> argc</b></dt><dt class="is-family-code">char***<b> argv</b></dt><dt class="is-family-code">const devices_or_selector&amp;<b> user_devices_or_selector</b> = celerity::detail::auto_select_devices{}</dt></dl><hr class="member-fun-separator"></hr><h3 id="0BE8D6DADE95DEE8" data-function-name="is_dry_run"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0BE8D6DADE95DEE8">\xb6</a><code class="hdoc-function-code language-cpp">bool is_dry_run() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L64">include/runtime.h:64</a></p><hr class="member-fun-separator"></hr><h3 id="37CAC8334A1FCE07" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#37CAC8334A1FCE07">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>&amp; operator=(<a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L38">include/runtime.h:38</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="04281343410F6297" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#04281343410F6297">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>&amp; operator=(const <a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L37">include/runtime.h:37</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="778FCC605F18CAB4" data-function-name="runtime"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#778FCC605F18CAB4">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>(runtime&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L36">include/runtime.h:36</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="4D6B4C47C4A57698" data-function-name="runtime"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4D6B4C47C4A57698">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>(const runtime&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L35">include/runtime.h:35</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/4F6DF824034BDBFB/">runtime</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="177DF725ECD71793" data-function-name="set_buffer_debug_name"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#177DF725ECD71793">\xb6</a><code class="hdoc-function-code language-cpp">void set_buffer_debug_name(\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    const <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&amp; debug_name)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L54">include/runtime.h:54</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&amp;<b> debug_name</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="6A14BAFFC66E2904" data-function-name="sync"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6A14BAFFC66E2904">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/322167BB21F2212B/">task_id</a> sync(<a href="/docs/api/enums/689AE42F7297671D/">detail::epoch_action</a> action)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L42">include/runtime.h:42</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/enums/689AE42F7297671D/">detail::epoch_action</a><b> action</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="D21632009E44D1B7" data-function-name="test_case_enter"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D21632009E44D1B7">\xb6</a><code class="hdoc-function-code language-cpp">static void test_case_enter()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L155">include/runtime.h:155</a></p><hr class="member-fun-separator"></hr><h3 id="3061367FF1FFE84E" data-function-name="test_case_exit"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3061367FF1FFE84E">\xb6</a><code class="hdoc-function-code language-cpp">static void test_case_exit()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L167">include/runtime.h:167</a></p><hr class="member-fun-separator"></hr><h3 id="6354F353B5DA23F3" data-function-name="test_mode_enter"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6354F353B5DA23F3">\xb6</a><code class="hdoc-function-code language-cpp">static void test_mode_enter()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L137">include/runtime.h:137</a></p><hr class="member-fun-separator"></hr><h3 id="466959198E865657" data-function-name="test_mode_exit"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#466959198E865657">\xb6</a><code class="hdoc-function-code language-cpp">static void test_mode_exit()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L143">include/runtime.h:143</a></p><hr class="member-fun-separator"></hr><h3 id="0A211736956125DB" data-function-name="test_require_mpi"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0A211736956125DB">\xb6</a><code class="hdoc-function-code language-cpp">static void test_require_mpi()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L149">include/runtime.h:149</a></p><hr class="member-fun-separator"></hr><h3 id="ED51C2FE5F9B68A1" data-function-name="test_runtime_was_instantiated"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#ED51C2FE5F9B68A1">\xb6</a><code class="hdoc-function-code language-cpp">static bool test_runtime_was_instantiated()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L161">include/runtime.h:161</a></p><hr class="member-fun-separator"></hr><h3 id="8DD4695D0748C81F" data-function-name="~runtime"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8DD4695D0748C81F">\xb6</a><code class="hdoc-function-code language-cpp">~runtime()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L40">include/runtime.h:40</a></p><hr class="member-fun-separator"></hr><h3 id="A149F70A9F47E405" data-function-name="destroy_instance_if_unreferenced"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A149F70A9F47E405">\xb6</a><code class="hdoc-function-code language-cpp">static void destroy_instance_if_unreferenced()</code></pre></h3><h4>Description</h4><p><p>Destroys the runtime if it is no longer active and all buffers and host objects have been unregistered.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L127">include/runtime.h:127</a></p><hr class="member-fun-separator"></hr><h3 id="F5DF811F314FEEC3" data-function-name="epoch_reached"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F5DF811F314FEEC3">\xb6</a><code class="hdoc-function-code language-cpp">void epoch_reached(<a href="/docs/api/records/322167BB21F2212B/">task_id</a> epoch_tid)</code></pre></h3><h4>Description</h4><p><p>Called from the executor thread as soon as an epoch_instruction has finished executing.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L119">include/runtime.h:119</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/322167BB21F2212B/">task_id</a><b> epoch_tid</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="ABF3B4664527231E" data-function-name="flush"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#ABF3B4664527231E">\xb6</a><code class="hdoc-function-code language-cpp">void flush(\n    <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;const instruction*&gt; instructions,\n    <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;outbound_pilot&gt; pilot)</code></pre></h3><h4>Description</h4><p><p>Called whenever new instructions have been generated and inserted into the instruction graph, and / or new pilot messages have been generated that must be transmitted to peer nodes before they can accept data transmitted through <code>send_instruction</code>s originating from the local node. The vector of instructions is in topological order of dependencies, and so is the concatenation of all vectors that are passed through this function. Topological order here means that sequential execution in that order would fulfill all internal dependencies. The instruction graph generator guarantees that instruction pointers are stable and the pointed-to instructions are both immutable and safe to read from other threads. This is exposed as a single function on vectors to minimize lock contention in a threaded delegate implementations.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L115">include/runtime.h:115</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;const instruction*&gt;<b> instructions</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;outbound_pilot&gt;<b> pilot</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="C866D0A505AB581E" data-function-name="horizon_reached"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C866D0A505AB581E">\xb6</a><code class="hdoc-function-code language-cpp">void horizon_reached(<a href="/docs/api/records/322167BB21F2212B/">task_id</a> horizon_tid)</code></pre></h3><h4>Description</h4><p><p>Called from the executor thread as soon as a horizon_instruction has finished executing.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L118">include/runtime.h:118</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/322167BB21F2212B/">task_id</a><b> horizon_tid</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="D894D5A7692DA61D" data-function-name="is_unreferenced"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D894D5A7692DA61D">\xb6</a><code class="hdoc-function-code language-cpp">bool is_unreferenced() const</code></pre></h3><h4>Description</h4><p><p>True when no buffers, host objects or queues are live that keep the runtime alive.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L122">include/runtime.h:122</a></p><hr class="member-fun-separator"></hr><h3 id="ED0A3F942AC4D969" data-function-name="mpi_finalize_once"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#ED0A3F942AC4D969">\xb6</a><code class="hdoc-function-code language-cpp">static void mpi_finalize_once()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L71">include/runtime.h:71</a></p><hr class="member-fun-separator"></hr><h3 id="73ADA795C74B962B" data-function-name="mpi_initialize_once"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#73ADA795C74B962B">\xb6</a><code class="hdoc-function-code language-cpp">static void mpi_initialize_once(int* argc,\n                                char*** argv)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L70">include/runtime.h:70</a></p><h4>Parameters</h4><dl><dt class="is-family-code">int*<b> argc</b></dt><dt class="is-family-code">char***<b> argv</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="2B4DD05D1486201A" data-function-name="require_call_from_application_thread"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2B4DD05D1486201A">\xb6</a><code class="hdoc-function-code language-cpp">void require_call_from_application_thread() const</code></pre></h3><h4>Description</h4><p><p>Panic when not called from m_application_thread (see that variable for more info on the matter). Since there are thread-safe and non thread-safe member functions, we call this check at the beginning of all the non-safe ones.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L112">include/runtime.h:112</a></p><hr class="member-fun-separator"></hr><h3 id="BAC782498EE708C1" data-function-name="runtime"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BAC782498EE708C1">\xb6</a><code class="hdoc-function-code language-cpp">runtime(int* argc,\n        char*** argv,\n        const devices_or_selector&amp;\n            user_devices_or_selector)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L108">include/runtime.h:108</a></p><h4>Parameters</h4><dl><dt class="is-family-code">int*<b> argc</b></dt><dt class="is-family-code">char***<b> argv</b></dt><dt class="is-family-code">const devices_or_selector&amp;<b> user_devices_or_selector</b></dt></dl><hr class="member-fun-separator"></hr></main>',s={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class runtime"},o=void 0,d={id:"api/records/4F6DF824034BDBFB",title:"class runtime",description:"",source:"@site/celerity-runtime/docs/api/records/4F6DF824034BDBFB.mdx",sourceDirName:"api/records",slug:"/api/records/4F6DF824034BDBFB",permalink:"/docs/api/records/4F6DF824034BDBFB",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class runtime"},sidebar:"api"},n={},l=[];function m(e){const{Head:a}={...(0,c.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a,{children:[(0,t.jsx)("script",{src:"/js/highlight.min.js"}),(0,t.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,t.jsx)("div",{dangerouslySetInnerHTML:{__html:i}})]})}function h(e={}){const{wrapper:a}={...(0,c.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},28453:(e,a,r)=>{r.d(a,{R:()=>s,x:()=>o});var t=r(96540);const c={},i=t.createContext(c);function s(e){const a=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);