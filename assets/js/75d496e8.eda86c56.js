"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[87525],{58398:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>n});var t=r(74848),c=r(28453);const s='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>class closure_hydrator: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="pageFC9C16B586D9EE6F"><span>class closure_hydrator</span></a></li></ul></nav><main class="content"><h1>class closure_hydrator</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class closure_hydrator { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>The closure hydrator is used to inject information into objects (currently host/device and local accessors) that have been captured into a lambda closure. We abuse the copy constructor of the captured objects to modify them while the containing closure is being copied by the hydrate() function. Accessors request their corresponding information by means of per-closure unique &quot;hydration ids&quot; that are assigned upon accessor creation. The hydrator is implemented as a thread-local singleton that needs to be explicitly enabled per-thread. This is because kernel command function closures may be copied any number of times after having been passed to SYCL, which should not trigger the hydration mechanism.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L67">include/closure_hydrator.h:67</a></p><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_accessor_infos" data-member-name="m_accessor_infos">  <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;accessor_info&gt; <b>m_accessor_infos</b></dt><dt class="is-family-code hdoc-private" id="var_m_armed_for" data-member-name="m_armed_for">  <a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;target&gt; <b>m_armed_for</b> = std::nullopt</dt><dt class="is-family-code hdoc-private" id="var_m_is_hydrating" data-member-name="m_is_hydrating">  bool <b>m_is_hydrating</b> = false</dt><dt class="is-family-code hdoc-private" id="var_m_sycl_cgh" data-member-name="m_sycl_cgh">  sycl::handler* <b>m_sycl_cgh</b> = nullptr</dt><dt class="is-family-code hdoc-private" id="var_m_instance" data-member-name="m_instance"> static  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;closure_hydrator&gt; <b>m_instance</b></dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#B1D25CCABAFC968A"><b>arm</b></a>(target tgt, std::vector&lt;accessor_info&gt; accessor_infos) &rarr; void</li><li class="is-family-code"><a href="#DEEB427C9CCE61FE"><b>closure_hydrator</b></a>(closure_hydrator &amp;&amp;)</li><li class="is-family-code"><a href="#52E551812EC58F7D"><b>closure_hydrator</b></a>(const closure_hydrator &amp;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;target Tgt&gt;</span><br><a href="#970ED75774EDC3C7"><b>get_accessor_info</b></a>(hydration_id hid) &rarr; accessor_info</li><li class="is-family-code"><a href="#0DBE556A8AAD8D93"><b>get_instance</b></a>() &rarr; static closure_hydrator &amp;</li><li class="is-family-code"><a href="#935E2E1A310A37AB"><b>get_sycl_handler</b></a>() &rarr; sycl::handler &amp;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;target Tgt, typename Closure, std::enable_if_t&lt;Tgt == target::device, int&gt;  = 0&gt;</span><br><a href="#4249045CB00A7DBA"><b>hydrate</b></a>(sycl::handler &amp; cgh, const Closure &amp; closure) &rarr; [[nodiscard]] auto</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;target Tgt, typename Closure, std::enable_if_t&lt;Tgt == target::host_task, int&gt;  = 0&gt;</span><br><a href="#30F048EC7EFB9008"><b>hydrate</b></a>(const Closure &amp; closure) &rarr; [[nodiscard]] auto</li><li class="is-family-code"><a href="#1FC35F0D6AB023E3"><b>is_available</b></a>() &rarr; static bool</li><li class="is-family-code"><a href="#FA570700A4C619BD"><b>is_hydrating</b></a>() const &rarr; bool</li><li class="is-family-code"><a href="#AB9F235CBB71E073"><b>make_available</b></a>() &rarr; static void</li><li class="is-family-code"><a href="#58F6D2EF792DBF54"><b>operator=</b></a>(closure_hydrator &amp;&amp;) &rarr; closure_hydrator &amp;</li><li class="is-family-code"><a href="#D202FF9DF1611A1B"><b>operator=</b></a>(const closure_hydrator &amp;) &rarr; closure_hydrator &amp;</li><li class="is-family-code"><a href="#CD4D8F0D6198D950"><b>teardown</b></a>() &rarr; static void</li><li class="is-family-code"><a href="#2F56561A5231C0F3"><b>~closure_hydrator</b></a>()</li><li class="is-family-code hdoc-private"><a href="#956BCF912192B9BD"><b>closure_hydrator</b></a>()</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;typename Closure&gt;</span><br><a href="#54E4D2A70EBA2E89"><b>hydrate</b></a>(target tgt, sycl::handler * cgh, const Closure &amp; closure) &rarr; [[nodiscard]] auto</li></ul><h2>Member Functions</h2><h3 id="B1D25CCABAFC968A" data-function-name="arm"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B1D25CCABAFC968A">\xb6</a><code class="hdoc-function-code language-cpp">void arm(\n    <a href="/docs/api/enums/A570C39AEE51261C/">target</a> tgt,\n    <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;accessor_info&gt; accessor_infos)</code></pre></h3><h4>Description</h4><p><p>Puts the hydrator into the &quot;armed&quot; state, after which hydrate() can be called to hydrate kernel functions. accessor_infos must contain one entry for each hydration id that has been assigned to accessors in the closure that is to be hydrated, in matching order.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L105">include/closure_hydrator.h:105</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/enums/A570C39AEE51261C/">target</a><b> tgt</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;accessor_info&gt;<b> accessor_infos</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="DEEB427C9CCE61FE" data-function-name="closure_hydrator"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DEEB427C9CCE61FE">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>(closure_hydrator&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L80">include/closure_hydrator.h:80</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="52E551812EC58F7D" data-function-name="closure_hydrator"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#52E551812EC58F7D">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>(const closure_hydrator&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L79">include/closure_hydrator.h:79</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="970ED75774EDC3C7" data-function-name="get_accessor_info"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#970ED75774EDC3C7">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;target Tgt&gt;\n<a href="/docs/api/records/09B5B56F3D5471F6/">accessor_info</a> get_accessor_info(<a href="/docs/api/records/6F3FB2BA78185BC8/">hydration_id</a> hid)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L131">include/closure_hydrator.h:131</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">target<b> Tgt</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/6F3FB2BA78185BC8/">hydration_id</a><b> hid</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="0DBE556A8AAD8D93" data-function-name="get_instance"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0DBE556A8AAD8D93">\xb6</a><code class="hdoc-function-code language-cpp">static <a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>&amp; get_instance()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L94">include/closure_hydrator.h:94</a></p><hr class="member-fun-separator"></hr><h3 id="935E2E1A310A37AB" data-function-name="get_sycl_handler"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#935E2E1A310A37AB">\xb6</a><code class="hdoc-function-code language-cpp">sycl::handler&amp; get_sycl_handler()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L139">include/closure_hydrator.h:139</a></p><hr class="member-fun-separator"></hr><h3 id="4249045CB00A7DBA" data-function-name="hydrate"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4249045CB00A7DBA">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;target Tgt,\n          typename Closure,\n          std::enable_if_t&lt;Tgt == target::device,\n                           int&gt; = 0&gt;\n[[nodiscard]] auto hydrate(sycl::handler&amp; cgh,\n                           const Closure&amp; closure)</code></pre></h3><h4>Description</h4><p><p>Hydrates the provided closure by copying it in a context where calls to get_accessor_info and get_sycl_handler are allowed.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L116">include/closure_hydrator.h:116</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">target<b> Tgt</b></dt><dt class="is-family-code"><b> Closure</b></dt><dt class="is-family-code">std::enable_if_t&lt;Tgt == target::device, int&gt;<b> </b> = 0</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">sycl::handler&amp;<b> cgh</b></dt><dt class="is-family-code">const Closure&amp;<b> closure</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="30F048EC7EFB9008" data-function-name="hydrate"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#30F048EC7EFB9008">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;\n    target Tgt,\n    typename Closure,\n    std::enable_if_t&lt;Tgt == target::host_task,\n                     int&gt; = 0&gt;\n[[nodiscard]] auto hydrate(const Closure&amp; closure)</code></pre></h3><h4>Description</h4><p><p>Hydrates the provided closure by copying it in a context where calls to get_accessor_info are allowed.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L124">include/closure_hydrator.h:124</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">target<b> Tgt</b></dt><dt class="is-family-code"><b> Closure</b></dt><dt class="is-family-code">std::enable_if_t&lt;Tgt == target::host_task, int&gt;<b> </b> = 0</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const Closure&amp;<b> closure</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="1FC35F0D6AB023E3" data-function-name="is_available"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1FC35F0D6AB023E3">\xb6</a><code class="hdoc-function-code language-cpp">static bool is_available()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L90">include/closure_hydrator.h:90</a></p><hr class="member-fun-separator"></hr><h3 id="FA570700A4C619BD" data-function-name="is_hydrating"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#FA570700A4C619BD">\xb6</a><code class="hdoc-function-code language-cpp">bool is_hydrating() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L128">include/closure_hydrator.h:128</a></p><hr class="member-fun-separator"></hr><h3 id="AB9F235CBB71E073" data-function-name="make_available"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AB9F235CBB71E073">\xb6</a><code class="hdoc-function-code language-cpp">static void make_available()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L85">include/closure_hydrator.h:85</a></p><hr class="member-fun-separator"></hr><h3 id="58F6D2EF792DBF54" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#58F6D2EF792DBF54">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>&amp; operator=(<a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L82">include/closure_hydrator.h:82</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="D202FF9DF1611A1B" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D202FF9DF1611A1B">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>&amp; operator=(\n    const <a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L81">include/closure_hydrator.h:81</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/FC9C16B586D9EE6F/">closure_hydrator</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="CD4D8F0D6198D950" data-function-name="teardown"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CD4D8F0D6198D950">\xb6</a><code class="hdoc-function-code language-cpp">static void teardown()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L92">include/closure_hydrator.h:92</a></p><hr class="member-fun-separator"></hr><h3 id="2F56561A5231C0F3" data-function-name="~closure_hydrator"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2F56561A5231C0F3">\xb6</a><code class="hdoc-function-code language-cpp">~closure_hydrator()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L83">include/closure_hydrator.h:83</a></p><hr class="member-fun-separator"></hr><h3 id="956BCF912192B9BD" data-function-name="closure_hydrator"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#956BCF912192B9BD">\xb6</a><code class="hdoc-function-code language-cpp">closure_hydrator()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L151">include/closure_hydrator.h:151</a></p><hr class="member-fun-separator"></hr><h3 id="54E4D2A70EBA2E89" data-function-name="hydrate"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#54E4D2A70EBA2E89">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Closure&gt;\n[[nodiscard]] auto hydrate(<a href="/docs/api/enums/A570C39AEE51261C/">target</a> tgt,\n                           sycl::handler* cgh,\n                           const Closure&amp; closure)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/closure_hydrator.h#L154">include/closure_hydrator.h:154</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Closure</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/enums/A570C39AEE51261C/">target</a><b> tgt</b></dt><dt class="is-family-code">sycl::handler*<b> cgh</b></dt><dt class="is-family-code">const Closure&amp;<b> closure</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',o={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class closure_hydrator"},l=void 0,i={id:"api/records/FC9C16B586D9EE6F",title:"class closure_hydrator",description:"",source:"@site/celerity-runtime/docs/api/records/FC9C16B586D9EE6F.mdx",sourceDirName:"api/records",slug:"/api/records/FC9C16B586D9EE6F",permalink:"/docs/api/records/FC9C16B586D9EE6F",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class closure_hydrator"},sidebar:"api"},d={},n=[];function h(e){const{Head:a}={...(0,c.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a,{children:[(0,t.jsx)("script",{src:"/js/highlight.min.js"}),(0,t.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,t.jsx)("div",{dangerouslySetInnerHTML:{__html:s}})]})}function p(e={}){const{wrapper:a}={...(0,c.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,a,r)=>{r.d(a,{R:()=>o,x:()=>l});var t=r(96540);const c={},s=t.createContext(c);function o(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);