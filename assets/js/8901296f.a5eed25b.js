"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[14328],{46741:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>n});var s=t(74848),c=t(28453);const o='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li class="is-active"><a aria-current="pageE167BDE6E4F795E6"><span>class accessor&lt;DataT, Dims, Mode, celerity::target::device&gt;</span></a></li></ul></nav>\n<main><h1>class accessor&lt;DataT, Dims, Mode, celerity::target::device&gt;</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">template &lt;typename DataT, int Dims, access_mode Mode&gt;\nclass accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; { /* full declaration omitted */ };</code></pre><section><h2>Description</h2><p><p>Celerity wrapper around SYCL accessors.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L94">include/accessor.h:94</a></p></aside><section><h2>Template Parameters</h2><dl><dt class="is-family-code"><b> DataT</b></dt><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code">access_mode<b> Mode</b></dt></dl></section><section><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_device_ptr" data-member-name="m_device_ptr">  DataT* <b>m_device_ptr</b> = nullptr</dt><dt class="is-family-code hdoc-private" id="var_m_allocation_offset" data-member-name="m_allocation_offset">  id&lt;Dims&gt; <b>m_allocation_offset</b></dt><dt class="is-family-code hdoc-private" id="var_m_allocation_range" data-member-name="m_allocation_range">  range&lt;Dims&gt; <b>m_allocation_range</b> = detail::zeros</dt><dt class="is-family-code hdoc-private" id="var_m_oob_indices" data-member-name="m_oob_indices">  <a href="/docs/api/records/4AD9AE1951EF94FE/">detail::oob_bounding_box</a>* <b>m_oob_indices</b> = nullptr</dt><dt class="is-family-code hdoc-private" id="var_m_accessed_buffer_subrange" data-member-name="m_accessed_buffer_subrange">  subrange&lt;Dims&gt; <b>m_accessed_buffer_subrange</b> = {}</dt><dt class="is-family-code hdoc-private" id="var_m_oob_fallback_value" data-member-name="m_oob_fallback_value">  DataT <b>m_oob_fallback_value</b> = type-parameter-0-0{}</dt></dl></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#0E37A136148E4C00"><b>accessor</b></a>(accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; &amp;&amp;) noexcept</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagMode, access_mode TagModeNoInit&gt;</span><br><a href="#B96ADDC9E6FE78AE"><b>accessor</b></a>(const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;TagMode, TagModeNoInit, target::device&gt;, const property_list &amp;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagMode&gt;</span><br><a href="#14EA8CF28D859EDA"><b>accessor</b></a>(const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;TagMode, Mode, target::device&gt;, const property::no_init &amp;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagModeNoInit&gt;</span><br><a href="#3C99D0B9E352707F"><b>accessor</b></a>(const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;Mode, TagModeNoInit, target::device&gt;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor&gt;</span><br><a href="#736813592866E8A4"><b>accessor</b></a>(const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode TagMode, access_mode TagModeNoInit, int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#670210BBBE26374E"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, detail::access_tag&lt;TagMode, TagModeNoInit, target::device&gt; tag, const property_list &amp; prop_list)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode TagMode, int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#EBCC6C610897FA77"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, detail::access_tag&lt;TagMode, Mode, target::device&gt; tag, const property::no_init &amp; no_init)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode TagModeNoInit, int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#60B215EDB008B46E"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, detail::access_tag&lt;Mode, TagModeNoInit, target::device&gt; tag)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#C2A2586D98F92F5C"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagMode&gt;</span><br><a href="#0BF828A4C4E97F6B"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;TagMode, Mode, target::device&gt;, const property::no_init &amp;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor&gt;</span><br><a href="#02566BE2EABF1D59"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn)</li><li class="is-family-code"><a href="#D613A855C06B7DA0"><b>accessor</b></a>(const accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; &amp; other)</li><li class="is-family-code"><a href="#91C8D4BD707E3A43"><b>accessor</b></a>() noexcept</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagModeNoInit&gt;</span><br><a href="#90518A7663C81898"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;Mode, TagModeNoInit, target::device&gt;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode, std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_producer(M), int&gt;  = 0&gt;</span><br><a href="#DB6548978D534F4E"><b>operator DataT &amp;</b></a>() const</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode, std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_pure_consumer(M), int&gt;  = 0&gt;</span><br><a href="#EB8CE41BC05302D5"><b>operator const DataT &amp;</b></a>() const</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#8C3F0944A0B2B060"><b>operator*</b></a>() const &rarr; std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_pure_consumer(M), const DataT &amp;&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#CD54892E9C0B75D3"><b>operator*</b></a>() const &rarr; std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_producer(M), DataT &amp;&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#B160B94DD7ECB84F"><b>operator-&gt;</b></a>() const &rarr; std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_pure_consumer(M), const DataT *&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#AC4B457F8A194250"><b>operator-&gt;</b></a>() const &rarr; std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_producer(M), DataT *&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#9A12BE2CDCC794E0"><b>operator=</b></a>(const DataT &amp; other) const &rarr; const accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; &amp;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#36643D060E899F11"><b>operator=</b></a>(DataT &amp;&amp; other) const &rarr; const accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; &amp;</li><li class="is-family-code"><a href="#CC49E37AE18F9E9A"><b>operator=</b></a>(accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; &amp;&amp;) noexcept &rarr; accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; &amp;</li><li class="is-family-code"><a href="#5F2BBA8D94EA7E03"><b>operator=</b></a>(const accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; &amp; other) &rarr; accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; &amp;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#DAA464DCD68DE87F"><b>operator[]</b></a>(const id&lt;Dims&gt; &amp; index) const &rarr; std::conditional_t&lt;detail::access::mode_traits::is_producer(M), DataT &amp;, const DataT &amp;&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;(D &gt; 0), int&gt;  = 0&gt;</span><br><a href="#4DD961E42FBC8FA9"><b>operator[]</b></a>(size_t index) const &rarr; decltype(auto)</li><li class="is-family-code hdoc-private"><a href="#C2B3F482FAFA62A0"><b>accessor</b></a>(DataT * ptr, const id&lt;Dims&gt; &amp; allocation_offset, const range&lt;Dims&gt; &amp; allocation_range)</li><li class="is-family-code hdoc-private"><a href="#6F160867427194A2"><b>accessor</b></a>(detail::hydration_id hid, const id&lt;Dims&gt; &amp; allocation_offset, const range&lt;Dims&gt; &amp; allocation_range)</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;typename Functor&gt;</span><br><a href="#CBA63060822BC17C"><b>accessor</b></a>(ctor_internal_tag, const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn)</li><li class="is-family-code hdoc-private"><a href="#B68BD3B768994687"><b>copy_and_hydrate</b></a>(const accessor&lt;DataT, Dims, Mode, celerity::target::device&gt; &amp; other) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#EC0FD33E6C215FAE"><b>get_linear_offset</b></a>(const id&lt;Dims&gt; &amp; index) const &rarr; size_t</li></ul></section><section><h2>Member Functions</h2><section><h3 id="0E37A136148E4C00" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0E37A136148E4C00">\xb6</a><code class="hdoc-function-code language-cpp">accessor(\n    accessor&lt;DataT,\n             Dims,\n             Mode,\n             celerity::target::device&gt;&amp;&amp;) noexcept</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L154">include/accessor.h:154</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">accessor&lt;DataT,\n         Dims,\n         Mode,\n         celerity::target::device&gt;&amp;&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B96ADDC9E6FE78AE" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B96ADDC9E6FE78AE">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor,\n          access_mode TagMode,\n          access_mode TagModeNoInit&gt;\naccessor(const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;TagMode,\n                            TagModeNoInit,\n                            target::device&gt;,\n         const property_list&amp;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L146">include/accessor.h:146</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagMode</b></dt><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::access_tag&lt;TagMode,\n                   TagModeNoInit,\n                   target::device&gt;<b> </b></dt><dt class="is-family-code">const property_list&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="14EA8CF28D859EDA" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#14EA8CF28D859EDA">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor, access_mode TagMode&gt;\naccessor(const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;TagMode,\n                            Mode,\n                            target::device&gt;,\n         const property::no_init&amp;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L141">include/accessor.h:141</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagMode</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::access_tag&lt;TagMode, Mode, target::device&gt;<b> </b></dt><dt class="is-family-code">const property::no_init&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="3C99D0B9E352707F" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3C99D0B9E352707F">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor,\n          access_mode TagModeNoInit&gt;\naccessor(const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;Mode,\n                            TagModeNoInit,\n                            target::device&gt;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L136">include/accessor.h:136</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::access_tag&lt;Mode,\n                   TagModeNoInit,\n                   target::device&gt;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="736813592866E8A4" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#736813592866E8A4">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor&gt;\naccessor(const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L132">include/accessor.h:132</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="670210BBBE26374E" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#670210BBBE26374E">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode TagMode,\n          access_mode TagModeNoInit,\n          int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         detail::access_tag&lt;TagMode,\n                            TagModeNoInit,\n                            target::device&gt; tag,\n         const property_list&amp; prop_list)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L128">include/accessor.h:128</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> TagMode</b></dt><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">detail::access_tag&lt;TagMode,\n                   TagModeNoInit,\n                   target::device&gt;<b> tag</b></dt><dt class="is-family-code">const property_list&amp;<b> prop_list</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="EBCC6C610897FA77" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EBCC6C610897FA77">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode TagMode,\n          int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         detail::access_tag&lt;TagMode,\n                            Mode,\n                            target::device&gt; tag,\n         const property::no_init&amp; no_init)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L124">include/accessor.h:124</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> TagMode</b></dt><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">detail::access_tag&lt;TagMode, Mode, target::device&gt;<b> tag</b></dt><dt class="is-family-code">const property::no_init&amp;<b> no_init</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="60B215EDB008B46E" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#60B215EDB008B46E">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode TagModeNoInit,\n          int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         detail::access_tag&lt;Mode,\n                            TagModeNoInit,\n                            target::device&gt; tag)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L120">include/accessor.h:120</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">detail::access_tag&lt;Mode,\n                   TagModeNoInit,\n                   target::device&gt;<b> tag</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="C2A2586D98F92F5C" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C2A2586D98F92F5C">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff, <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L117">include/accessor.h:117</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="0BF828A4C4E97F6B" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0BF828A4C4E97F6B">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor, access_mode TagMode&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;TagMode,\n                            Mode,\n                            target::device&gt;,\n         const property::no_init&amp;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L112">include/accessor.h:112</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagMode</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::access_tag&lt;TagMode, Mode, target::device&gt;<b> </b></dt><dt class="is-family-code">const property::no_init&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="02566BE2EABF1D59" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#02566BE2EABF1D59">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L105">include/accessor.h:105</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="D613A855C06B7DA0" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D613A855C06B7DA0">\xb6</a><code class="hdoc-function-code language-cpp">accessor(const accessor&lt;DataT,\n                        Dims,\n                        Mode,\n                        celerity::target::device&gt;&amp;\n             other)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L158">include/accessor.h:158</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::device&gt;&amp;<b> other</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="91C8D4BD707E3A43" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#91C8D4BD707E3A43">\xb6</a><code class="hdoc-function-code language-cpp">accessor() noexcept</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L102">include/accessor.h:102</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="90518A7663C81898" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#90518A7663C81898">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor,\n          access_mode TagModeNoInit&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;Mode,\n                            TagModeNoInit,\n                            target::device&gt;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L108">include/accessor.h:108</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::access_tag&lt;Mode,\n                   TagModeNoInit,\n                   target::device&gt;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="DB6548978D534F4E" data-function-name="operator DataT &amp;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DB6548978D534F4E">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;\n    access_mode M = Mode,\n    std::enable_if_t&lt;\n        Dims == 0 &amp;&amp; detail::access::mode_traits::\n                         is_producer(M),\n        int&gt; = 0&gt;\ninline operator DataT&amp;() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L210">include/accessor.h:210</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt><dt class="is-family-code">std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_producer(M), int&gt;<b> </b> = 0</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="EB8CE41BC05302D5" data-function-name="operator const DataT &amp;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EB8CE41BC05302D5">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;\n    access_mode M = Mode,\n    std::enable_if_t&lt;\n        Dims == 0 &amp;&amp; detail::access::mode_traits::\n                         is_pure_consumer(M),\n        int&gt; = 0&gt;\ninline operator const DataT&amp;() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L215">include/accessor.h:215</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt><dt class="is-family-code">std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_pure_consumer(M), int&gt;<b> </b> = 0</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="8C3F0944A0B2B060" data-function-name="operator*"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8C3F0944A0B2B060">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    Dims == 0 &amp;&amp; detail::access::mode_traits::\n                     is_pure_consumer(M),\n    const DataT&amp;&gt;\noperator*() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L227">include/accessor.h:227</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CD54892E9C0B75D3" data-function-name="operator*"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CD54892E9C0B75D3">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    Dims == 0 &amp;&amp;\n        detail::access::mode_traits::is_producer(\n            M),\n    DataT&amp;&gt;\noperator*() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L222">include/accessor.h:222</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B160B94DD7ECB84F" data-function-name="operator-&gt;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B160B94DD7ECB84F">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    Dims == 0 &amp;&amp; detail::access::mode_traits::\n                     is_pure_consumer(M),\n    const DataT*&gt;\noperator-&gt;() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L237">include/accessor.h:237</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="AC4B457F8A194250" data-function-name="operator-&gt;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AC4B457F8A194250">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    Dims == 0 &amp;&amp;\n        detail::access::mode_traits::is_producer(\n            M),\n    DataT*&gt;\noperator-&gt;() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L232">include/accessor.h:232</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="9A12BE2CDCC794E0" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9A12BE2CDCC794E0">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\nconst accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::device&gt;&amp;\noperator=(const DataT&amp; other) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L172">include/accessor.h:172</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const DataT&amp;<b> other</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="36643D060E899F11" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#36643D060E899F11">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\nconst accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::device&gt;&amp;\noperator=(DataT&amp;&amp; other) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L178">include/accessor.h:178</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">DataT&amp;&amp;<b> other</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CC49E37AE18F9E9A" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CC49E37AE18F9E9A">\xb6</a><code class="hdoc-function-code language-cpp">accessor&lt;DataT,\n         Dims,\n         Mode,\n         celerity::target::device&gt;&amp;\noperator=(\n    accessor&lt;DataT,\n             Dims,\n             Mode,\n             celerity::target::device&gt;&amp;&amp;) noexcept</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L155">include/accessor.h:155</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">accessor&lt;DataT,\n         Dims,\n         Mode,\n         celerity::target::device&gt;&amp;&amp;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="5F2BBA8D94EA7E03" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5F2BBA8D94EA7E03">\xb6</a><code class="hdoc-function-code language-cpp">accessor&lt;DataT,\n         Dims,\n         Mode,\n         celerity::target::device&gt;&amp;\noperator=(\n    const accessor&lt;DataT,\n                   Dims,\n                   Mode,\n                   celerity::target::device&gt;&amp;\n        other)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L160">include/accessor.h:160</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::device&gt;&amp;<b> other</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="DAA464DCD68DE87F" data-function-name="operator[]"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DAA464DCD68DE87F">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::conditional_t&lt;\n    detail::access::mode_traits::is_producer(M),\n    DataT&amp;,\n    const DataT&amp;&gt;\noperator[](const id&lt;Dims&gt;&amp; index) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L184">include/accessor.h:184</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> index</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="4DD961E42FBC8FA9" data-function-name="operator[]"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4DD961E42FBC8FA9">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;(D &gt; 0), int&gt; = 0&gt;\ninline decltype(auto) operator[](\n    size_t index) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L205">include/accessor.h:205</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;(D &gt; 0), int&gt;<b> </b> = 0</dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> index</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="C2B3F482FAFA62A0" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C2B3F482FAFA62A0">\xb6</a><code class="hdoc-function-code language-cpp">accessor(DataT* ptr,\n         const id&lt;Dims&gt;&amp; allocation_offset,\n         const range&lt;Dims&gt;&amp; allocation_range)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L266">include/accessor.h:266</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">DataT*<b> ptr</b></dt><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> allocation_offset</b></dt><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> allocation_range</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="6F160867427194A2" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6F160867427194A2">\xb6</a><code class="hdoc-function-code language-cpp">accessor(<a href="/docs/api/records/6F3FB2BA78185BC8/">detail::hydration_id</a> hid,\n         const id&lt;Dims&gt;&amp; allocation_offset,\n         const range&lt;Dims&gt;&amp; allocation_range)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L278">include/accessor.h:278</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/6F3FB2BA78185BC8/">detail::hydration_id</a><b> hid</b></dt><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> allocation_offset</b></dt><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> allocation_range</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CBA63060822BC17C" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CBA63060822BC17C">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor&gt;\naccessor(<a href="/docs/api/records/A3BA5BF08E9843C3/">ctor_internal_tag</a>,\n         const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L259">include/accessor.h:259</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/A3BA5BF08E9843C3/">ctor_internal_tag</a><b> </b></dt><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B68BD3B768994687" data-function-name="copy_and_hydrate"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B68BD3B768994687">\xb6</a><code class="hdoc-function-code language-cpp">void copy_and_hydrate(\n    const accessor&lt;DataT,\n                   Dims,\n                   Mode,\n                   celerity::target::device&gt;&amp;\n        other)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L281">include/accessor.h:281</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::device&gt;&amp;<b> other</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="EC0FD33E6C215FAE" data-function-name="get_linear_offset"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EC0FD33E6C215FAE">\xb6</a><code class="hdoc-function-code language-cpp">size_t get_linear_offset(\n    const id&lt;Dims&gt;&amp; index) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L310">include/accessor.h:310</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> index</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',i={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class accessor<DataT, Dims, Mode, celerity::target::device>"},r=void 0,d={id:"api/records/E167BDE6E4F795E6",title:"class accessor<DataT, Dims, Mode, celerity::target::device>",description:"",source:"@site/celerity-runtime/docs/api/records/E167BDE6E4F795E6.mdx",sourceDirName:"api/records",slug:"/api/records/E167BDE6E4F795E6",permalink:"/docs/api/records/E167BDE6E4F795E6",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class accessor<DataT, Dims, Mode, celerity::target::device>"},sidebar:"api"},l={},n=[];function m(e){const{Head:a}={...(0,c.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a,{children:[(0,s.jsx)("script",{src:"/js/highlight.min.js"}),(0,s.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,s.jsx)("div",{dangerouslySetInnerHTML:{__html:o}})]})}function p(e={}){const{wrapper:a}={...(0,c.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>i,x:()=>r});var s=t(96540);const c={},o=s.createContext(c);function i(e){const a=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),s.createElement(o.Provider,{value:a},e.children)}}}]);