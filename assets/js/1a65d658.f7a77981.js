"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[75563],{56706:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var a=t(74848),c=t(28453);const r='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page83AC312EEF2F55CF"><span>function combine_command_graphs</span></a></li></ul></nav>\n<main><h3 id="83AC312EEF2F55CF" data-function-name="combine_command_graphs"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#83AC312EEF2F55CF">\xb6</a><code class="hdoc-function-code language-cpp">[[nodiscard]] <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a> combine_command_graphs(\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;<a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&gt;&amp; graphs,\n    const std::string&amp; title = &quot;Command Graph&quot;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/print_graph.h#L12">include/print_graph.h:12</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;std::string&gt;&amp;<b> graphs</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&amp;<b> title</b> = &quot;Command Graph&quot;</dt></dl><hr class="member-fun-separator"></hr></main>',s={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function combine_command_graphs"},i=void 0,o={id:"api/functions/celerity_detail-combine_command_graphs",title:"function combine_command_graphs",description:"",source:"@site/celerity-runtime/docs/api/functions/celerity_detail-combine_command_graphs.mdx",sourceDirName:"api/functions",slug:"/api/functions/celerity_detail-combine_command_graphs",permalink:"/docs/api/functions/celerity_detail-combine_command_graphs",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function combine_command_graphs"},sidebar:"api"},p={},d=[];function l(e){const{Head:n}={...(0,c.R)(),...e.components};return n||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n,{children:[(0,a.jsx)("script",{src:"/js/highlight.min.js"}),(0,a.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:r}})]})}function m(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(96540);const c={},r=a.createContext(c);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);