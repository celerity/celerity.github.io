"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[97882],{86142:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>o});var a=n(74848),i=n(28453);const s='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li><a href="/docs/api/namespaces/#A16ACF3ACAFB4303"><span>namespace utils</span></a></li><li class="is-active"><a aria-current="page2C757E6098B9E537"><span>function replace_all</span></a></li></ul></nav>\n<main><h3 id="2C757E6098B9E537" data-function-name="replace_all"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2C757E6098B9E537">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a> replace_all(\n    const <a href="https://en.cppreference.com/w/cpp/string/basic_string_view">std::string_view</a>&amp; input,\n    const <a href="https://en.cppreference.com/w/cpp/string/basic_string_view">std::string_view</a>&amp; pattern,\n    const <a href="https://en.cppreference.com/w/cpp/string/basic_string_view">std::string_view</a>&amp; replacement)</code></pre></h3><h4>Description</h4><p><p>Replaces all occurrences of <code>pattern</code> in <code>in</code> with <code>with</code>. If <code>pattern</code> is empty, returns the input string unchanged.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/utils.h#L202">include/utils.h:202</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/string/basic_string_view">std::string_view</a>&amp;<b> input</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/string/basic_string_view">std::string_view</a>&amp;<b> pattern</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/string/basic_string_view">std::string_view</a>&amp;<b> replacement</b></dt></dl><hr class="member-fun-separator"></hr></main>',c={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function replace_all"},r=void 0,l={id:"api/functions/celerity_detail_utils-replace_all",title:"function replace_all",description:"",source:"@site/celerity-runtime/docs/api/functions/celerity_detail_utils-replace_all.mdx",sourceDirName:"api/functions",slug:"/api/functions/celerity_detail_utils-replace_all",permalink:"/docs/api/functions/celerity_detail_utils-replace_all",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function replace_all"},sidebar:"api"},p={},o=[];function d(e){const{Head:t}={...(0,i.R)(),...e.components};return t||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t,{children:[(0,a.jsx)("script",{src:"/js/highlight.min.js"}),(0,a.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:s}})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var a=n(96540);const i={},s=a.createContext(i);function c(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);