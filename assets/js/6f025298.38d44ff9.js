"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53031],{38514:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});var a=t(74848),s=t(28453);const r='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>class instruction: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page406117B5A814B8B4"><span>class instruction</span></a></li></ul></nav><main class="content"><h1>class instruction</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class instruction : public acceptor { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>A node in the <code>instruction_graph</code>. This is not implemented as an <code>intrusive_graph</code> but references its predecessors by id to avoid thread-safety and lifetime issues.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L24">include/instruction_graph.h:24</a></p><p>Inherits from: acceptor</p><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_id" data-member-name="m_id">  <a href="/docs/api/records/A10FDF2DB5485BE8/">instruction_id</a> <b>m_id</b></dt><dt class="is-family-code hdoc-private" id="var_m_priority" data-member-name="m_priority">  int <b>m_priority</b></dt><dt class="is-family-code hdoc-private" id="var_m_dependencies" data-member-name="m_dependencies">  edge_set <b>m_dependencies</b></dt></dl><h2>Member Aliases</h2><ul><li class="is-family-code">using edge_set =\n    gch::small_vector&lt;instruction_id&gt;;</li></ul><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#608E73980DAFE9F6"><b>add_dependency</b></a>(instruction_id iid) &rarr; void</li><li class="is-family-code"><a href="#4F07A9462919AA43"><b>get_dependencies</b></a>() const &rarr; const edge_set &amp;</li><li class="is-family-code"><a href="#A1CA7AE59771F553"><b>get_id</b></a>() const &rarr; instruction_id</li><li class="is-family-code"><a href="#56207D15F0E4B727"><b>get_priority</b></a>() const &rarr; int</li><li class="is-family-code"><a href="#7CE7B31ABC64C528"><b>instruction</b></a>(instruction_id iid, int priority) &rarr; explicit</li></ul><h2>Member Functions</h2><h3 id="608E73980DAFE9F6" data-function-name="add_dependency"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#608E73980DAFE9F6">\xb6</a><code class="hdoc-function-code language-cpp">void add_dependency(<a href="/docs/api/records/A10FDF2DB5485BE8/">instruction_id</a> iid)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L42">include/instruction_graph.h:42</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/A10FDF2DB5485BE8/">instruction_id</a><b> iid</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="4F07A9462919AA43" data-function-name="get_dependencies"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4F07A9462919AA43">\xb6</a><code class="hdoc-function-code language-cpp">const edge_set&amp; get_dependencies() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L40">include/instruction_graph.h:40</a></p><hr class="member-fun-separator"></hr><h3 id="A1CA7AE59771F553" data-function-name="get_id"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A1CA7AE59771F553">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/A10FDF2DB5485BE8/">instruction_id</a> get_id() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L37">include/instruction_graph.h:37</a></p><hr class="member-fun-separator"></hr><h3 id="56207D15F0E4B727" data-function-name="get_priority"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#56207D15F0E4B727">\xb6</a><code class="hdoc-function-code language-cpp">int get_priority() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L38">include/instruction_graph.h:38</a></p><hr class="member-fun-separator"></hr><h3 id="7CE7B31ABC64C528" data-function-name="instruction"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7CE7B31ABC64C528">\xb6</a><code class="hdoc-function-code language-cpp">explicit instruction(<a href="/docs/api/records/A10FDF2DB5485BE8/">instruction_id</a> iid,\n                     int priority)</code></pre></h3><h4>Description</h4><p><p>If there are multiple instructions eligible for execution, the runtime should chose the one with the highest <code>priority</code> first. This provides a low-level scheduling heuristic to reduce the impact of submission latency and improve concurrency.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L35">include/instruction_graph.h:35</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/A10FDF2DB5485BE8/">instruction_id</a><b> iid</b></dt><dt class="is-family-code">int<b> priority</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',c={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class instruction"},n=void 0,o={id:"api/records/406117B5A814B8B4",title:"class instruction",description:"",source:"@site/celerity-runtime/docs/api/records/406117B5A814B8B4.mdx",sourceDirName:"api/records",slug:"/api/records/406117B5A814B8B4",permalink:"/docs/api/records/406117B5A814B8B4",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class instruction"},sidebar:"api"},l={},d=[];function p(e){const{Head:i}={...(0,s.R)(),...e.components};return i||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(i,{children:[(0,a.jsx)("script",{src:"/js/highlight.min.js"}),(0,a.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:r}})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>c,x:()=>n});var a=t(96540);const s={},r=a.createContext(s);function c(e){const i=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function n(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(r.Provider,{value:i},e.children)}}}]);