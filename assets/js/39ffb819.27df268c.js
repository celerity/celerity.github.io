"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[57679],{15537:(e,a,c)=>{c.r(a),c.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>n,toc:()=>l});var r=c(74848),i=c(28453);const s='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li><a href="/docs/api/namespaces/#04B6F7A15A2A2D0A"><span>namespace mpi_detail</span></a></li><li class="is-active"><a aria-current="page8AA8A12658145792"><span>class mpi_event</span></a></li></ul></nav>\n<main><h1>class mpi_event</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class mpi_event : public async_event_impl { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>async_event wrapper around an MPI_Request.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/mpi_communicator.cc#L13">src/mpi_communicator.cc:13</a></p><p>Inherits from: <a href="/docs/api/records/073311E635D32F96/">async_event_impl</a></p><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_req" data-member-name="m_req">  MPI_Request <b>m_req</b></dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#746FDF69482B4BF2"><b>is_complete</b></a>() &rarr; bool</li><li class="is-family-code"><a href="#59EB3540DA8B2CB2"><b>mpi_event</b></a>(MPI_Request req) &rarr; explicit</li><li class="is-family-code"><a href="#B6C66ECE0E268D7F"><b>mpi_event</b></a>(const mpi_event &amp;)</li><li class="is-family-code"><a href="#C717E4F96EF82430"><b>mpi_event</b></a>(mpi_event &amp;&amp;)</li><li class="is-family-code"><a href="#DD6D4A14AFE99F0E"><b>operator=</b></a>(const mpi_event &amp;) &rarr; mpi_event &amp;</li><li class="is-family-code"><a href="#432FEA53D35A27D5"><b>operator=</b></a>(mpi_event &amp;&amp;) &rarr; mpi_event &amp;</li><li class="is-family-code"><a href="#4231B6C3EBA25202"><b>~mpi_event</b></a>()</li></ul><p>Inherited from <a href="/docs/api/records/073311E635D32F96/">async_event_impl</a>:</p><ul><li class="is-family-code"><a href="/docs/api/records/073311E635D32F96/#586AC2FBEF390DDA">public <b>get_native_execution_time</b></a></li><li class="is-family-code"><a href="/docs/api/records/073311E635D32F96/#BBCC63BE793ABAF2">public <b>get_result</b></a></li><li class="is-family-code"><a href="/docs/api/records/073311E635D32F96/#C0338F7BBBCA1682">public <b>is_complete</b></a></li><li class="is-family-code"><a href="/docs/api/records/073311E635D32F96/#956FA9230ED98EAA">public <b>operator=</b></a></li><li class="is-family-code"><a href="/docs/api/records/073311E635D32F96/#0094266AA4523532">public <b>operator=</b></a></li></ul><h2>Member Functions</h2><h3 id="746FDF69482B4BF2" data-function-name="is_complete"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#746FDF69482B4BF2">\xb6</a><code class="hdoc-function-code language-cpp">bool is_complete()</code></pre></h3><h4>Description</h4><p><p>If this function returns true once, the implementation must guarantee that it will always do so in the future. The event is expected to be cheap to poll repeatedly, and the operation must proceed in the background even while not being polled.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/mpi_communicator.cc#L28">src/mpi_communicator.cc:28</a></p><hr class="member-fun-separator"></hr><h3 id="59EB3540DA8B2CB2" data-function-name="mpi_event"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#59EB3540DA8B2CB2">\xb6</a><code class="hdoc-function-code language-cpp">explicit mpi_event(MPI_Request req)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/mpi_communicator.cc#L15">src/mpi_communicator.cc:15</a></p><h4>Parameters</h4><dl><dt class="is-family-code">MPI_Request<b> req</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="B6C66ECE0E268D7F" data-function-name="mpi_event"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B6C66ECE0E268D7F">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>(const mpi_event&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/mpi_communicator.cc#L17">src/mpi_communicator.cc:17</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="C717E4F96EF82430" data-function-name="mpi_event"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C717E4F96EF82430">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>(mpi_event&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/mpi_communicator.cc#L18">src/mpi_communicator.cc:18</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="DD6D4A14AFE99F0E" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DD6D4A14AFE99F0E">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>&amp; operator=(const <a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/mpi_communicator.cc#L19">src/mpi_communicator.cc:19</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="432FEA53D35A27D5" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#432FEA53D35A27D5">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>&amp; operator=(<a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/mpi_communicator.cc#L20">src/mpi_communicator.cc:20</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/8AA8A12658145792/">mpi_event</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="4231B6C3EBA25202" data-function-name="~mpi_event"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4231B6C3EBA25202">\xb6</a><code class="hdoc-function-code language-cpp">~mpi_event()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/mpi_communicator.cc#L22">src/mpi_communicator.cc:22</a></p><hr class="member-fun-separator"></hr></main>',t={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class mpi_event"},o=void 0,n={id:"api/records/8AA8A12658145792",title:"class mpi_event",description:"",source:"@site/celerity-runtime/docs/api/records/8AA8A12658145792.mdx",sourceDirName:"api/records",slug:"/api/records/8AA8A12658145792",permalink:"/docs/api/records/8AA8A12658145792",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class mpi_event"},sidebar:"api"},p={},l=[];function m(e){const{Head:a}={...(0,i.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a,{children:[(0,r.jsx)("script",{src:"/js/highlight.min.js"}),(0,r.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,r.jsx)("div",{dangerouslySetInnerHTML:{__html:s}})]})}function d(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},28453:(e,a,c)=>{c.d(a,{R:()=>t,x:()=>o});var r=c(96540);const i={},s=r.createContext(i);function t(e){const a=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(s.Provider,{value:a},e.children)}}}]);