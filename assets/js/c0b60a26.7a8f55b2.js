"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[99207],{4111:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=i(74848),s=i(28453);const n='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page8F96988164AB067F"><span>class instruction_graph</span></a></li></ul></nav>\n<main><h1>class instruction_graph</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class instruction_graph { /* full declaration omitted */ };</code></pre><section><h2>Description</h2><p><p>The instruction graph (IDAG) provides a static, parallel schedule of operations executed on a single Celerity node. It manages allocation and transfer operations between host- and all device memories installed in the node and issues kernel launches, inter-node data transfers and reductions. Unlike the higher-level task and command graphs which track data dependencies in terms of buffers, it operates on the lower level of allocations, which (among other uses) can back sub-regions of the (virtual) global buffer. The <code>instruction_graph</code> struct keeps ownership of all instructions that have not yet been pruned by epoch or horizon application.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L436">include/instruction_graph.h:436</a></p></aside><section><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_epochs" data-member-name="m_epochs">  <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;instruction_epoch&gt; <b>m_epochs</b></dt></dl></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#9A54E4E8F69ED3CB"><b>begin_epoch</b></a>(task_id tid) &rarr; void</li><li class="is-family-code"><a href="#C183459E478CE04E"><b>get_live_instruction_count</b></a>() const &rarr; size_t</li><li class="is-family-code"><a href="#8F9CF01BC3B1DD48"><b>prune_before_epoch</b></a>(task_id tid) &rarr; void</li><li class="is-family-code"><a href="#790A672F01FB27CD"><b>push_instruction</b></a>(std::unique_ptr&lt;instruction&gt; instr) &rarr; void</li></ul></section><section><h2>Member Functions</h2><section><h3 id="9A54E4E8F69ED3CB" data-function-name="begin_epoch"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9A54E4E8F69ED3CB">\xb6</a><code class="hdoc-function-code language-cpp">void begin_epoch(<a href="/docs/api/records/322167BB21F2212B/">task_id</a> tid)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L439">include/instruction_graph.h:439</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/322167BB21F2212B/">task_id</a><b> tid</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="C183459E478CE04E" data-function-name="get_live_instruction_count"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C183459E478CE04E">\xb6</a><code class="hdoc-function-code language-cpp">size_t get_live_instruction_count() const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L461">include/instruction_graph.h:461</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="8F9CF01BC3B1DD48" data-function-name="prune_before_epoch"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8F9CF01BC3B1DD48">\xb6</a><code class="hdoc-function-code language-cpp">void prune_before_epoch(<a href="/docs/api/records/322167BB21F2212B/">task_id</a> tid)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L453">include/instruction_graph.h:453</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/322167BB21F2212B/">task_id</a><b> tid</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="790A672F01FB27CD" data-function-name="push_instruction"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#790A672F01FB27CD">\xb6</a><code class="hdoc-function-code language-cpp">void push_instruction(\n    <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;instruction&gt; instr)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L445">include/instruction_graph.h:445</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;instruction&gt;<b> instr</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',r={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class instruction_graph"},c=void 0,o={id:"api/records/8F96988164AB067F",title:"class instruction_graph",description:"",source:"@site/celerity-runtime/docs/api/records/8F96988164AB067F.mdx",sourceDirName:"api/records",slug:"/api/records/8F96988164AB067F",permalink:"/docs/api/records/8F96988164AB067F",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class instruction_graph"},sidebar:"api"},l={},d=[];function p(e){const{Head:t}={...(0,s.R)(),...e.components};return t||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t,{children:[(0,a.jsx)("script",{src:"/js/highlight.min.js"}),(0,a.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:n}})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var a=i(96540);const s={},n=a.createContext(s);function r(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);