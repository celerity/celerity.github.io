"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[57044],{62763:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=a(74848),n=a(28453);const r='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li><a href="/docs/api/namespaces/#F04B845B7443865D"><span>namespace instruction_graph_generator_detail</span></a></li><li class="is-active"><a aria-current="page2EF10FE8201C8692"><span>struct localized_chunk</span></a></li></ul></nav>\n<main><h1>struct localized_chunk</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct localized_chunk { /* full declaration omitted */ };</code></pre><section><h2>Description</h2><p><p>A chunk of a task\'s execution space that will be assigned to a device (or the host) and thus knows which memory its instructions will operate on.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L502">src/instruction_graph_generator.cc:502</a></p></aside><section><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_memory_id" data-member-name="memory_id">  <a href="/docs/api/records/1AFCD7D3D6F8EF79/">detail::memory_id</a> <b>memory_id</b> = host_memory_id</dt><dt class="is-family-code" id="var_device_id" data-member-name="device_id">  <a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;detail::device_id&gt; <b>device_id</b></dt><dt class="is-family-code" id="var_execution_range" data-member-name="execution_range">  <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt; <b>execution_range</b></dt></dl></section><section></section></main>',s={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct localized_chunk"},c=void 0,o={id:"api/records/2EF10FE8201C8692",title:"struct localized_chunk",description:"",source:"@site/celerity-runtime/docs/api/records/2EF10FE8201C8692.mdx",sourceDirName:"api/records",slug:"/api/records/2EF10FE8201C8692",permalink:"/docs/api/records/2EF10FE8201C8692",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct localized_chunk"},sidebar:"api"},d={},l=[];function p(e){const{Head:t}={...(0,n.R)(),...e.components};return t||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t,{children:[(0,i.jsx)("script",{src:"/js/highlight.min.js"}),(0,i.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,i.jsx)("div",{dangerouslySetInnerHTML:{__html:r}})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>c});var i=a(96540);const n={},r=i.createContext(n);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);