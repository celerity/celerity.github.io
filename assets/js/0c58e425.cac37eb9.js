"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[43523],{20915:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var r=s(74848),t=s(28453);const c='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li class="is-active"><a aria-current="pageF64EF4DD57D1CC57"><span>struct subrange</span></a></li></ul></nav>\n<main><h1>struct subrange</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">template &lt;int Dims = 1&gt;\nstruct subrange { /* full declaration omitted */ };</code></pre><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/ranges.h#L489">include/ranges.h:489</a></p><h2>Template Parameters</h2><dl><dt class="is-family-code">int<b> Dims</b> = 1</dt></dl><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_offset" data-member-name="offset">  id&lt;Dims&gt; <b>offset</b></dt><dt class="is-family-code" id="var_range" data-member-name="range">  celerity::range&lt;Dims&gt; <b>range</b> = detail::zeros</dt><dt class="is-family-code" id="var_dimensions" data-member-name="dimensions"> static  const int <b>dimensions</b> = Dims</dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#C3A1A45E617375C2"><b>subrange</b></a>()</li><li class="is-family-code"><a href="#E485C9FD28E37B2B"><b>subrange</b></a>(const id&lt;Dims&gt; &amp; offset, const celerity::range&lt;Dims&gt; &amp; range) &rarr; constexpr</li><li class="is-family-code"><a href="#1A1B8EBA1BF26065"><b>subrange</b></a>(const chunk&lt;Dims&gt; &amp; other) &rarr; constexpr</li></ul><h2>Friend Function Overview</h2><ul><li class="is-family-code"><a href="#3FFD79E009949B3F"><b>operator!=</b></a>(const subrange&lt;Dims&gt; &amp; lhs, const subrange&lt;Dims&gt; &amp; rhs) &rarr; friend bool</li><li class="is-family-code"><a href="#9BCE91AA5B147AB9"><b>operator==</b></a>(const subrange&lt;Dims&gt; &amp; lhs, const subrange&lt;Dims&gt; &amp; rhs) &rarr; friend bool</li></ul><h2>Member Functions</h2><h3 id="C3A1A45E617375C2" data-function-name="subrange"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C3A1A45E617375C2">\xb6</a><code class="hdoc-function-code language-cpp">subrange()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/ranges.h#L495">include/ranges.h:495</a></p><hr class="member-fun-separator"></hr><h3 id="E485C9FD28E37B2B" data-function-name="subrange"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E485C9FD28E37B2B">\xb6</a><code class="hdoc-function-code language-cpp">constexpr subrange(\n    const id&lt;Dims&gt;&amp; offset,\n    const celerity::range&lt;Dims&gt;&amp; range)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/ranges.h#L496">include/ranges.h:496</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> offset</b></dt><dt class="is-family-code">const celerity::range&lt;Dims&gt;&amp;<b> range</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="1A1B8EBA1BF26065" data-function-name="subrange"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1A1B8EBA1BF26065">\xb6</a><code class="hdoc-function-code language-cpp">constexpr subrange(const chunk&lt;Dims&gt;&amp; other)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/ranges.h#L497">include/ranges.h:497</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const chunk&lt;Dims&gt;&amp;<b> other</b></dt></dl><hr class="member-fun-separator"></hr><h2>Friend Functions</h2><h3 id="3FFD79E009949B3F" data-function-name="operator!="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3FFD79E009949B3F">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator!=(const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;Dims&gt;&amp; lhs,\n                       const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;Dims&gt;&amp; rhs)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/ranges.h#L500">include/ranges.h:500</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;Dims&gt;&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;Dims&gt;&amp;<b> rhs</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="9BCE91AA5B147AB9" data-function-name="operator=="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9BCE91AA5B147AB9">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator==(const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;Dims&gt;&amp; lhs,\n                       const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;Dims&gt;&amp; rhs)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/ranges.h#L499">include/ranges.h:499</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;Dims&gt;&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;Dims&gt;&amp;<b> rhs</b></dt></dl><hr class="member-fun-separator"></hr></main>',n={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct subrange"},i=void 0,o={id:"api/records/F64EF4DD57D1CC57",title:"struct subrange",description:"",source:"@site/celerity-runtime/docs/api/records/F64EF4DD57D1CC57.mdx",sourceDirName:"api/records",slug:"/api/records/F64EF4DD57D1CC57",permalink:"/docs/api/records/F64EF4DD57D1CC57",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct subrange"},sidebar:"api"},l={},d=[];function m(e){const{Head:a}={...(0,t.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a,{children:[(0,r.jsx)("script",{src:"/js/highlight.min.js"}),(0,r.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,r.jsx)("div",{dangerouslySetInnerHTML:{__html:c}})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>n,x:()=>i});var r=s(96540);const t={},c=r.createContext(t);function n(e){const a=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),r.createElement(c.Provider,{value:a},e.children)}}}]);