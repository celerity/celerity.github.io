"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[90120],{99510:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=t(74848),c=t(28453);const s='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page75C01CF859B866AB"><span>class async_event</span></a></li></ul></nav>\n<main><h1>class async_event</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class async_event { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>Type-erased event signalling completion of events at the executor layer. These may wrap SYCL events, asynchronous MPI requests, or similar.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/async_event.h#L47">include/async_event.h:47</a></p><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_impl" data-member-name="m_impl">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;async_event_impl&gt; <b>m_impl</b></dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#60BCC87BF1103E51"><b>async_event</b></a>()</li><li class="is-family-code"><a href="#EA1004A655871773"><b>async_event</b></a>(std::unique_ptr&lt;async_event_impl&gt; impl) noexcept</li><li class="is-family-code"><a href="#8F3E9F5F73118C7F"><b>get_native_execution_time</b></a>() const &rarr; std::optional&lt;std::chrono::nanoseconds&gt;</li><li class="is-family-code"><a href="#9F1EC7E45B24F6E1"><b>get_result</b></a>() const &rarr; void *</li><li class="is-family-code"><a href="#EC8650C9721E74C2"><b>is_complete</b></a>() const &rarr; bool</li></ul><h2>Member Functions</h2><h3 id="60BCC87BF1103E51" data-function-name="async_event"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#60BCC87BF1103E51">\xb6</a><code class="hdoc-function-code language-cpp">async_event()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/async_event.h#L49">include/async_event.h:49</a></p><hr class="member-fun-separator"></hr><h3 id="EA1004A655871773" data-function-name="async_event"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EA1004A655871773">\xb6</a><code class="hdoc-function-code language-cpp">async_event(<a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;async_event_impl&gt;\n                impl) noexcept</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/async_event.h#L50">include/async_event.h:50</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;async_event_impl&gt;<b> impl</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="8F3E9F5F73118C7F" data-function-name="get_native_execution_time"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8F3E9F5F73118C7F">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/utility/optional">std::optional</a>&lt;std::chrono::nanoseconds&gt;\nget_native_execution_time() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/async_event.h#L63">include/async_event.h:63</a></p><hr class="member-fun-separator"></hr><h3 id="9F1EC7E45B24F6E1" data-function-name="get_result"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9F1EC7E45B24F6E1">\xb6</a><code class="hdoc-function-code language-cpp">void* get_result() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/async_event.h#L58">include/async_event.h:58</a></p><hr class="member-fun-separator"></hr><h3 id="EC8650C9721E74C2" data-function-name="is_complete"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EC8650C9721E74C2">\xb6</a><code class="hdoc-function-code language-cpp">bool is_complete() const</code></pre></h3><h4>Description</h4><p><p>Polls the underlying event operation to check if it has completed. This function is cheap to call repeatedly.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/async_event.h#L53">include/async_event.h:53</a></p><hr class="member-fun-separator"></hr></main>',r={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class async_event"},i=void 0,l={id:"api/records/75C01CF859B866AB",title:"class async_event",description:"",source:"@site/celerity-runtime/docs/api/records/75C01CF859B866AB.mdx",sourceDirName:"api/records",slug:"/api/records/75C01CF859B866AB",permalink:"/docs/api/records/75C01CF859B866AB",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class async_event"},sidebar:"api"},o={},p=[];function d(e){const{Head:a}={...(0,c.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a,{children:[(0,n.jsx)("script",{src:"/js/highlight.min.js"}),(0,n.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,n.jsx)("div",{dangerouslySetInnerHTML:{__html:s}})]})}function h(e={}){const{wrapper:a}={...(0,c.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>r,x:()=>i});var n=t(96540);const c={},s=n.createContext(c);function r(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);