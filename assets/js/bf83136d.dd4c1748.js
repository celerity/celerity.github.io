"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[90870],{85621:(e,a,c)=>{c.r(a),c.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>l});var r=c(74848),t=c(28453);const o='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li><a href="/docs/api/namespaces/#F04B845B7443865D"><span>namespace instruction_graph_generator_detail</span></a></li><li class="is-active"><a aria-current="pageD322CA6FEA1DEBDC"><span>class generator_impl</span></a></li></ul></nav>\n<main><h1>class generator_impl</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class generator_impl { /* full declaration omitted */ };</code></pre><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L531">src/instruction_graph_generator.cc:531</a></p></aside><section><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_idag" data-member-name="m_idag">  <a href="/docs/api/records/8F96988164AB067F/">instruction_graph</a>* <b>m_idag</b></dt><dt class="is-family-code hdoc-private" id="var_m_tm" data-member-name="m_tm">  const <a href="/docs/api/records/AF217E212CB99D08/">task_manager</a>* <b>m_tm</b></dt><dt class="is-family-code hdoc-private" id="var_m_num_nodes" data-member-name="m_num_nodes">  size_t <b>m_num_nodes</b></dt><dt class="is-family-code hdoc-private" id="var_m_local_nid" data-member-name="m_local_nid">  <a href="/docs/api/records/DBE63D9D086598BC/">node_id</a> <b>m_local_nid</b></dt><dt class="is-family-code hdoc-private" id="var_m_system" data-member-name="m_system">  <a href="/docs/api/records/8B87A955194B6925/">system_info</a> <b>m_system</b></dt><dt class="is-family-code hdoc-private" id="var_m_delegate" data-member-name="m_delegate">  <a href="/docs/api/records/E0703723ACB4E8C8/">instruction_graph_generator::delegate</a>* <b>m_delegate</b></dt><dt class="is-family-code hdoc-private" id="var_m_recorder" data-member-name="m_recorder">  <a href="/docs/api/records/E8FA12264299E0BA/">instruction_recorder</a>* <b>m_recorder</b></dt><dt class="is-family-code hdoc-private" id="var_m_policy" data-member-name="m_policy">  <a href="/docs/api/records/2CF0540537D19097/">instruction_graph_generator::policy_set</a> <b>m_policy</b></dt><dt class="is-family-code hdoc-private" id="var_m_next_instruction_id" data-member-name="m_next_instruction_id">  <a href="/docs/api/records/A10FDF2DB5485BE8/">instruction_id</a> <b>m_next_instruction_id</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_next_message_id" data-member-name="m_next_message_id">  <a href="/docs/api/records/9CC04BC93AB17E32/">message_id</a> <b>m_next_message_id</b> = 0</dt><dt class="is-family-code hdoc-private" id="var_m_last_horizon" data-member-name="m_last_horizon">  <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* <b>m_last_horizon</b> = nullptr</dt><dt class="is-family-code hdoc-private" id="var_m_last_epoch" data-member-name="m_last_epoch">  <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* <b>m_last_epoch</b> = nullptr</dt><dt class="is-family-code hdoc-private" id="var_m_execution_front" data-member-name="m_execution_front">  <a href="https://en.cppreference.com/w/cpp/container/unordered_set">std::unordered_set</a>&lt;instruction_id&gt; <b>m_execution_front</b></dt><dd>The set of all instructions that are not yet depended upon by other instructions. These are collected by collapse_execution_front_to() as part of horizon / epoch generation.</dd><dt class="is-family-code hdoc-private" id="var_m_memories" data-member-name="m_memories">  <a href="/docs/api/records/7F709CB15C3D9013/">dense_map</a>&lt;memory_id, memory_state&gt; <b>m_memories</b></dt><dt class="is-family-code hdoc-private" id="var_m_buffers" data-member-name="m_buffers">  <a href="https://en.cppreference.com/w/cpp/container/unordered_map">std::unordered_map</a>&lt;buffer_id, buffer_state&gt; <b>m_buffers</b></dt><dt class="is-family-code hdoc-private" id="var_m_host_objects" data-member-name="m_host_objects">  <a href="https://en.cppreference.com/w/cpp/container/unordered_map">std::unordered_map</a>&lt;host_object_id,\n                   host_object_state&gt; <b>m_host_objects</b></dt><dt class="is-family-code hdoc-private" id="var_m_collective_groups" data-member-name="m_collective_groups">  <a href="https://en.cppreference.com/w/cpp/container/unordered_map">std::unordered_map</a>&lt;collective_group_id,\n                   collective_group_state&gt; <b>m_collective_groups</b></dt><dt class="is-family-code hdoc-private" id="var_m_unreferenced_user_allocations" data-member-name="m_unreferenced_user_allocations">  <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;allocation_id&gt; <b>m_unreferenced_user_allocations</b></dt><dd>The instruction executor maintains a mapping of allocation_id -&gt; USM pointer. For IDAG-managed memory, these entries are deleted after executing a `free_instruction`, but since user allocations are not deallocated by us, we notify the executor on each horizon or epoch via the `instruction_garbage` struct about entries that will no longer be used and can therefore be collected. We include user allocations for buffer fences immediately after emitting the fence, and buffer host-initialization user allocations after the buffer has been destroyed.</dd><dt class="is-family-code hdoc-private" id="var_scalar_reduction_box" data-member-name="scalar_reduction_box"> static  const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt; <b>scalar_reduction_box</b> = {zeros, ones}</dt></dl></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#D0B7B25BEA94FACD"><b>compile</b></a>(const abstract_command &amp; cmd) &rarr; void</li><li class="is-family-code"><a href="#0E0CD165E7A78184"><b>generator_impl</b></a>(const task_manager &amp; tm, size_t num_nodes, node_id local_nid, const system_info &amp; system, instruction_graph &amp; idag, instruction_graph_generator::delegate * dlg, instruction_recorder * recorder, const instruction_graph_generator::policy_set &amp; policy)</li><li class="is-family-code"><a href="#EFBC09DED395E27C"><b>notify_buffer_created</b></a>(buffer_id bid, const range&lt;3&gt; &amp; range, size_t elem_size, size_t elem_align, allocation_id user_aid = null_allocation_id) &rarr; void</li><li class="is-family-code"><a href="#1B589DE0DA3F4BEB"><b>notify_buffer_debug_name_changed</b></a>(buffer_id bid, const std::string &amp; name) &rarr; void</li><li class="is-family-code"><a href="#CC5CB00541070BEB"><b>notify_buffer_destroyed</b></a>(buffer_id bid) &rarr; void</li><li class="is-family-code"><a href="#A664DE103D797985"><b>notify_host_object_created</b></a>(host_object_id hoid, bool owns_instance) &rarr; void</li><li class="is-family-code"><a href="#97BB61EF5EC91D88"><b>notify_host_object_destroyed</b></a>(host_object_id hoid) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#B1BAC4706445FF3B"><b>add_dependencies_on_last_concurrent_accesses</b></a>(instruction * accessing_instruction, buffer_allocation_state &amp; allocation, const region&lt;3&gt; &amp; region, instruction_dependency_origin origin_for_read_write_front) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#661E54BBED66F152"><b>add_dependencies_on_last_writers</b></a>(instruction * accessing_instruction, buffer_allocation_state &amp; allocation, const region&lt;3&gt; &amp; region) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#5D99EA7CE3340DE1"><b>add_dependency</b></a>(instruction * from, instruction * to, instruction_dependency_origin record_origin) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#2772838B220C5521"><b>allocate_contiguously</b></a>(batch &amp; batch, buffer_id bid, memory_id mid, box_vector&lt;3&gt; &amp;&amp; required_contiguous_boxes) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#1BF09B5E9044E80F"><b>apply_epoch</b></a>(instruction * epoch) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#B123BF9021EBE536"><b>collapse_execution_front_to</b></a>(instruction * horizon_or_epoch) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#C4B42CCDE8756CC3"><b>commit_pending_region_receive_to_host_memory</b></a>(batch &amp; batch, buffer_id bid, const buffer_state::region_receive &amp; receives, const std::vector&lt;region&lt;3&gt;&gt; &amp; concurrent_reads) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#7E111B332696A1F9"><b>compile_epoch_command</b></a>(batch &amp; batch, const epoch_command &amp; ecmd) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#8D9D60FCA2815DB3"><b>compile_execution_command</b></a>(batch &amp; batch, const execution_command &amp; ecmd) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#60913F5A44CCBC49"><b>compile_fence_command</b></a>(batch &amp; batch, const fence_command &amp; fcmd) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#D901245E0C0F6CE1"><b>compile_horizon_command</b></a>(batch &amp; batch, const horizon_command &amp; hcmd) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#7B4B55D8700D8858"><b>compile_push_command</b></a>(batch &amp; batch, const push_command &amp; pcmd) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#C88A383465F9D23F"><b>compile_reduction_command</b></a>(batch &amp; batch, const reduction_command &amp; rcmd) &rarr; void</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;typename Instruction, typename... CtorParamsAndRecordWithFn&gt;</span><br><a href="#AB5EB2F52E473EA4"><b>create</b></a>(batch &amp; batch, CtorParamsAndRecordWithFn &amp;&amp;... ctor_args_and_record_with) &rarr; Instruction *</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;typename Instruction, typename... CtorParamsAndRecordWithFn, size_t... CtorParamIndices, size_t RecordWithFnIndex&gt;</span><br><a href="#902CDF4EEC3D6405"><b>create_internal</b></a>(batch &amp; batch, const std::tuple&lt;CtorParamsAndRecordWithFn...&gt; &amp; ctor_args_and_record_with, std::index_sequence&lt;CtorParamIndices...&gt;, std::index_sequence&lt;RecordWithFnIndex&gt;) &rarr; Instruction *</li><li class="is-family-code hdoc-private"><a href="#4132D0AADC40B612"><b>create_outbound_pilot</b></a>(batch &amp; batch, node_id target, const transfer_id &amp; trid, const box&lt;3&gt; &amp; box) &rarr; message_id</li><li class="is-family-code hdoc-private"><a href="#CA82CF58EF78C40D"><b>create_task_collective_groups</b></a>(batch &amp; command_batch, const task &amp; tsk) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#92B5031351375858"><b>defer_await_push_command</b></a>(const await_push_command &amp; apcmd) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#0498C8287E5B3ECA"><b>establish_coherence_between_buffer_memories</b></a>(batch &amp; batch, buffer_id bid, memory_id dest_mid, const std::vector&lt;region&lt;3&gt;&gt; &amp; concurrent_reads) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#D43EB673025170B9"><b>finish_task_local_reduction</b></a>(batch &amp; command_batch, const local_reduction &amp; red, const reduction_info &amp; rinfo, const execution_command &amp; ecmd, const task &amp; tsk, const std::vector&lt;localized_chunk&gt; &amp; concurrent_chunks) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#340EDC62663EAE17"><b>flush_batch</b></a>(batch &amp;&amp; batch) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#B395E179C071C7ED"><b>is_recording</b></a>() const &rarr; bool</li><li class="is-family-code hdoc-private"><a href="#4EB25AE89E74C8EE"><b>launch_task_kernel</b></a>(batch &amp; command_batch, const execution_command &amp; ecmd, const task &amp; tsk, const localized_chunk &amp; chunk) &rarr; instruction *</li><li class="is-family-code hdoc-private"><a href="#CFC7F5021F2AE508"><b>new_allocation_id</b></a>(memory_id mid) &rarr; allocation_id</li><li class="is-family-code hdoc-private"><a href="#B5E0957E8DEAAD8B"><b>perform_atomic_write_to_allocation</b></a>(instruction * writing_instruction, buffer_allocation_state &amp; allocation, const region&lt;3&gt; &amp; region) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#058573A95DEAE590"><b>perform_concurrent_read_from_allocation</b></a>(instruction * reading_instruction, buffer_allocation_state &amp; allocation, const region&lt;3&gt; &amp; region) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#5BC7B1FAE53F04DF"><b>perform_task_buffer_accesses</b></a>(const task &amp; tsk, const std::vector&lt;localized_chunk&gt; &amp; concurrent_chunks, const std::vector&lt;instruction *&gt; &amp; command_instructions) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#3AB784187231EDA7"><b>perform_task_collective_operations</b></a>(const task &amp; tsk, const std::vector&lt;localized_chunk&gt; &amp; concurrent_chunks, const std::vector&lt;instruction *&gt; &amp; command_instructions) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#44ECAFA81858137C"><b>perform_task_side_effects</b></a>(const task &amp; tsk, const std::vector&lt;localized_chunk&gt; &amp; concurrent_chunks, const std::vector&lt;instruction *&gt; &amp; command_instructions) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#9E7078334AFA966F"><b>prepare_task_local_reduction</b></a>(batch &amp; command_batch, const reduction_info &amp; rinfo, const execution_command &amp; ecmd, const task &amp; tsk, size_t num_concurrent_chunks) &rarr; local_reduction</li><li class="is-family-code hdoc-private"><a href="#CD7AA1ABB70AC814"><b>print_buffer_debug_label</b></a>(buffer_id bid) const &rarr; std::string</li><li class="is-family-code hdoc-private"><a href="#92BEEA267BEB11F6"><b>report_task_overlapping_writes</b></a>(const task &amp; tsk, const std::vector&lt;localized_chunk&gt; &amp; concurrent_chunks) const &rarr; void</li><li class="is-family-code hdoc-private"><a href="#1DEC23F1E70D1E9F"><b>satisfy_task_buffer_requirements</b></a>(batch &amp; batch, buffer_id bid, const task &amp; tsk, const subrange&lt;3&gt; &amp; local_execution_range, bool is_reduction_initializer, const std::vector&lt;localized_chunk&gt; &amp; concurrent_chunks_after_split) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#94B22E4E9C6A0267"><b>split_task_execution_range</b></a>(const execution_command &amp; ecmd, const task &amp; tsk) &rarr; std::vector&lt;localized_chunk&gt;</li></ul></section><section><h2>Member Functions</h2><section><h3 id="D0B7B25BEA94FACD" data-function-name="compile"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D0B7B25BEA94FACD">\xb6</a><code class="hdoc-function-code language-cpp">void compile(const <a href="/docs/api/records/45953E750EDED50D/">abstract_command</a>&amp; cmd)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L541">src/instruction_graph_generator.cc:541</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/45953E750EDED50D/">abstract_command</a>&amp;<b> cmd</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="0E0CD165E7A78184" data-function-name="generator_impl"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0E0CD165E7A78184">\xb6</a><code class="hdoc-function-code language-cpp">generator_impl(\n    const <a href="/docs/api/records/AF217E212CB99D08/">task_manager</a>&amp; tm,\n    size_t num_nodes,\n    <a href="/docs/api/records/DBE63D9D086598BC/">node_id</a> local_nid,\n    const <a href="/docs/api/records/8B87A955194B6925/">system_info</a>&amp; system,\n    <a href="/docs/api/records/8F96988164AB067F/">instruction_graph</a>&amp; idag,\n    <a href="/docs/api/records/E0703723ACB4E8C8/">instruction_graph_generator::delegate</a>* dlg,\n    <a href="/docs/api/records/E8FA12264299E0BA/">instruction_recorder</a>* recorder,\n    const <a href="/docs/api/records/2CF0540537D19097/">instruction_graph_generator::policy_set</a>&amp;\n        policy)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L533">src/instruction_graph_generator.cc:533</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/AF217E212CB99D08/">task_manager</a>&amp;<b> tm</b></dt><dt class="is-family-code">size_t<b> num_nodes</b></dt><dt class="is-family-code"><a href="/docs/api/records/DBE63D9D086598BC/">node_id</a><b> local_nid</b></dt><dt class="is-family-code">const <a href="/docs/api/records/8B87A955194B6925/">system_info</a>&amp;<b> system</b></dt><dt class="is-family-code"><a href="/docs/api/records/8F96988164AB067F/">instruction_graph</a>&amp;<b> idag</b></dt><dt class="is-family-code"><a href="/docs/api/records/E0703723ACB4E8C8/">instruction_graph_generator::delegate</a>*<b> dlg</b></dt><dt class="is-family-code"><a href="/docs/api/records/E8FA12264299E0BA/">instruction_recorder</a>*<b> recorder</b></dt><dt class="is-family-code">const <a href="/docs/api/records/2CF0540537D19097/">instruction_graph_generator::policy_set</a>&amp;<b> policy</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="EFBC09DED395E27C" data-function-name="notify_buffer_created"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#EFBC09DED395E27C">\xb6</a><code class="hdoc-function-code language-cpp">void notify_buffer_created(\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp; range,\n    size_t elem_size,\n    size_t elem_align,\n    <a href="/docs/api/records/1824FC8BEBAA39C7/">allocation_id</a> user_aid = null_allocation_id)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L536">src/instruction_graph_generator.cc:536</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code">const <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt;&amp;<b> range</b></dt><dt class="is-family-code">size_t<b> elem_size</b></dt><dt class="is-family-code">size_t<b> elem_align</b></dt><dt class="is-family-code"><a href="/docs/api/records/1824FC8BEBAA39C7/">allocation_id</a><b> user_aid</b> = null_allocation_id</dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="1B589DE0DA3F4BEB" data-function-name="notify_buffer_debug_name_changed"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1B589DE0DA3F4BEB">\xb6</a><code class="hdoc-function-code language-cpp">void notify_buffer_debug_name_changed(\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    const <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&amp; name)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L537">src/instruction_graph_generator.cc:537</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&amp;<b> name</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CC5CB00541070BEB" data-function-name="notify_buffer_destroyed"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CC5CB00541070BEB">\xb6</a><code class="hdoc-function-code language-cpp">void notify_buffer_destroyed(<a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L538">src/instruction_graph_generator.cc:538</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="A664DE103D797985" data-function-name="notify_host_object_created"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A664DE103D797985">\xb6</a><code class="hdoc-function-code language-cpp">void notify_host_object_created(\n    <a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a> hoid,\n    bool owns_instance)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L539">src/instruction_graph_generator.cc:539</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a><b> hoid</b></dt><dt class="is-family-code">bool<b> owns_instance</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="97BB61EF5EC91D88" data-function-name="notify_host_object_destroyed"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#97BB61EF5EC91D88">\xb6</a><code class="hdoc-function-code language-cpp">void notify_host_object_destroyed(\n    <a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a> hoid)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L540">src/instruction_graph_generator.cc:540</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a><b> hoid</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B1BAC4706445FF3B" data-function-name="add_dependencies_on_last_concurrent_accesses"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B1BAC4706445FF3B">\xb6</a><code class="hdoc-function-code language-cpp">void add_dependencies_on_last_concurrent_accesses(\n    <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* accessing_instruction,\n    <a href="/docs/api/records/A9233FB7C525B6CC/">buffer_allocation_state</a>&amp; allocation,\n    const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp; region,\n    <a href="/docs/api/enums/2F4CF17AC1378A4E/">instruction_dependency_origin</a>\n        origin_for_read_write_front)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L606">src/instruction_graph_generator.cc:606</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> accessing_instruction</b></dt><dt class="is-family-code"><a href="/docs/api/records/A9233FB7C525B6CC/">buffer_allocation_state</a>&amp;<b> allocation</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp;<b> region</b></dt><dt class="is-family-code"><a href="/docs/api/enums/2F4CF17AC1378A4E/">instruction_dependency_origin</a><b> origin_for_read_write_front</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="661E54BBED66F152" data-function-name="add_dependencies_on_last_writers"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#661E54BBED66F152">\xb6</a><code class="hdoc-function-code language-cpp">void add_dependencies_on_last_writers(\n    <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* accessing_instruction,\n    <a href="/docs/api/records/A9233FB7C525B6CC/">buffer_allocation_state</a>&amp; allocation,\n    const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp; region)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L601">src/instruction_graph_generator.cc:601</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> accessing_instruction</b></dt><dt class="is-family-code"><a href="/docs/api/records/A9233FB7C525B6CC/">buffer_allocation_state</a>&amp;<b> allocation</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp;<b> region</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="5D99EA7CE3340DE1" data-function-name="add_dependency"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5D99EA7CE3340DE1">\xb6</a><code class="hdoc-function-code language-cpp">void add_dependency(\n    <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* from,\n    <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* to,\n    <a href="/docs/api/enums/2F4CF17AC1378A4E/">instruction_dependency_origin</a> record_origin)</code></pre></h3><section><h4>Description</h4><p><p>Inserts a graph dependency and removes <code>to</code> form the execution front (if present). The <code>record_origin</code> is debug information.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L599">src/instruction_graph_generator.cc:599</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> from</b></dt><dt class="is-family-code"><a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> to</b></dt><dt class="is-family-code"><a href="/docs/api/enums/2F4CF17AC1378A4E/">instruction_dependency_origin</a><b> record_origin</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="2772838B220C5521" data-function-name="allocate_contiguously"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2772838B220C5521">\xb6</a><code class="hdoc-function-code language-cpp">void allocate_contiguously(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    <a href="/docs/api/records/1AFCD7D3D6F8EF79/">memory_id</a> mid,\n    box_vector&lt;3&gt;&amp;&amp; required_contiguous_boxes)</code></pre></h3><section><h4>Description</h4><p><p>Ensure that all boxes in <code>required_contiguous_boxes</code> have a contiguous allocation on <code>mid</code>. Re-allocation of one buffer on one memory never interacts with other buffers or other memories backing the same buffer, this function can be called in any order of allocation requirements without generating additional dependencies.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L621">src/instruction_graph_generator.cc:621</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code"><a href="/docs/api/records/1AFCD7D3D6F8EF79/">memory_id</a><b> mid</b></dt><dt class="is-family-code">box_vector&lt;3&gt;&amp;&amp;<b> required_contiguous_boxes</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="1BF09B5E9044E80F" data-function-name="apply_epoch"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1BF09B5E9044E80F">\xb6</a><code class="hdoc-function-code language-cpp">void apply_epoch(<a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* epoch)</code></pre></h3><section><h4>Description</h4><p><p>Replace all tracked instructions that older than <code>epoch</code> with <code>epoch</code>.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L613">src/instruction_graph_generator.cc:613</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> epoch</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B123BF9021EBE536" data-function-name="collapse_execution_front_to"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B123BF9021EBE536">\xb6</a><code class="hdoc-function-code language-cpp">void collapse_execution_front_to(\n    <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* horizon_or_epoch)</code></pre></h3><section><h4>Description</h4><p><p>Add dependencies from <code>horizon_or_epoch</code> to all instructions in <code>m_execution_front</code> and clear the set.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L616">src/instruction_graph_generator.cc:616</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> horizon_or_epoch</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="C4B42CCDE8756CC3" data-function-name="commit_pending_region_receive_to_host_memory"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C4B42CCDE8756CC3">\xb6</a><code class="hdoc-function-code language-cpp">void commit_pending_region_receive_to_host_memory(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    const <a href="/docs/api/records/8361C42ECA91B644/">buffer_state::region_receive</a>&amp; receives,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;region&lt;3&gt;&gt;&amp;\n        concurrent_reads)</code></pre></h3><section><h4>Description</h4><p><p>Insert one or more receive instructions in order to fulfil a pending receive, making the received data available in host_memory_id. This may entail receiving a region that is larger than the union of all regions read.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L625">src/instruction_graph_generator.cc:625</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code">const <a href="/docs/api/records/8361C42ECA91B644/">buffer_state::region_receive</a>&amp;<b> receives</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;region&lt;3&gt;&gt;&amp;<b> concurrent_reads</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="7E111B332696A1F9" data-function-name="compile_epoch_command"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7E111B332696A1F9">\xb6</a><code class="hdoc-function-code language-cpp">void compile_epoch_command(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    const <a href="/docs/api/records/5259BCC51068E775/">epoch_command</a>&amp; ecmd)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L675">src/instruction_graph_generator.cc:675</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/5259BCC51068E775/">epoch_command</a>&amp;<b> ecmd</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="8D9D60FCA2815DB3" data-function-name="compile_execution_command"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8D9D60FCA2815DB3">\xb6</a><code class="hdoc-function-code language-cpp">void compile_execution_command(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp; ecmd)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L669">src/instruction_graph_generator.cc:669</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp;<b> ecmd</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="60913F5A44CCBC49" data-function-name="compile_fence_command"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#60913F5A44CCBC49">\xb6</a><code class="hdoc-function-code language-cpp">void compile_fence_command(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    const <a href="/docs/api/records/F19AFFB61599C126/">fence_command</a>&amp; fcmd)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L673">src/instruction_graph_generator.cc:673</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/F19AFFB61599C126/">fence_command</a>&amp;<b> fcmd</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="D901245E0C0F6CE1" data-function-name="compile_horizon_command"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D901245E0C0F6CE1">\xb6</a><code class="hdoc-function-code language-cpp">void compile_horizon_command(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    const <a href="/docs/api/records/C4073DF613EFCC26/">horizon_command</a>&amp; hcmd)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L674">src/instruction_graph_generator.cc:674</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/C4073DF613EFCC26/">horizon_command</a>&amp;<b> hcmd</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="7B4B55D8700D8858" data-function-name="compile_push_command"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7B4B55D8700D8858">\xb6</a><code class="hdoc-function-code language-cpp">void compile_push_command(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    const <a href="/docs/api/records/2F0F746DD94EDBFB/">push_command</a>&amp; pcmd)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L670">src/instruction_graph_generator.cc:670</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/2F0F746DD94EDBFB/">push_command</a>&amp;<b> pcmd</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="C88A383465F9D23F" data-function-name="compile_reduction_command"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C88A383465F9D23F">\xb6</a><code class="hdoc-function-code language-cpp">void compile_reduction_command(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    const <a href="/docs/api/records/D3C1212C6EA295C8/">reduction_command</a>&amp; rcmd)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L672">src/instruction_graph_generator.cc:672</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/D3C1212C6EA295C8/">reduction_command</a>&amp;<b> rcmd</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="AB5EB2F52E473EA4" data-function-name="create"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#AB5EB2F52E473EA4">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Instruction,\n          typename... CtorParamsAndRecordWithFn&gt;\nInstruction* create(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    CtorParamsAndRecordWithFn&amp;&amp;... ctor_args_and_record_with)</code></pre></h3><section><h4>Description</h4><p><p>Create an instruction, insert it into the IDAG and the current execution front, and record it if a recorder is present. Invoke as <code>create &lt;instruction -type&gt;(instruction-ctor-params..., [ &amp; ](const auto record_debug_info) { return record_debug_info(instruction-record-additional-ctor-params)})</code></p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L594">src/instruction_graph_generator.cc:594</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Instruction</b></dt><dt class="is-family-code"><b> CtorParamsAndRecordWithFn</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code">CtorParamsAndRecordWithFn&amp;&amp;...<b> ctor_args_and_record_with</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="902CDF4EEC3D6405" data-function-name="create_internal"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#902CDF4EEC3D6405">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Instruction,\n          typename... CtorParamsAndRecordWithFn,\n          size_t... CtorParamIndices,\n          size_t RecordWithFnIndex&gt;\nInstruction* create_internal(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    const <a href="https://en.cppreference.com/w/cpp/utility/tuple">std::tuple</a>&lt;\n        CtorParamsAndRecordWithFn...&gt;&amp;\n        ctor_args_and_record_with,\n    std::index_sequence&lt;CtorParamIndices...&gt;,\n    std::index_sequence&lt;RecordWithFnIndex&gt;)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L583">src/instruction_graph_generator.cc:583</a></p></aside><section><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Instruction</b></dt><dt class="is-family-code"><b> CtorParamsAndRecordWithFn</b></dt><dt class="is-family-code">size_t<b> CtorParamIndices</b></dt><dt class="is-family-code">size_t<b> RecordWithFnIndex</b></dt></dl></section><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/utility/tuple">std::tuple</a>&lt;CtorParamsAndRecordWithFn...&gt;&amp;<b> ctor_args_and_record_with</b></dt><dt class="is-family-code">std::index_sequence&lt;CtorParamIndices...&gt;<b> </b></dt><dt class="is-family-code">std::index_sequence&lt;RecordWithFnIndex&gt;<b> </b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="4132D0AADC40B612" data-function-name="create_outbound_pilot"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4132D0AADC40B612">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/9CC04BC93AB17E32/">message_id</a> create_outbound_pilot(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    <a href="/docs/api/records/DBE63D9D086598BC/">node_id</a> target,\n    const <a href="/docs/api/records/3330F4171361EBD0/">transfer_id</a>&amp; trid,\n    const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp; box)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L596">src/instruction_graph_generator.cc:596</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code"><a href="/docs/api/records/DBE63D9D086598BC/">node_id</a><b> target</b></dt><dt class="is-family-code">const <a href="/docs/api/records/3330F4171361EBD0/">transfer_id</a>&amp;<b> trid</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A87962C2586A4E24/">box</a>&lt;3&gt;&amp;<b> box</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CA82CF58EF78C40D" data-function-name="create_task_collective_groups"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CA82CF58EF78C40D">\xb6</a><code class="hdoc-function-code language-cpp">void create_task_collective_groups(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; command_batch,\n    const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp; tsk)</code></pre></h3><section><h4>Description</h4><p><p>Issue instructions to create any collective group required by a task.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L634">src/instruction_graph_generator.cc:634</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> command_batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="92B5031351375858" data-function-name="defer_await_push_command"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#92B5031351375858">\xb6</a><code class="hdoc-function-code language-cpp">void defer_<a href="/docs/api/records/F0FA4EE183780768/">await_push_command</a>(\n    const await_push_command&amp; apcmd)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L671">src/instruction_graph_generator.cc:671</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/F0FA4EE183780768/">await_push_command</a>&amp;<b> apcmd</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="0498C8287E5B3ECA" data-function-name="establish_coherence_between_buffer_memories"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0498C8287E5B3ECA">\xb6</a><code class="hdoc-function-code language-cpp">void establish_coherence_between_buffer_memories(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    <a href="/docs/api/records/1AFCD7D3D6F8EF79/">memory_id</a> dest_mid,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;region&lt;3&gt;&gt;&amp;\n        concurrent_reads)</code></pre></h3><section><h4>Description</h4><p><p>Insert coherence copy instructions where necessary to make <code>dest_mid</code> coherent for all <code>concurrent_reads</code>. Requires the necessary allocations in <code>dest_mid</code> to already be present. We deliberately allow overlapping read-regions to avoid aggregated copies introducing synchronization points between otherwise independent instructions.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L631">src/instruction_graph_generator.cc:631</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code"><a href="/docs/api/records/1AFCD7D3D6F8EF79/">memory_id</a><b> dest_mid</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;region&lt;3&gt;&gt;&amp;<b> concurrent_reads</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="D43EB673025170B9" data-function-name="finish_task_local_reduction"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#D43EB673025170B9">\xb6</a><code class="hdoc-function-code language-cpp">void finish_task_local_reduction(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; command_batch,\n    const <a href="/docs/api/records/029A77386870FD15/">local_reduction</a>&amp; red,\n    const <a href="/docs/api/records/6CABC3E763480EA0/">reduction_info</a>&amp; rinfo,\n    const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp; ecmd,\n    const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp; tsk,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;\n        concurrent_chunks)</code></pre></h3><section><h4>Description</h4><p><p>Combine any partial reduction results computed by local chunks and write it to buffer host memory.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L651">src/instruction_graph_generator.cc:651</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> command_batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/029A77386870FD15/">local_reduction</a>&amp;<b> red</b></dt><dt class="is-family-code">const <a href="/docs/api/records/6CABC3E763480EA0/">reduction_info</a>&amp;<b> rinfo</b></dt><dt class="is-family-code">const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp;<b> ecmd</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;<b> concurrent_chunks</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="340EDC62663EAE17" data-function-name="flush_batch"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#340EDC62663EAE17">\xb6</a><code class="hdoc-function-code language-cpp">void flush_<a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>(batch&amp;&amp; batch)</code></pre></h3><section><h4>Description</h4><p><p>Passes all instructions and outbound pilots that have been accumulated in <code>batch</code> to the delegate (if any). Called after compiling a command, creating or destroying a buffer or host object, and also in our constructor for the creation of the initial epoch.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L679">src/instruction_graph_generator.cc:679</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;&amp;<b> batch</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B395E179C071C7ED" data-function-name="is_recording"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B395E179C071C7ED">\xb6</a><code class="hdoc-function-code language-cpp">bool is_recording() const</code></pre></h3><section><h4>Description</h4><p><p>True if a recorder is present and create() will call the <code>record_with</code> lambda passed as its last parameter.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L578">src/instruction_graph_generator.cc:578</a></p></aside></section><hr class="member-fun-separator"></hr><section><h3 id="4EB25AE89E74C8EE" data-function-name="launch_task_kernel"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4EB25AE89E74C8EE">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* launch_task_kernel(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; command_batch,\n    const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp; ecmd,\n    const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp; tsk,\n    const <a href="/docs/api/records/2EF10FE8201C8692/">localized_chunk</a>&amp; chunk)</code></pre></h3><section><h4>Description</h4><p><p>Launch a device kernel for each local chunk of a task, passing the relevant buffer allocations in place of accessors and reduction descriptors.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L655">src/instruction_graph_generator.cc:655</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> command_batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp;<b> ecmd</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt><dt class="is-family-code">const <a href="/docs/api/records/2EF10FE8201C8692/">localized_chunk</a>&amp;<b> chunk</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CFC7F5021F2AE508" data-function-name="new_allocation_id"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CFC7F5021F2AE508">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/1824FC8BEBAA39C7/">allocation_id</a> new_allocation_id(<a href="/docs/api/records/1AFCD7D3D6F8EF79/">memory_id</a> mid)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L580">src/instruction_graph_generator.cc:580</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/1AFCD7D3D6F8EF79/">memory_id</a><b> mid</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="B5E0957E8DEAAD8B" data-function-name="perform_atomic_write_to_allocation"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B5E0957E8DEAAD8B">\xb6</a><code class="hdoc-function-code language-cpp">void perform_atomic_write_to_allocation(\n    <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* writing_instruction,\n    <a href="/docs/api/records/A9233FB7C525B6CC/">buffer_allocation_state</a>&amp; allocation,\n    const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp; region)</code></pre></h3><section><h4>Description</h4><p><p>Add dependencies to the last concurrent accesses of a region, and track the instruction as the new last (unique) writer.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L610">src/instruction_graph_generator.cc:610</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> writing_instruction</b></dt><dt class="is-family-code"><a href="/docs/api/records/A9233FB7C525B6CC/">buffer_allocation_state</a>&amp;<b> allocation</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp;<b> region</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="058573A95DEAE590" data-function-name="perform_concurrent_read_from_allocation"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#058573A95DEAE590">\xb6</a><code class="hdoc-function-code language-cpp">void perform_concurrent_read_from_allocation(\n    <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* reading_instruction,\n    <a href="/docs/api/records/A9233FB7C525B6CC/">buffer_allocation_state</a>&amp; allocation,\n    const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp; region)</code></pre></h3><section><h4>Description</h4><p><p>Add dependencies to the last writer of a region, and track the instruction as the new last (concurrent) reader.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L604">src/instruction_graph_generator.cc:604</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> reading_instruction</b></dt><dt class="is-family-code"><a href="/docs/api/records/A9233FB7C525B6CC/">buffer_allocation_state</a>&amp;<b> allocation</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A3975FE869EB8647/">region</a>&lt;3&gt;&amp;<b> region</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="5BC7B1FAE53F04DF" data-function-name="perform_task_buffer_accesses"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5BC7B1FAE53F04DF">\xb6</a><code class="hdoc-function-code language-cpp">void perform_<a href="/docs/api/records/A42A04C270A2D231/">task</a>_buffer_accesses(\n    const task&amp; tsk,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;\n        concurrent_chunks,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;instruction*&gt;&amp;\n        command_instructions)</code></pre></h3><section><h4>Description</h4><p><p>Add dependencies for all buffer accesses and reductions of a task, then update tracking structures accordingly.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L658">src/instruction_graph_generator.cc:658</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;<b> concurrent_chunks</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;instruction*&gt;&amp;<b> command_instructions</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="3AB784187231EDA7" data-function-name="perform_task_collective_operations"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3AB784187231EDA7">\xb6</a><code class="hdoc-function-code language-cpp">void perform_<a href="/docs/api/records/A42A04C270A2D231/">task</a>_collective_operations(\n    const task&amp; tsk,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;\n        concurrent_chunks,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;instruction*&gt;&amp;\n        command_instructions)</code></pre></h3><section><h4>Description</h4><p><p>If a task is part of a collective group, serialize it with respect to the last host task in that group.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L666">src/instruction_graph_generator.cc:666</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;<b> concurrent_chunks</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;instruction*&gt;&amp;<b> command_instructions</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="44ECAFA81858137C" data-function-name="perform_task_side_effects"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#44ECAFA81858137C">\xb6</a><code class="hdoc-function-code language-cpp">void perform_<a href="/docs/api/records/A42A04C270A2D231/">task</a>_side_effects(\n    const task&amp; tsk,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;\n        concurrent_chunks,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;instruction*&gt;&amp;\n        command_instructions)</code></pre></h3><section><h4>Description</h4><p><p>If a task has side effects, serialize it with respect to the last task that shares a host object.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L662">src/instruction_graph_generator.cc:662</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;<b> concurrent_chunks</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;instruction*&gt;&amp;<b> command_instructions</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="9E7078334AFA966F" data-function-name="prepare_task_local_reduction"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9E7078334AFA966F">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/029A77386870FD15/">local_reduction</a> prepare_task_local_reduction(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; command_batch,\n    const <a href="/docs/api/records/6CABC3E763480EA0/">reduction_info</a>&amp; rinfo,\n    const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp; ecmd,\n    const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp; tsk,\n    size_t num_concurrent_chunks)</code></pre></h3><section><h4>Description</h4><p><p>Create a gather allocation and optionally save the current buffer value before creating partial reduction results in any kernel.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L647">src/instruction_graph_generator.cc:647</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> command_batch</b></dt><dt class="is-family-code">const <a href="/docs/api/records/6CABC3E763480EA0/">reduction_info</a>&amp;<b> rinfo</b></dt><dt class="is-family-code">const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp;<b> ecmd</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt><dt class="is-family-code">size_t<b> num_concurrent_chunks</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CD7AA1ABB70AC814" data-function-name="print_buffer_debug_label"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CD7AA1ABB70AC814">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a> print_buffer_debug_label(\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L681">src/instruction_graph_generator.cc:681</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="92BEEA267BEB11F6" data-function-name="report_task_overlapping_writes"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#92BEEA267BEB11F6">\xb6</a><code class="hdoc-function-code language-cpp">void report_<a href="/docs/api/records/A42A04C270A2D231/">task</a>_overlapping_writes(\n    const task&amp; tsk,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;\n        concurrent_chunks) const</code></pre></h3><section><h4>Description</h4><p><p>Detect overlapping writes between local chunks of a task and report it according to m_policy.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L640">src/instruction_graph_generator.cc:640</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;<b> concurrent_chunks</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="1DEC23F1E70D1E9F" data-function-name="satisfy_task_buffer_requirements"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1DEC23F1E70D1E9F">\xb6</a><code class="hdoc-function-code language-cpp">void satisfy_task_buffer_requirements(\n    <a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp; batch,\n    <a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a> bid,\n    const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp; tsk,\n    const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt;&amp; local_execution_range,\n    bool is_reduction_initializer,\n    const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;\n        concurrent_chunks_after_split)</code></pre></h3><section><h4>Description</h4><p><p>Allocate memory, apply any pending receives, and issue resize- and coherence copies to prepare all buffer memories for a task\'s execution.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L643">src/instruction_graph_generator.cc:643</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/35FDE58191AAA4FF/">batch</a>&amp;<b> batch</b></dt><dt class="is-family-code"><a href="/docs/api/records/72F1B234CCBF2E73/">buffer_id</a><b> bid</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt><dt class="is-family-code">const <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt;&amp;<b> local_execution_range</b></dt><dt class="is-family-code">bool<b> is_reduction_initializer</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;&amp;<b> concurrent_chunks_after_split</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="94B22E4E9C6A0267" data-function-name="split_task_execution_range"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#94B22E4E9C6A0267">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;localized_chunk&gt;\nsplit_task_execution_range(\n    const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp; ecmd,\n    const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp; tsk)</code></pre></h3><section><h4>Description</h4><p><p>Split a tasks local execution range (given by execution_command) into chunks according to device configuration and a possible oversubscription hint.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/src/instruction_graph_generator.cc#L637">src/instruction_graph_generator.cc:637</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/35C6ABFE6EA33C09/">execution_command</a>&amp;<b> ecmd</b></dt><dt class="is-family-code">const <a href="/docs/api/records/A42A04C270A2D231/">task</a>&amp;<b> tsk</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',s={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class generator_impl"},i=void 0,n={id:"api/records/D322CA6FEA1DEBDC",title:"class generator_impl",description:"",source:"@site/celerity-runtime/docs/api/records/D322CA6FEA1DEBDC.mdx",sourceDirName:"api/records",slug:"/api/records/D322CA6FEA1DEBDC",permalink:"/docs/api/records/D322CA6FEA1DEBDC",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class generator_impl"},sidebar:"api"},d={},l=[];function p(e){const{Head:a}={...(0,t.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a,{children:[(0,r.jsx)("script",{src:"/js/highlight.min.js"}),(0,r.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,r.jsx)("div",{dangerouslySetInnerHTML:{__html:o}})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,a,c)=>{c.d(a,{R:()=>s,x:()=>i});var r=c(96540);const t={},o=r.createContext(t);function s(e){const a=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:a},e.children)}}}]);