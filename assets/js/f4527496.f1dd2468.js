"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[84775],{13622:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>n});var s=t(74848),c=t(28453);const o='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li class="is-active"><a aria-current="page2BD66A3725F6639A"><span>class accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt;</span></a></li></ul></nav>\n<main><h1>class accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt;</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">template &lt;typename DataT, int Dims, access_mode Mode&gt;\nclass accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; { /* full declaration omitted */ };</code></pre><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L314">include/accessor.h:314</a></p><h2>Template Parameters</h2><dl><dt class="is-family-code"><b> DataT</b></dt><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code">access_mode<b> Mode</b></dt></dl><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_accessed_buffer_subrange" data-member-name="m_accessed_buffer_subrange">  subrange&lt;Dims&gt; <b>m_accessed_buffer_subrange</b></dt><dt class="is-family-code hdoc-private" id="var_m_allocation_offset" data-member-name="m_allocation_offset">  id&lt;Dims&gt; <b>m_allocation_offset</b></dt><dt class="is-family-code hdoc-private" id="var_m_allocation_range" data-member-name="m_allocation_range">  range&lt;Dims&gt; <b>m_allocation_range</b> = detail::zeros</dt><dt class="is-family-code hdoc-private" id="var_m_buffer_range" data-member-name="m_buffer_range">  range&lt;Dims&gt; <b>m_buffer_range</b> = detail::zeros</dt><dt class="is-family-code hdoc-private" id="var_m_host_ptr" data-member-name="m_host_ptr">  DataT* <b>m_host_ptr</b> = nullptr</dt><dt class="is-family-code hdoc-private" id="var_m_oob_indices" data-member-name="m_oob_indices">  <a href="/docs/api/records/4AD9AE1951EF94FE/">detail::oob_bounding_box</a>* <b>m_oob_indices</b> = nullptr</dt><dt class="is-family-code hdoc-private" id="var_m_oob_fallback_value" data-member-name="m_oob_fallback_value">  DataT <b>m_oob_fallback_value</b> = type-parameter-0-0{}</dt><dt class="is-family-code hdoc-private" id="var_m_oob_mutex" data-member-name="m_oob_mutex"> static  <a href="https://en.cppreference.com/w/cpp/thread/mutex">std::mutex</a> <b>m_oob_mutex</b></dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#E693C8CD14015B64"><b>accessor</b></a>(accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; &amp;&amp;) noexcept</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagMode, access_mode TagModeNoInit&gt;</span><br><a href="#44C27C6303DFAB4A"><b>accessor</b></a>(const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;TagMode, TagModeNoInit, target::host_task&gt;, const property_list &amp;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagMode, access_mode M = Mode, typename  = std::enable_if_t&lt;detail::access::mode_traits::is_producer(M)&gt;&gt;</span><br><a href="#6C69BF59E4676330"><b>accessor</b></a>(const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;TagMode, Mode, target::host_task&gt;, const property::no_init &amp;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagModeNoInit&gt;</span><br><a href="#1C3047A6DB469618"><b>accessor</b></a>(const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;Mode, TagModeNoInit, target::host_task&gt;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor&gt;</span><br><a href="#B3019391B541CED7"><b>accessor</b></a>(const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode TagMode, access_mode TagModeNoInit, int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#FC9A4127971F4FC5"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, detail::access_tag&lt;TagMode, TagModeNoInit, target::host_task&gt; tag, const property_list &amp; prop_list)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode TagMode, int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#45FC824A84AFF428"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, detail::access_tag&lt;TagMode, Mode, target::host_task&gt; tag, const property::no_init &amp; no_init)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode TagModeNoInit, int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#2A032426C212CB32"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, detail::access_tag&lt;Mode, TagModeNoInit, target::host_task&gt; tag)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#F35EB96CEF9A4A1A"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagMode, access_mode M = Mode, typename  = std::enable_if_t&lt;detail::access::mode_traits::is_producer(M)&gt;&gt;</span><br><a href="#B85EF820ECA90F67"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;TagMode, Mode, target::host_task&gt;, const property::no_init &amp;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor, access_mode TagModeNoInit&gt;</span><br><a href="#345FDDF4F8339373"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn, detail::access_tag&lt;Mode, TagModeNoInit, target::host_task&gt;)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename Functor&gt;</span><br><a href="#0A09EEB0AC233ED4"><b>accessor</b></a>(buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn)</li><li class="is-family-code"><a href="#DB8A6A4AF988BDA1"><b>accessor</b></a>() noexcept</li><li class="is-family-code"><a href="#011C32C7D0748D70"><b>accessor</b></a>(const accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; &amp; other)</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int KernelDims&gt;</span><br><a href="#A518E91C1C8FAF29"><b>get_allocation_window</b></a>(const partition&lt;KernelDims&gt; &amp; part) const &rarr; buffer_allocation_window&lt;DataT, Dims&gt;</li><li class="is-family-code"><a href="#4C11782A3B08F0E7"><b>get_pointer</b></a>() const &rarr; DataT *</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode, std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_producer(M), int&gt;  = 0&gt;</span><br><a href="#33E4EC7C267D883D"><b>operator DataT &amp;</b></a>() const</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode, std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_pure_consumer(M), int&gt;  = 0&gt;</span><br><a href="#9489CB13F059874F"><b>operator const DataT &amp;</b></a>() const</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#9FB51539F5342DA7"><b>operator*</b></a>() const &rarr; std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_producer(M), DataT &amp;&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#54A302648FC468B3"><b>operator*</b></a>() const &rarr; std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_pure_consumer(M), const DataT &amp;&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#0F81486CB1ABAFE1"><b>operator-&gt;</b></a>() const &rarr; std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_pure_consumer(M), const DataT *&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#63DBEF3164360686"><b>operator-&gt;</b></a>() const &rarr; std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_producer(M), DataT *&gt;</li><li class="is-family-code"><a href="#B9BB219DC26402BD"><b>operator=</b></a>(const accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; &amp; other) &rarr; accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; &amp;</li><li class="is-family-code"><a href="#0FB1D595A8DEA031"><b>operator=</b></a>(accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; &amp;&amp;) noexcept &rarr; accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; &amp;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#2D14A68C4B205B14"><b>operator=</b></a>(const DataT &amp; other) const &rarr; const accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; &amp;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;D == 0, int&gt;  = 0&gt;</span><br><a href="#1C12561FC69C5DC0"><b>operator=</b></a>(DataT &amp;&amp; other) const &rarr; const accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; &amp;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#982A4ECD934194A0"><b>operator[]</b></a>(const id&lt;Dims&gt; &amp; index) const &rarr; std::enable_if_t&lt;detail::access::mode_traits::is_producer(M), DataT &amp;&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;access_mode M = Mode&gt;</span><br><a href="#04B2D3E052070278"><b>operator[]</b></a>(const id&lt;Dims&gt; &amp; index) const &rarr; std::enable_if_t&lt;detail::access::mode_traits::is_pure_consumer(M), const DataT &amp;&gt;</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;int D = Dims, std::enable_if_t&lt;(D &gt; 0), int&gt;  = 0&gt;</span><br><a href="#B7379C34121868DB"><b>operator[]</b></a>(size_t index) const &rarr; decltype(auto)</li><li class="is-family-code hdoc-private"><span class="hdoc-overview-template">template &lt;target Target = target::host_task, typename Functor&gt;</span><br><a href="#BDA476D7A452246E"><b>accessor</b></a>(ctor_internal_tag, const buffer&lt;DataT, Dims&gt; &amp; buff, handler &amp; cgh, const Functor &amp; rmfn)</li><li class="is-family-code hdoc-private"><a href="#FCE532656F7D5087"><b>accessor</b></a>(subrange&lt;Dims&gt; accessed_buffer_subrange, DataT * ptr, const id&lt;Dims&gt; &amp; allocation_offset, const range&lt;Dims&gt; &amp; allocation_range, const range&lt;Dims&gt; &amp; buffer_range)</li><li class="is-family-code hdoc-private"><a href="#FFE196AA24C5AB1D"><b>accessor</b></a>(const subrange&lt;Dims&gt; &amp; accessed_buffer_subrange, detail::hydration_id hid, const id&lt;Dims&gt; &amp; allocation_offset, const range&lt;Dims&gt; &amp; allocation_range, range&lt;Dims&gt; buffer_range)</li><li class="is-family-code hdoc-private"><a href="#97AFAB8D5189E1C7"><b>copy_and_hydrate</b></a>(const accessor&lt;DataT, Dims, Mode, celerity::target::host_task&gt; &amp; other) &rarr; void</li><li class="is-family-code hdoc-private"><a href="#7342DA2D8753C260"><b>get_linear_offset</b></a>(const id&lt;Dims&gt; &amp; index) const &rarr; size_t</li></ul><h2>Member Functions</h2><h3 id="E693C8CD14015B64" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#E693C8CD14015B64">\xb6</a><code class="hdoc-function-code language-cpp">accessor(accessor&lt;\n         DataT,\n         Dims,\n         Mode,\n         celerity::target::host_task&gt;&amp;&amp;) noexcept</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L382">include/accessor.h:382</a></p><h4>Parameters</h4><dl><dt class="is-family-code">accessor&lt;DataT,\n         Dims,\n         Mode,\n         celerity::target::host_task&gt;&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="44C27C6303DFAB4A" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#44C27C6303DFAB4A">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor,\n          access_mode TagMode,\n          access_mode TagModeNoInit&gt;\naccessor(const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;TagMode,\n                            TagModeNoInit,\n                            target::host_task&gt;,\n         const property_list&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L374">include/accessor.h:374</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagMode</b></dt><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::access_tag&lt;TagMode,\n                   TagModeNoInit,\n                   target::host_task&gt;<b> </b></dt><dt class="is-family-code">const property_list&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="6C69BF59E4676330" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6C69BF59E4676330">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor,\n          access_mode TagMode,\n          access_mode M = Mode,\n          typename = std::enable_if_t&lt;\n              detail::access::mode_traits::\n                  is_producer(M)&gt;&gt;\naccessor(const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;TagMode,\n                            Mode,\n                            target::host_task&gt;,\n         const property::no_init&amp;)</code></pre></h3><h4>Description</h4><p><p>TODO: As of ComputeCpp 2.5.0 they do not support no_init prop, hence this constructor is needed along with discard deduction guide. but once they do this should be replace for a constructor that takes a prop list as an argument.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L369">include/accessor.h:369</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagMode</b></dt><dt class="is-family-code">access_mode<b> M</b> = Mode</dt><dt class="is-family-code"><b> </b> = std::enable_if_t&lt;detail::access::mode_traits::is_producer(M)&gt;</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::\n    access_tag&lt;TagMode, Mode, target::host_task&gt;<b> </b></dt><dt class="is-family-code">const property::no_init&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="1C3047A6DB469618" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1C3047A6DB469618">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor,\n          access_mode TagModeNoInit&gt;\naccessor(const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;Mode,\n                            TagModeNoInit,\n                            target::host_task&gt;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L360">include/accessor.h:360</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::access_tag&lt;Mode,\n                   TagModeNoInit,\n                   target::host_task&gt;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="B3019391B541CED7" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B3019391B541CED7">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor&gt;\naccessor(const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L356">include/accessor.h:356</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="FC9A4127971F4FC5" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#FC9A4127971F4FC5">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode TagMode,\n          access_mode TagModeNoInit,\n          int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\naccessor(\n    buffer&lt;DataT, Dims&gt;&amp; buff,\n    <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n    detail::access_tag&lt;TagMode,\n                       TagModeNoInit,\n                       target::host_task&gt; tag,\n    const property_list&amp; prop_list)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L352">include/accessor.h:352</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> TagMode</b></dt><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">detail::access_tag&lt;TagMode,\n                   TagModeNoInit,\n                   target::host_task&gt;<b> tag</b></dt><dt class="is-family-code">const property_list&amp;<b> prop_list</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="45FC824A84AFF428" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#45FC824A84AFF428">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode TagMode,\n          int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\naccessor(\n    buffer&lt;DataT, Dims&gt;&amp; buff,\n    <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n    detail::access_tag&lt;TagMode,\n                       Mode,\n                       target::host_task&gt; tag,\n    const property::no_init&amp; no_init)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L348">include/accessor.h:348</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> TagMode</b></dt><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">detail::\n    access_tag&lt;TagMode, Mode, target::host_task&gt;<b> tag</b></dt><dt class="is-family-code">const property::no_init&amp;<b> no_init</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="2A032426C212CB32" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2A032426C212CB32">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode TagModeNoInit,\n          int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\naccessor(\n    buffer&lt;DataT, Dims&gt;&amp; buff,\n    <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n    detail::access_tag&lt;Mode,\n                       TagModeNoInit,\n                       target::host_task&gt; tag)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L344">include/accessor.h:344</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">detail::access_tag&lt;Mode,\n                   TagModeNoInit,\n                   target::host_task&gt;<b> tag</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="F35EB96CEF9A4A1A" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F35EB96CEF9A4A1A">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff, <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L341">include/accessor.h:341</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="B85EF820ECA90F67" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B85EF820ECA90F67">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor,\n          access_mode TagMode,\n          access_mode M = Mode,\n          typename = std::enable_if_t&lt;\n              detail::access::mode_traits::\n                  is_producer(M)&gt;&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;TagMode,\n                            Mode,\n                            target::host_task&gt;,\n         const property::no_init&amp;)</code></pre></h3><h4>Description</h4><p><p>TODO: As of ComputeCpp 2.5.0 they do not support no_init prop, hence this constructor is needed along with discard deduction guide. but once they do this should be replace for a constructor that takes a prop list as an argument.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L336">include/accessor.h:336</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagMode</b></dt><dt class="is-family-code">access_mode<b> M</b> = Mode</dt><dt class="is-family-code"><b> </b> = std::enable_if_t&lt;detail::access::mode_traits::is_producer(M)&gt;</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::\n    access_tag&lt;TagMode, Mode, target::host_task&gt;<b> </b></dt><dt class="is-family-code">const property::no_init&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="345FDDF4F8339373" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#345FDDF4F8339373">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor,\n          access_mode TagModeNoInit&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn,\n         detail::access_tag&lt;Mode,\n                            TagModeNoInit,\n                            target::host_task&gt;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L328">include/accessor.h:328</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt><dt class="is-family-code">access_mode<b> TagModeNoInit</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt><dt class="is-family-code">detail::access_tag&lt;Mode,\n                   TagModeNoInit,\n                   target::host_task&gt;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="0A09EEB0AC233ED4" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0A09EEB0AC233ED4">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename Functor&gt;\naccessor(buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L325">include/accessor.h:325</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> Functor</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="DB8A6A4AF988BDA1" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#DB8A6A4AF988BDA1">\xb6</a><code class="hdoc-function-code language-cpp">accessor() noexcept</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L322">include/accessor.h:322</a></p><hr class="member-fun-separator"></hr><h3 id="011C32C7D0748D70" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#011C32C7D0748D70">\xb6</a><code class="hdoc-function-code language-cpp">accessor(\n    const accessor&lt;DataT,\n                   Dims,\n                   Mode,\n                   celerity::target::host_task&gt;&amp;\n        other)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L385">include/accessor.h:385</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::host_task&gt;&amp;<b> other</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="A518E91C1C8FAF29" data-function-name="get_allocation_window"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#A518E91C1C8FAF29">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int KernelDims&gt;\nbuffer_allocation_window&lt;DataT, Dims&gt;\nget_allocation_window(\n    const partition&lt;KernelDims&gt;&amp; part) const</code></pre></h3><h4>Description</h4><p><p>Returns a pointer to the buffer allocation local to this node along with a description how this potentially smaller allocation maps to the underlying virtual buffer and the partition available in the current host task. Accessing the returned allocation outside the window will lead to undefined results.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L507">include/accessor.h:507</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> KernelDims</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const partition&lt;KernelDims&gt;&amp;<b> part</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="4C11782A3B08F0E7" data-function-name="get_pointer"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4C11782A3B08F0E7">\xb6</a><code class="hdoc-function-code language-cpp">DataT* get_pointer() const</code></pre></h3><h4>Description</h4><p><p>Returns a pointer to the underlying buffer.</p>\n</p><p><p>Since the physical (or &quot;backing&quot;) buffer underlying a Celerity buffer might have a different size, it is not always safe to return a pointer, as the stride might not be what is expected. However, it is always possible to get a pointer if the full buffer is being accessed. This API will be deprecated and subsequently removed in a future version.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L482">include/accessor.h:482</a></p><hr class="member-fun-separator"></hr><h3 id="33E4EC7C267D883D" data-function-name="operator DataT &amp;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#33E4EC7C267D883D">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;\n    access_mode M = Mode,\n    std::enable_if_t&lt;\n        Dims == 0 &amp;&amp; detail::access::mode_traits::\n                         is_producer(M),\n        int&gt; = 0&gt;\ninline operator DataT&amp;() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L439">include/accessor.h:439</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt><dt class="is-family-code">std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_producer(M), int&gt;<b> </b> = 0</dt></dl><hr class="member-fun-separator"></hr><h3 id="9489CB13F059874F" data-function-name="operator const DataT &amp;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9489CB13F059874F">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;\n    access_mode M = Mode,\n    std::enable_if_t&lt;\n        Dims == 0 &amp;&amp; detail::access::mode_traits::\n                         is_pure_consumer(M),\n        int&gt; = 0&gt;\ninline operator const DataT&amp;() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L444">include/accessor.h:444</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt><dt class="is-family-code">std::enable_if_t&lt;Dims == 0 &amp;&amp; detail::access::mode_traits::is_pure_consumer(M), int&gt;<b> </b> = 0</dt></dl><hr class="member-fun-separator"></hr><h3 id="9FB51539F5342DA7" data-function-name="operator*"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9FB51539F5342DA7">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    Dims == 0 &amp;&amp;\n        detail::access::mode_traits::is_producer(\n            M),\n    DataT&amp;&gt;\noperator*() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L451">include/accessor.h:451</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl><hr class="member-fun-separator"></hr><h3 id="54A302648FC468B3" data-function-name="operator*"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#54A302648FC468B3">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    Dims == 0 &amp;&amp; detail::access::mode_traits::\n                     is_pure_consumer(M),\n    const DataT&amp;&gt;\noperator*() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L456">include/accessor.h:456</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl><hr class="member-fun-separator"></hr><h3 id="0F81486CB1ABAFE1" data-function-name="operator-&gt;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0F81486CB1ABAFE1">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    Dims == 0 &amp;&amp; detail::access::mode_traits::\n                     is_pure_consumer(M),\n    const DataT*&gt;\noperator-&gt;() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L466">include/accessor.h:466</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl><hr class="member-fun-separator"></hr><h3 id="63DBEF3164360686" data-function-name="operator-&gt;"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#63DBEF3164360686">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    Dims == 0 &amp;&amp;\n        detail::access::mode_traits::is_producer(\n            M),\n    DataT*&gt;\noperator-&gt;() const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L461">include/accessor.h:461</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl><hr class="member-fun-separator"></hr><h3 id="B9BB219DC26402BD" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B9BB219DC26402BD">\xb6</a><code class="hdoc-function-code language-cpp">accessor&lt;DataT,\n         Dims,\n         Mode,\n         celerity::target::host_task&gt;&amp;\noperator=(\n    const accessor&lt;DataT,\n                   Dims,\n                   Mode,\n                   celerity::target::host_task&gt;&amp;\n        other)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L387">include/accessor.h:387</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::host_task&gt;&amp;<b> other</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="0FB1D595A8DEA031" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#0FB1D595A8DEA031">\xb6</a><code class="hdoc-function-code language-cpp">accessor&lt;DataT,\n         Dims,\n         Mode,\n         celerity::target::host_task&gt;&amp;\noperator=(accessor&lt;\n          DataT,\n          Dims,\n          Mode,\n          celerity::target::host_task&gt;&amp;&amp;) noexcept</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L383">include/accessor.h:383</a></p><h4>Parameters</h4><dl><dt class="is-family-code">accessor&lt;DataT,\n         Dims,\n         Mode,\n         celerity::target::host_task&gt;&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="2D14A68C4B205B14" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#2D14A68C4B205B14">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\nconst accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::host_task&gt;&amp;\noperator=(const DataT&amp; other) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L395">include/accessor.h:395</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const DataT&amp;<b> other</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="1C12561FC69C5DC0" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1C12561FC69C5DC0">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;D == 0, int&gt; = 0&gt;\nconst accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::host_task&gt;&amp;\noperator=(DataT&amp;&amp; other) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L401">include/accessor.h:401</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;D == 0, int&gt;<b> </b> = 0</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">DataT&amp;&amp;<b> other</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="982A4ECD934194A0" data-function-name="operator[]"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#982A4ECD934194A0">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    detail::access::mode_traits::is_producer(M),\n    DataT&amp;&gt;\noperator[](const id&lt;Dims&gt;&amp; index) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L407">include/accessor.h:407</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> index</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="04B2D3E052070278" data-function-name="operator[]"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#04B2D3E052070278">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;access_mode M = Mode&gt;\ninline std::enable_if_t&lt;\n    detail::access::mode_traits::is_pure_consumer(\n        M),\n    const DataT&amp;&gt;\noperator[](const id&lt;Dims&gt;&amp; index) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L429">include/accessor.h:429</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">access_mode<b> M</b> = Mode</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> index</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="B7379C34121868DB" data-function-name="operator[]"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B7379C34121868DB">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int D = Dims,\n          std::enable_if_t&lt;(D &gt; 0), int&gt; = 0&gt;\ninline decltype(auto) operator[](\n    size_t index) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L434">include/accessor.h:434</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> D</b> = Dims</dt><dt class="is-family-code">std::enable_if_t&lt;(D &gt; 0), int&gt;<b> </b> = 0</dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">size_t<b> index</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="BDA476D7A452246E" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BDA476D7A452246E">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;target Target = target::host_task,\n          typename Functor&gt;\naccessor(<a href="/docs/api/records/C565EA4D0149DE55/">ctor_internal_tag</a>,\n         const buffer&lt;DataT, Dims&gt;&amp; buff,\n         <a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp; cgh,\n         const Functor&amp; rmfn)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L551">include/accessor.h:551</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">target<b> Target</b> = target::host_task</dt><dt class="is-family-code"><b> Functor</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/C565EA4D0149DE55/">ctor_internal_tag</a><b> </b></dt><dt class="is-family-code">const buffer&lt;DataT, Dims&gt;&amp;<b> buff</b></dt><dt class="is-family-code"><a href="/docs/api/records/73E846FEAC018FF5/">handler</a>&amp;<b> cgh</b></dt><dt class="is-family-code">const Functor&amp;<b> rmfn</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="FCE532656F7D5087" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#FCE532656F7D5087">\xb6</a><code class="hdoc-function-code language-cpp">accessor(subrange&lt;Dims&gt; accessed_buffer_subrange,\n         DataT* ptr,\n         const id&lt;Dims&gt;&amp; allocation_offset,\n         const range&lt;Dims&gt;&amp; allocation_range,\n         const range&lt;Dims&gt;&amp; buffer_range)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L558">include/accessor.h:558</a></p><h4>Parameters</h4><dl><dt class="is-family-code">subrange&lt;Dims&gt;<b> accessed_buffer_subrange</b></dt><dt class="is-family-code">DataT*<b> ptr</b></dt><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> allocation_offset</b></dt><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> allocation_range</b></dt><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> buffer_range</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="FFE196AA24C5AB1D" data-function-name="accessor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#FFE196AA24C5AB1D">\xb6</a><code class="hdoc-function-code language-cpp">accessor(const subrange&lt;Dims&gt;&amp;\n             accessed_buffer_subrange,\n         <a href="/docs/api/records/6F3FB2BA78185BC8/">detail::hydration_id</a> hid,\n         const id&lt;Dims&gt;&amp; allocation_offset,\n         const range&lt;Dims&gt;&amp; allocation_range,\n         range&lt;Dims&gt; buffer_range)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L564">include/accessor.h:564</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const subrange&lt;Dims&gt;&amp;<b> accessed_buffer_subrange</b></dt><dt class="is-family-code"><a href="/docs/api/records/6F3FB2BA78185BC8/">detail::hydration_id</a><b> hid</b></dt><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> allocation_offset</b></dt><dt class="is-family-code">const range&lt;Dims&gt;&amp;<b> allocation_range</b></dt><dt class="is-family-code">range&lt;Dims&gt;<b> buffer_range</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="97AFAB8D5189E1C7" data-function-name="copy_and_hydrate"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#97AFAB8D5189E1C7">\xb6</a><code class="hdoc-function-code language-cpp">void copy_and_hydrate(\n    const accessor&lt;DataT,\n                   Dims,\n                   Mode,\n                   celerity::target::host_task&gt;&amp;\n        other)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L568">include/accessor.h:568</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const accessor&lt;DataT,\n               Dims,\n               Mode,\n               celerity::target::host_task&gt;&amp;<b> other</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="7342DA2D8753C260" data-function-name="get_linear_offset"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7342DA2D8753C260">\xb6</a><code class="hdoc-function-code language-cpp">size_t get_linear_offset(\n    const id&lt;Dims&gt;&amp; index) const</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/accessor.h#L598">include/accessor.h:598</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const id&lt;Dims&gt;&amp;<b> index</b></dt></dl><hr class="member-fun-separator"></hr></main>',r={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class accessor<DataT, Dims, Mode, celerity::target::host_task>"},l=void 0,i={id:"api/records/2BD66A3725F6639A",title:"class accessor<DataT, Dims, Mode, celerity::target::host_task>",description:"",source:"@site/celerity-runtime/docs/api/records/2BD66A3725F6639A.mdx",sourceDirName:"api/records",slug:"/api/records/2BD66A3725F6639A",permalink:"/docs/api/records/2BD66A3725F6639A",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class accessor<DataT, Dims, Mode, celerity::target::host_task>"},sidebar:"api"},d={},n=[];function m(a){const{Head:e}={...(0,c.R)(),...a.components};return e||function(a,e){throw new Error("Expected "+(e?"component":"object")+" `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e,{children:[(0,s.jsx)("script",{src:"/js/highlight.min.js"}),(0,s.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,s.jsx)("div",{dangerouslySetInnerHTML:{__html:o}})]})}function p(a={}){const{wrapper:e}={...(0,c.R)(),...a.components};return e?(0,s.jsx)(e,{...a,children:(0,s.jsx)(m,{...a})}):m(a)}},28453:(a,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var s=t(96540);const c={},o=s.createContext(c);function r(a){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function l(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(c):a.components||c:r(a.components),s.createElement(o.Provider,{value:e},a.children)}}}]);