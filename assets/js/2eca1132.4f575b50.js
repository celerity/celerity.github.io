"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[82477],{96376:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var t=a(74848),r=a(28453);const s='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page7A88A15910D26A90"><span>function gather_command_graph</span></a></li></ul></nav>\n<main><h3 id="7A88A15910D26A90" data-function-name="gather_command_graph"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#7A88A15910D26A90">\xb6</a><code class="hdoc-function-code language-cpp"><a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a> gather_command_graph(\n    const <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&amp; graph_str,\n    size_t num_nodes,\n    <a href="/docs/api/records/DBE63D9D086598BC/">node_id</a> local_nid)</code></pre></h3><h4>Description</h4><p><p>Returns the combined command graph of all nodes on node 0, an empty string on other nodes</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/runtime.h#L180">include/runtime.h:180</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/string/basic_string">std::string</a>&amp;<b> graph_str</b></dt><dt class="is-family-code">size_t<b> num_nodes</b></dt><dt class="is-family-code"><a href="/docs/api/records/DBE63D9D086598BC/">node_id</a><b> local_nid</b></dt></dl><hr class="member-fun-separator"></hr></main>',i={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function gather_command_graph"},c=void 0,o={id:"api/functions/celerity_detail-gather_command_graph",title:"function gather_command_graph",description:"",source:"@site/celerity-runtime/docs/api/functions/celerity_detail-gather_command_graph.mdx",sourceDirName:"api/functions",slug:"/api/functions/celerity_detail-gather_command_graph",permalink:"/docs/api/functions/celerity_detail-gather_command_graph",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function gather_command_graph"},sidebar:"api"},d={},p=[];function l(e){const{Head:n}={...(0,r.R)(),...e.components};return n||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n,{children:[(0,t.jsx)("script",{src:"/js/highlight.min.js"}),(0,t.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,t.jsx)("div",{dangerouslySetInnerHTML:{__html:s}})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>c});var t=a(96540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);