"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5515],{13728:(e,a,c)=>{c.r(a),c.d(a,{assets:()=>n,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=c(74848),r=c(28453);const o='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="page8656C5CDC759BB92"><span>class live_executor</span></a></li></ul></nav>\n<main><h1>class live_executor</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">class live_executor : public executor { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>Executor implementation for a normal (non-dry) run of a Celerity application. Internal instruction dependencies are resolved by means of an out_of_order_engine and receive_arbiter, and the resulting operations dispatched to a <code>backend</code> and <code>communicator</code> implementation.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L41">include/live_executor.h:41</a></p><p>Inherits from: <a href="/docs/api/records/EB0FEA27227B2B5D/">executor</a></p><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_root_comm" data-member-name="m_root_comm">  <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;communicator&gt; <b>m_root_comm</b></dt><dt class="is-family-code hdoc-private" id="var_m_submission_queue" data-member-name="m_submission_queue">  <a href="/docs/api/records/0DE118E8B7E22055/">double_buffered_queue</a>&lt;\n    live_executor_detail::submission&gt; <b>m_submission_queue</b></dt><dt class="is-family-code hdoc-private" id="var_m_thread" data-member-name="m_thread">  <a href="https://en.cppreference.com/w/cpp/thread/thread">std::thread</a> <b>m_thread</b></dt></dl><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#F338A499AAE99A94"><b>live_executor</b></a>(std::unique_ptr&lt;backend&gt; backend, std::unique_ptr&lt;communicator&gt; root_comm, delegate * dlg, const policy_set &amp; policy = default_policy_set()) &rarr; explicit</li><li class="is-family-code"><a href="#9B8DA339647A0DC8"><b>live_executor</b></a>(const live_executor &amp;)</li><li class="is-family-code"><a href="#B40312428AD1A7D5"><b>live_executor</b></a>(live_executor &amp;&amp;)</li><li class="is-family-code"><a href="#F8569B4A87FCC25E"><b>operator=</b></a>(const live_executor &amp;) &rarr; live_executor &amp;</li><li class="is-family-code"><a href="#35EE645664D07992"><b>operator=</b></a>(live_executor &amp;&amp;) &rarr; live_executor &amp;</li><li class="is-family-code"><a href="#1B7C0DA10B71FED6"><b>submit</b></a>(std::vector&lt;const instruction *&gt; instructions, std::vector&lt;outbound_pilot&gt; pilots) &rarr; void</li><li class="is-family-code"><a href="#3411D81D5E4BD6DE"><b>track_host_object_instance</b></a>(host_object_id hoid, std::unique_ptr&lt;host_object_instance&gt; instance) &rarr; void</li><li class="is-family-code"><a href="#BF958C7E4DB5D36A"><b>track_reducer</b></a>(reduction_id rid, std::unique_ptr&lt;reducer&gt; reducer) &rarr; void</li><li class="is-family-code"><a href="#9254EE130429DCAB"><b>track_user_allocation</b></a>(allocation_id aid, void * ptr) &rarr; void</li><li class="is-family-code"><a href="#8EF65E5A7BF496B2"><b>~live_executor</b></a>()</li><li class="is-family-code hdoc-private"><a href="#6798F9159B92401E"><b>default_policy_set</b></a>() &rarr; static constexpr policy_set</li><li class="is-family-code hdoc-private"><a href="#9DF740AE015CFFF8"><b>thread_main</b></a>(std::unique_ptr&lt;backend&gt; backend, delegate * dlg, const policy_set &amp; policy) &rarr; void</li></ul><p>Inherited from <a href="/docs/api/records/EB0FEA27227B2B5D/">executor</a>:</p><ul><li class="is-family-code"><a href="/docs/api/records/EB0FEA27227B2B5D/#DAC0AC18DC068BF0">public <b>operator=</b></a></li><li class="is-family-code"><a href="/docs/api/records/EB0FEA27227B2B5D/#02599DDE66CA0195">public <b>operator=</b></a></li><li class="is-family-code"><a href="/docs/api/records/EB0FEA27227B2B5D/#6E84EF1B500B9C84">public <b>submit</b></a></li><li class="is-family-code"><a href="/docs/api/records/EB0FEA27227B2B5D/#A75BA94004BEDE3D">public <b>track_host_object_instance</b></a></li><li class="is-family-code"><a href="/docs/api/records/EB0FEA27227B2B5D/#0C95C28BEE0BAF97">public <b>track_reducer</b></a></li><li class="is-family-code"><a href="/docs/api/records/EB0FEA27227B2B5D/#32194B9D8B9F4D4B">public <b>track_user_allocation</b></a></li></ul><h2>Member Functions</h2><h3 id="F338A499AAE99A94" data-function-name="live_executor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F338A499AAE99A94">\xb6</a><code class="hdoc-function-code language-cpp">explicit live_executor(\n    <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;backend&gt; backend,\n    <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;communicator&gt; root_comm,\n    <a href="/docs/api/records/AFF9009734443E53/">delegate</a>* dlg,\n    const <a href="/docs/api/records/CFC576B364A649D2/">policy_set</a>&amp; policy =\n        default_policy_set())</code></pre></h3><h4>Description</h4><p><p>Operations are dispatched to <code>backend</code> and <code>root_comm</code> or one of its clones. <code>dlg</code> (optional) receives notifications about reached horizons and epochs from the executor thread.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L49">include/live_executor.h:49</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;backend&gt;<b> backend</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;communicator&gt;<b> root_comm</b></dt><dt class="is-family-code"><a href="/docs/api/records/AFF9009734443E53/">delegate</a>*<b> dlg</b></dt><dt class="is-family-code">const <a href="/docs/api/records/CFC576B364A649D2/">policy_set</a>&amp;<b> policy</b> = default_policy_set()</dt></dl><hr class="member-fun-separator"></hr><h3 id="9B8DA339647A0DC8" data-function-name="live_executor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9B8DA339647A0DC8">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>(const live_executor&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L52">include/live_executor.h:52</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="B40312428AD1A7D5" data-function-name="live_executor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#B40312428AD1A7D5">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>(live_executor&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L53">include/live_executor.h:53</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="F8569B4A87FCC25E" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#F8569B4A87FCC25E">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>&amp; operator=(const <a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L54">include/live_executor.h:54</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="35EE645664D07992" data-function-name="operator="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#35EE645664D07992">\xb6</a><code class="hdoc-function-code language-cpp"><a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>&amp; operator=(<a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>&amp;&amp;)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L55">include/live_executor.h:55</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/8656C5CDC759BB92/">live_executor</a>&amp;&amp;<b> </b></dt></dl><hr class="member-fun-separator"></hr><h3 id="1B7C0DA10B71FED6" data-function-name="submit"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#1B7C0DA10B71FED6">\xb6</a><code class="hdoc-function-code language-cpp">void submit(\n    <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;const instruction*&gt; instructions,\n    <a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;outbound_pilot&gt; pilots)</code></pre></h3><h4>Description</h4><p><p>Submits a list of instructions to execute once their dependencies have been fulfilled, and a list of outbound pilots to be transmitted to their recipients as soon as possible. Instructions must be in topological order of dependencies, as must be the concatenation of all vectors passed to subsequent invocations of this function.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L63">include/live_executor.h:63</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;const instruction*&gt;<b> instructions</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/container/vector">std::vector</a>&lt;outbound_pilot&gt;<b> pilots</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="3411D81D5E4BD6DE" data-function-name="track_host_object_instance"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3411D81D5E4BD6DE">\xb6</a><code class="hdoc-function-code language-cpp">void track_host_object_instance(\n    <a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a> hoid,\n    <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;host_object_instance&gt;\n        instance)</code></pre></h3><h4>Description</h4><p><p>Transfer ownership of a host object instance to the executor. The executor will later destroy this instance when executing a matching destroy_host_object_instruction.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L60">include/live_executor.h:60</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/A0E5B68259E332A7/">host_object_id</a><b> hoid</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;host_object_instance&gt;<b> instance</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="BF958C7E4DB5D36A" data-function-name="track_reducer"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BF958C7E4DB5D36A">\xb6</a><code class="hdoc-function-code language-cpp">void track_reducer(\n    <a href="/docs/api/records/6DD6FF2C7DDED129/">reduction_id</a> rid,\n    <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;reducer&gt; reducer)</code></pre></h3><h4>Description</h4><p><p>Informs the executor about the runtime behavior of a reduction. Will be used by any fill_identity_instruction and reduce_instruction later submitted on the same reduction_id. Reducer instances are removed from executor tracking and destroyed when they later appear in an instruction_garbage list attached to a horizon or epoch instruction.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L61">include/live_executor.h:61</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/6DD6FF2C7DDED129/">reduction_id</a><b> rid</b></dt><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;reducer&gt;<b> reducer</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="9254EE130429DCAB" data-function-name="track_user_allocation"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9254EE130429DCAB">\xb6</a><code class="hdoc-function-code language-cpp">void track_user_allocation(<a href="/docs/api/records/1824FC8BEBAA39C7/">allocation_id</a> aid,\n                           void* ptr)</code></pre></h3><h4>Description</h4><p><p>Informs the executor about the runtime address of an allocation on user_memory_id. Must be called before submitting any instruction referring to the allocation id in question. User allocations are later removed from executor tracking as they appear in an instruction_garbage list attached to a horizon or epoch instruction.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L59">include/live_executor.h:59</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="/docs/api/records/1824FC8BEBAA39C7/">allocation_id</a><b> aid</b></dt><dt class="is-family-code">void*<b> ptr</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="8EF65E5A7BF496B2" data-function-name="~live_executor"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#8EF65E5A7BF496B2">\xb6</a><code class="hdoc-function-code language-cpp">~live_executor()</code></pre></h3><h4>Description</h4><p><p>Waits until an epoch with <code>epoch_action::shutdown</code> has executed and the executor thread has exited.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L57">include/live_executor.h:57</a></p><hr class="member-fun-separator"></hr><h3 id="6798F9159B92401E" data-function-name="default_policy_set"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#6798F9159B92401E">\xb6</a><code class="hdoc-function-code language-cpp">static constexpr <a href="/docs/api/records/CFC576B364A649D2/">policy_set</a> default_policy_set()</code></pre></h3><h4>Description</h4><p><p>Default-constructs a <code>policy_set</code> - this must be a function because we can\'t use the implicit default constructor of <code>policy_set</code>, which has member initializers, within its surrounding class (Clang diagnostic).</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L76">include/live_executor.h:76</a></p><hr class="member-fun-separator"></hr><h3 id="9DF740AE015CFFF8" data-function-name="thread_main"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#9DF740AE015CFFF8">\xb6</a><code class="hdoc-function-code language-cpp">void thread_main(<a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;backend&gt; backend,\n                 <a href="/docs/api/records/AFF9009734443E53/">delegate</a>* dlg,\n                 const <a href="/docs/api/records/CFC576B364A649D2/">policy_set</a>&amp; policy)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/live_executor.h#L72">include/live_executor.h:72</a></p><h4>Parameters</h4><dl><dt class="is-family-code"><a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;backend&gt;<b> backend</b></dt><dt class="is-family-code"><a href="/docs/api/records/AFF9009734443E53/">delegate</a>*<b> dlg</b></dt><dt class="is-family-code">const <a href="/docs/api/records/CFC576B364A649D2/">policy_set</a>&amp;<b> policy</b></dt></dl><hr class="member-fun-separator"></hr></main>',i={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class live_executor"},s=void 0,l={id:"api/records/8656C5CDC759BB92",title:"class live_executor",description:"",source:"@site/celerity-runtime/docs/api/records/8656C5CDC759BB92.mdx",sourceDirName:"api/records",slug:"/api/records/8656C5CDC759BB92",permalink:"/docs/api/records/8656C5CDC759BB92",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class live_executor"},sidebar:"api"},n={},d=[];function p(e){const{Head:a}={...(0,r.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a,{children:[(0,t.jsx)("script",{src:"/js/highlight.min.js"}),(0,t.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,t.jsx)("div",{dangerouslySetInnerHTML:{__html:o}})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,a,c)=>{c.d(a,{R:()=>i,x:()=>s});var t=c(96540);const r={},o=t.createContext(r);function i(e){const a=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:a},e.children)}}}]);