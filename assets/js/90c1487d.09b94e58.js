"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[79185],{55678:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var n=a(74848),i=a(28453);const r='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li class="is-active"><a aria-current="pageBE839DEECA5D44E2"><span>function reduce_over_group</span></a></li></ul></nav>\n<main><h3 id="BE839DEECA5D44E2" data-function-name="reduce_over_group"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BE839DEECA5D44E2">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int Dims,\n          typename V,\n          typename T,\n          typename BinaryOperation&gt;\nT reduce_over_group(const group&lt;Dims&gt;&amp; g,\n                    V x,\n                    T init,\n                    BinaryOperation binary_op)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/item.h#L412">include/item.h:412</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> V</b></dt><dt class="is-family-code"><b> T</b></dt><dt class="is-family-code"><b> BinaryOperation</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const group&lt;Dims&gt;&amp;<b> g</b></dt><dt class="is-family-code">V<b> x</b></dt><dt class="is-family-code">T<b> init</b></dt><dt class="is-family-code">BinaryOperation<b> binary_op</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="5599D395F3D447D9" data-function-name="reduce_over_group"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#5599D395F3D447D9">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;int Dims,\n          typename T,\n          typename BinaryOperation&gt;\nT reduce_over_group(const group&lt;Dims&gt;&amp; g,\n                    T x,\n                    BinaryOperation binary_op)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/item.h#L407">include/item.h:407</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code">int<b> Dims</b></dt><dt class="is-family-code"><b> T</b></dt><dt class="is-family-code"><b> BinaryOperation</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">const group&lt;Dims&gt;&amp;<b> g</b></dt><dt class="is-family-code">T<b> x</b></dt><dt class="is-family-code">BinaryOperation<b> binary_op</b></dt></dl><hr class="member-fun-separator"></hr></main>',s={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function reduce_over_group"},c=void 0,o={id:"api/functions/celerity-reduce_over_group",title:"function reduce_over_group",description:"",source:"@site/celerity-runtime/docs/api/functions/celerity-reduce_over_group.mdx",sourceDirName:"api/functions",slug:"/api/functions/celerity-reduce_over_group",permalink:"/docs/api/functions/celerity-reduce_over_group",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"function reduce_over_group"},sidebar:"api"},l={},d=[];function p(e){const{Head:t}={...(0,i.R)(),...e.components};return t||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t,{children:[(0,n.jsx)("script",{src:"/js/highlight.min.js"}),(0,n.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,n.jsx)("div",{dangerouslySetInnerHTML:{__html:r}})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>c});var n=a(96540);const i={},r=n.createContext(i);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);