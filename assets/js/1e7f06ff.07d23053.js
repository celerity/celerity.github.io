"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[16376],{80820:(e,s,c)=>{c.r(s),c.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>d});var a=c(74848),t=c(28453);const r='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li><a href="/docs/api/namespaces/#4F65C69941864C36"><span>namespace access</span></a></li><li class="is-active"><a aria-current="pageFB8444D41659527A"><span>struct mode_traits</span></a></li></ul></nav>\n<main><h1>struct mode_traits</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct mode_traits { /* full declaration omitted */ };</code></pre><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/access_modes.h#L18">include/access_modes.h:18</a></p></aside><section></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#459AC0221FEC9822"><b>is_consumer</b></a>(sycl::access::mode m) &rarr; static constexpr bool</li><li class="is-family-code"><a href="#C20CC6182A5DC4DF"><b>is_producer</b></a>(sycl::access::mode m) &rarr; static constexpr bool</li><li class="is-family-code"><a href="#3EC00C334663739F"><b>is_pure_consumer</b></a>(sycl::access::mode m) &rarr; static constexpr bool</li><li class="is-family-code"><a href="#3B3FA89B28FDA406"><b>name</b></a>(sycl::access::mode m) &rarr; static constexpr const char *</li></ul></section><section><h2>Member Functions</h2><section><h3 id="459AC0221FEC9822" data-function-name="is_consumer"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#459AC0221FEC9822">\xb6</a><code class="hdoc-function-code language-cpp">static constexpr bool is_consumer(\n    sycl::access::mode m)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/access_modes.h#L24">include/access_modes.h:24</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">sycl::access::mode<b> m</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="C20CC6182A5DC4DF" data-function-name="is_producer"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#C20CC6182A5DC4DF">\xb6</a><code class="hdoc-function-code language-cpp">static constexpr bool is_producer(\n    sycl::access::mode m)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/access_modes.h#L19">include/access_modes.h:19</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">sycl::access::mode<b> m</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="3EC00C334663739F" data-function-name="is_pure_consumer"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3EC00C334663739F">\xb6</a><code class="hdoc-function-code language-cpp">static constexpr bool is_pure_consumer(\n    sycl::access::mode m)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/access_modes.h#L29">include/access_modes.h:29</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">sycl::access::mode<b> m</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="3B3FA89B28FDA406" data-function-name="name"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#3B3FA89B28FDA406">\xb6</a><code class="hdoc-function-code language-cpp">static constexpr const char* name(\n    sycl::access::mode m)</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/access_modes.h#L31">include/access_modes.h:31</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">sycl::access::mode<b> m</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',i={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct mode_traits"},o=void 0,n={id:"api/records/FB8444D41659527A",title:"struct mode_traits",description:"",source:"@site/celerity-runtime/docs/api/records/FB8444D41659527A.mdx",sourceDirName:"api/records",slug:"/api/records/FB8444D41659527A",permalink:"/docs/api/records/FB8444D41659527A",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct mode_traits"},sidebar:"api"},l={},d=[];function m(e){const{Head:s}={...(0,t.R)(),...e.components};return s||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s,{children:[(0,a.jsx)("script",{src:"/js/highlight.min.js"}),(0,a.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:r}})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},28453:(e,s,c)=>{c.d(s,{R:()=>i,x:()=>o});var a=c(96540);const t={},r=a.createContext(t);function i(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);