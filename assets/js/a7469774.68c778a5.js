"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6296],{64287:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>p});var n=s(74848),r=s(28453);const i='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li class="is-active"><a aria-current="pageCAAB0D31AD8DCA10"><span>struct instruction_id_less</span></a></li></ul></nav>\n<main><h1>struct instruction_id_less</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct instruction_id_less { /* full declaration omitted */ };</code></pre><section><h2>Description</h2><p><p>Orders instruction pointers by instruction id.</p>\n</p></section><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L56">include/instruction_graph.h:56</a></p></aside><section></section><section><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#97D05137F79EA2FE"><b>operator()</b></a>(const instruction * lhs, const instruction * rhs) const &rarr; bool</li><li class="is-family-code"><a href="#CDCBFC4D796209B6"><b>operator()</b></a>(const std::unique_ptr&lt;instruction&gt; &amp; lhs, const std::unique_ptr&lt;instruction&gt; &amp; rhs) const &rarr; bool</li></ul></section><section><h2>Member Functions</h2><section><h3 id="97D05137F79EA2FE" data-function-name="operator()"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#97D05137F79EA2FE">\xb6</a><code class="hdoc-function-code language-cpp">bool operator()(const <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* lhs,\n                const <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>* rhs) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L57">include/instruction_graph.h:57</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/406117B5A814B8B4/">instruction</a>*<b> rhs</b></dt></dl></section></section><hr class="member-fun-separator"></hr><section><h3 id="CDCBFC4D796209B6" data-function-name="operator()"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CDCBFC4D796209B6">\xb6</a><code class="hdoc-function-code language-cpp">bool operator()(\n    const <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;instruction&gt;&amp; lhs,\n    const <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;instruction&gt;&amp; rhs) const</code></pre></h3><aside><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/instruction_graph.h#L58">include/instruction_graph.h:58</a></p></aside><section><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;instruction&gt;&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="https://en.cppreference.com/w/cpp/memory/unique_ptr">std::unique_ptr</a>&lt;instruction&gt;&amp;<b> rhs</b></dt></dl></section></section><hr class="member-fun-separator"></hr></section></main>',c={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct instruction_id_less"},a=void 0,o={id:"api/records/CAAB0D31AD8DCA10",title:"struct instruction_id_less",description:"",source:"@site/celerity-runtime/docs/api/records/CAAB0D31AD8DCA10.mdx",sourceDirName:"api/records",slug:"/api/records/CAAB0D31AD8DCA10",permalink:"/docs/api/records/CAAB0D31AD8DCA10",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct instruction_id_less"},sidebar:"api"},l={},p=[];function d(e){const{Head:t}={...(0,r.R)(),...e.components};return t||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t,{children:[(0,n.jsx)("script",{src:"/js/highlight.min.js"}),(0,n.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,n.jsx)("div",{dangerouslySetInnerHTML:{__html:i}})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var n=s(96540);const r={},i=n.createContext(r);function c(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);