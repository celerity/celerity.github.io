"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[14087],{49082:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>n,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>d});var t=s(74848),r=s(28453);const i='<!DOCTYPE html><html><head><meta charset="utf-8"></meta><meta content="width=device-width, initial-scale=1" name="viewport"></meta><title>struct communicator::stride: Celerity 0.6.0 documentation</title><link href="../styles.css" rel="stylesheet"></link><script src="../highlight.min.js"><\/script><script>hljs.highlightAll();<\/script><link href="../katex.min.css" rel="stylesheet"></link><script src="../katex.min.js"><\/script><script src="../auto-render.min.js"><\/script><script>\n      document.addEventListener("DOMContentLoaded", function() {\n        renderMathInElement(document.body, {\n          delimiters: [\n            {left: \'$$\', right: \'$$\', display: true},\n            {left: \'$\', right: \'$\', display: false},\n          ],\n        });\n      });\n    <\/script><link href="../apple-touch-icon.png" sizes="180x180" rel="apple-touch-icon"></link><link href="../favicon-32x32.png" sizes="32x32" type="image/png" rel="icon"></link><link href="../favicon-16x16.png" sizes="16x16" type="image/png" rel="icon"></link></head><body><div id="wrapper"><section class="section"><div class="container"><div class="columns"><aside class="column is-one-fifth"><ul class="menu-list"><p class="is-size-4">Celerity 0.6.0</p><p class="menu-label">Navigation</p><li><a href="../index/">Home</a></li><li><a href="../search/">Search</a></li><li><a href="https://github.com/celerity/celerity-runtime/">Repository</a></li><p class="menu-label">API Documentation</p><li><a href="/docs/api/namespaces/">Namespaces</a></li><li><a href="/docs/api/records/">Records</a></li><li><a href="/docs/api/enums/">Enums</a></li><li><a href="/docs/api/functions/">Functions</a></li><li><a href="/docs/api/aliases/">Aliases</a></li></ul></aside><div class="column" style="overflow-x: auto"><nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#06885D8AE2CD6C63"><span>namespace detail</span></a></li><li><a href="/docs/api/records/5445ADDDC225FF35/"><span>class communicator</span></a></li><li class="is-active"><a aria-current="page0E8486033E50D99A"><span>struct communicator::stride</span></a></li></ul></nav><main class="content"><h1>struct communicator::stride</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">struct communicator::stride { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>Addresses a 1/2/3-dimensional subrange of a type-erased (buffer) allocation to be sent from or received into.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/communicator.h#L20">include/communicator.h:20</a></p><h2>Member Variables</h2><dl><dt class="is-family-code" id="var_allocation_range" data-member-name="allocation_range">  <a href="/docs/api/records/B13622E7024342AF/">range</a>&lt;3&gt; <b>allocation_range</b></dt><dt class="is-family-code" id="var_transfer" data-member-name="transfer">  <a href="/docs/api/records/F64EF4DD57D1CC57/">subrange</a>&lt;3&gt; <b>transfer</b></dt><dt class="is-family-code" id="var_element_size" data-member-name="element_size">  size_t <b>element_size</b> = 1</dt></dl><h2>Friend Function Overview</h2><ul><li class="is-family-code"><a href="#CB8B9D43CCF7E4AD"><b>operator!=</b></a>(const stride &amp; lhs, const stride &amp; rhs) &rarr; friend bool</li><li class="is-family-code"><a href="#70AFD644B1C80237"><b>operator==</b></a>(const stride &amp; lhs, const stride &amp; rhs) &rarr; friend bool</li></ul><h2>Friend Functions</h2><h3 id="CB8B9D43CCF7E4AD" data-function-name="operator!="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CB8B9D43CCF7E4AD">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator!=(const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp; lhs,\n                       const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp; rhs)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/communicator.h#L28">include/communicator.h:28</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp;<b> rhs</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="70AFD644B1C80237" data-function-name="operator=="><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#70AFD644B1C80237">\xb6</a><code class="hdoc-function-code language-cpp">friend bool operator==(const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp; lhs,\n                       const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp; rhs)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/communicator.h#L25">include/communicator.h:25</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp;<b> lhs</b></dt><dt class="is-family-code">const <a href="/docs/api/records/0E8486033E50D99A/">stride</a>&amp;<b> rhs</b></dt></dl><hr class="member-fun-separator"></hr></main></div></div></div></section></div><footer class="footer"><p>Documentation for Celerity 0.6.0.</p><p>Generated by <a href="https://github.com/PeterTh/hdoc">&#129388;doc</a> version 1.5-internal on 2024-08-13T12:22:54 UTC.</p><p class="has-text-grey-light">19AD43E11B2996</p></footer></body></html>',c={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct communicator::stride"},n=void 0,o={id:"api/records/0E8486033E50D99A",title:"struct communicator::stride",description:"",source:"@site/celerity-runtime/docs/api/records/0E8486033E50D99A.mdx",sourceDirName:"api/records",slug:"/api/records/0E8486033E50D99A",permalink:"/docs/api/records/0E8486033E50D99A",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"struct communicator::stride"},sidebar:"api"},l={},d=[];function p(e){const{Head:a}={...(0,r.R)(),...e.components};return a||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a,{children:[(0,t.jsx)("script",{src:"/js/highlight.min.js"}),(0,t.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,t.jsx)("div",{dangerouslySetInnerHTML:{__html:i}})]})}function m(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>c,x:()=>n});var t=s(96540);const r={},i=t.createContext(r);function c(e){const a=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function n(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);