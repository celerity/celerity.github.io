"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[11232],{35698:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>d});var s=a(74848),c=a(28453);const o='<nav class="breadcrumb has-arrow-separator" aria-label="breadcrumbs"><ul><li><a href="/docs/api/namespaces/#95420D3AD49404C0"><span>namespace celerity</span></a></li><li><a href="/docs/api/namespaces/#36211E2D24C9AB8E"><span>namespace experimental</span></a></li><li class="is-active"><a aria-current="pageEFCC0F2026173774"><span>class host_object</span></a></li></ul></nav>\n<main><h1>class host_object</h1><h2>Declaration</h2><pre class="p-0"><code class="hdoc-record-code language-cpp">template &lt;typename T&gt;\nclass host_object { /* full declaration omitted */ };</code></pre><h2>Description</h2><p><p>A <code>host_object</code> wraps state that exists separately on each worker node and can be referenced in host tasks through <code>side_effect</code>s. Celerity ensures that access to the object state is properly synchronized and ordered. An example usage of a host object might be a file stream that is written to from multiple host tasks sequentially. - The generic <code>host_object &lt;T &gt;</code> keeps ownership of the state at any time and is the safest way to achieve side effects on the host. - The <code>host_object &lt;T &amp; &gt;</code> specialization attaches Celerity\'s tracking and synchronization mechanism to user-managed state. The user guarantees that the referenced object is not accessed in any way other than through a <code>side_effect</code> while the <code>host_object</code> is live. - <code>host_object &lt;void &gt;</code> does not carry internal state and can be used to track access to global variables or functions like <code>printf()</code>.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/host_object.h#L93">include/host_object.h:93</a></p><h2>Template Parameters</h2><dl><dt class="is-family-code"><b> T</b></dt></dl><h2>Member Variables</h2><dl><dt class="is-family-code hdoc-private" id="var_m_tracker" data-member-name="m_tracker">  <a href="https://en.cppreference.com/w/cpp/memory/shared_ptr">std::shared_ptr</a>&lt;tracker&gt; <b>m_tracker</b></dt></dl><h2>Member Aliases</h2><ul><li class="is-family-code">using instance_type = T;</li></ul><h2>Member Function Overview</h2><ul><li class="is-family-code"><a href="#72736B8FFB9AA460"><b>host_object</b></a>()</li><li class="is-family-code"><a href="#BC3B7903A3D7271E"><b>host_object</b></a>(const instance_type &amp; obj) &rarr; explicit</li><li class="is-family-code"><a href="#4F2366E518E5E772"><b>host_object</b></a>(instance_type &amp;&amp; obj) &rarr; explicit</li><li class="is-family-code"><span class="hdoc-overview-template">template &lt;typename... CtorParams&gt;</span><br><a href="#CCB9D317DE12E0A4"><b>host_object</b></a>(std::in_place_t, CtorParams &amp;&amp;... ctor_args) &rarr; explicit</li></ul><h2>Member Functions</h2><h3 id="72736B8FFB9AA460" data-function-name="host_object"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#72736B8FFB9AA460">\xb6</a><code class="hdoc-function-code language-cpp">host_object()</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/host_object.h#L99">include/host_object.h:99</a></p><hr class="member-fun-separator"></hr><h3 id="BC3B7903A3D7271E" data-function-name="host_object"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#BC3B7903A3D7271E">\xb6</a><code class="hdoc-function-code language-cpp">explicit host_object(const instance_type&amp; obj)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/host_object.h#L100">include/host_object.h:100</a></p><h4>Parameters</h4><dl><dt class="is-family-code">const instance_type&amp;<b> obj</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="4F2366E518E5E772" data-function-name="host_object"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#4F2366E518E5E772">\xb6</a><code class="hdoc-function-code language-cpp">explicit host_object(instance_type&amp;&amp; obj)</code></pre></h3><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/host_object.h#L101">include/host_object.h:101</a></p><h4>Parameters</h4><dl><dt class="is-family-code">instance_type&amp;&amp;<b> obj</b></dt></dl><hr class="member-fun-separator"></hr><h3 id="CCB9D317DE12E0A4" data-function-name="host_object"><pre class="p-0 hdoc-pre-parent"><a class="hdoc-permalink-icon" href="#CCB9D317DE12E0A4">\xb6</a><code class="hdoc-function-code language-cpp">template &lt;typename... CtorParams&gt;\nexplicit host_object(std::in_place_t,\n                     CtorParams&amp;&amp;... ctor_args)</code></pre></h3><h4>Description</h4><p><p>Constructs the object in-place with the given constructor arguments.</p>\n</p><p>Declared at: <a class="is-family-code" href="https://github.com/celerity/celerity-runtime/blob/master/include/host_object.h#L105">include/host_object.h:105</a></p><h4>Template Parameters</h4><dl><dt class="is-family-code"><b> CtorParams</b></dt></dl><h4>Parameters</h4><dl><dt class="is-family-code">std::in_place_t<b> </b></dt><dt class="is-family-code">CtorParams&amp;&amp;...<b> ctor_args</b></dt></dl><hr class="member-fun-separator"></hr></main>',r={hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class host_object"},i=void 0,n={id:"api/records/EFCC0F2026173774",title:"class host_object",description:"",source:"@site/celerity-runtime/docs/api/records/EFCC0F2026173774.mdx",sourceDirName:"api/records",slug:"/api/records/EFCC0F2026173774",permalink:"/docs/api/records/EFCC0F2026173774",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,pagination_next:null,pagination_prev:null,custom_edit_url:null,sidebar_class_name:"sidebar-hidden",title:"class host_object"},sidebar:"api"},l={},d=[];function h(e){const{Head:t}={...(0,c.R)(),...e.components};return t||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t,{children:[(0,s.jsx)("script",{src:"/js/highlight.min.js"}),(0,s.jsx)("script",{src:"/js/api_docs.js",defer:!0})]}),"\n",(0,s.jsx)("div",{dangerouslySetInnerHTML:{__html:o}})]})}function p(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>i});var s=a(96540);const c={},o=s.createContext(c);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);