"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[634],{3493:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=t(4848),s=t(8453);const r={id:"overview",title:"Overview",sidebar_label:"Overview"},o=void 0,a={id:"overview",title:"Overview",description:"Celerity Execution Overview",source:"@site/celerity-runtime/docs/overview.md",sourceDirName:".",slug:"/overview",permalink:"/docs/overview",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Peter Thoman",lastUpdatedAt:1689266617e3,frontMatter:{id:"overview",title:"Overview",sidebar_label:"Overview"},sidebar:"docs",previous:{title:"Issues & Limitations",permalink:"/docs/issues-and-limitations"},next:{title:"Core Principles",permalink:"/docs/core-principles"}},c={},l=[{value:"Celerity Execution Overview",id:"celerity-execution-overview",level:2}];function d(e){const n={a:"a",br:"br",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"celerity-execution-overview",children:"Celerity Execution Overview"}),"\n",(0,i.jsx)(n.p,{children:"The following diagram illustrates the basics of how programs are executed\ninternally by the Celerity runtime system:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Overview Image",src:t(9517).A+"",width:"2136",height:"923"})}),"\n",(0,i.jsxs)(n.p,{children:["Everything starts with the user program, which is executed in single program,\nmultipe data (SPMD) fashion by all MPI ranks. Whenever a relevant Celerity\nqueue operation -- such as ",(0,i.jsx)(n.code,{children:"submit"})," -- is encountered, the associated ",(0,i.jsx)(n.em,{children:"kernel"}),"\ncode is not executed directly. Instead, this code, together with some dependency\nand scheduling metainformation, is recorded in the Celerity ",(0,i.jsx)(n.strong,{children:"task graph"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Concurrently with the user program, a ",(0,i.jsx)(n.em,{children:"command generation thread"})," constructs a more\ndetailed ",(0,i.jsx)(n.strong,{children:"command graph"})," from existing task graph nodes. This command graph\nincludes individual instructions for the given node in the system, and also\nencodes all necessary data transfers to maintain a consistent view of data\nas it would be expected if the program were to be executed on a single node.",(0,i.jsx)(n.br,{}),"\n","In the Celerity ",(0,i.jsx)(n.strong,{children:"distributed scheduling"})," scheme (introduced with Celerity 0.4.0),\nonly the subset of the command graph necessary for executing locally relevant\ncommands is created on each node, so e.g. if nodes 0 and 1 communicate with each\nother locally, node 2 need not be aware of the related commands."]}),"\n",(0,i.jsxs)(n.p,{children:["On each node the jobs encoded within the command graph are asynchronously\nconsumed by ",(0,i.jsx)(n.strong,{children:"executor threads"}),", which finally leads to actually running the\ncomputations described by each kernel in the input program, distributed among\nthe GPUs in the cluster."]}),"\n",(0,i.jsx)(n.p,{children:"In order to make the entire process more clear, this illustration is simplified\nin several aspects:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The details of data allocations, exchange and execution are omitted."}),"\n",(0,i.jsx)(n.li,{children:"For this illustration, there are only three nodes in the system."}),"\n",(0,i.jsxs)(n.li,{children:["In practice, ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"../research",children:"Horizons"})}),"\nconstrain the tasks and commands being actively processed by the system into a sliding window."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Despite these simplifications, this illustration captures the basic execution\nprinciple of the Celerity runtime, and hopefully also makes the reasons for\nsome of the pitfalls described in the ",(0,i.jsx)(n.a,{href:"/docs/pitfalls",children:"Common Pitfalls"})," section\nmore clear."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},9517:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/overview_image-911475e0b3efef2a6f99cb9c15523aa8.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);